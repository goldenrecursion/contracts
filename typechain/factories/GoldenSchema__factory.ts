/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GoldenSchema, GoldenSchemaInterface } from "../GoldenSchema";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "initialPredicates",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "predicateCID",
        type: "bytes32",
      },
    ],
    name: "addPredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    name: "predicateIDToLatestCID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "predicates",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
    ],
    name: "removePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "predicateCID",
        type: "bytes32",
      },
    ],
    name: "updatePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e7038038062000e7083398101604081905262000034916200039d565b6200003f33620000bd565b805160005b81811015620000b4576200009f8382815181106200006657620000666200048f565b6020026020010151600001518483815181106200008757620000876200048f565b6020026020010151602001516200010d60201b60201c565b80620000ab81620004a5565b91505062000044565b505050620004cf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001176200017a565b62000132826001620001dc60201b6200044f1790919060201c565b6001600160801b03198216600081815260036020526040808220849055518392917fddbd9c69ad18561fc7cf11ff7be612fea0c255ddacedce5a41dd21a65a24ae8591a35050565b6000546001600160a01b03163314620001da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b565b620001e88282620002a8565b156200024a5760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b6064820152608401620001d1565b600182810180546001600160801b0319841660009081526020958652604081208290558184018355918252939020600284040180546001600160801b03949092166010026101000a9384021990911660809290921c92909202179055565b6001820154600090620002be5750600062000323565b6001600160801b031982166000818152602085905260409020546001850180549091908110620002f257620002f26200048f565b90600052602060002090600291828204019190066010029054906101000a900460801b6001600160801b0319161490505b92915050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171562000364576200036462000329565b60405290565b604051601f8201601f191681016001600160401b038111828210171562000395576200039562000329565b604052919050565b60006020808385031215620003b157600080fd5b82516001600160401b0380821115620003c957600080fd5b818501915085601f830112620003de57600080fd5b815181811115620003f357620003f362000329565b62000403848260051b016200036a565b818152848101925060069190911b8301840190878211156200042457600080fd5b928401925b81841015620004845760408489031215620004445760008081fd5b6200044e6200033f565b84516001600160801b031981168114620004685760008081fd5b8152848601518682015283526040909301929184019162000429565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415620004c857634e487b7160e01b600052601160045260246000fd5b5060010190565b61099180620004df6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100db578063b4112e40146100f6578063d6b7636314610124578063f2fde38b1461013757600080fd5b806338b7a7d51461008d5780633c3efab4146100a2578063702f1f5d146100c0578063715018a6146100d3575b600080fd5b6100a061009b366004610803565b61014a565b005b6100aa61019a565b6040516100b7919061082d565b60405180910390f35b6100a06100ce366004610803565b610309565b6100a0610364565b6000546040516001600160a01b0390911681526020016100b7565b610116610104366004610886565b60036020526000908152604090205481565b6040519081526020016100b7565b6100a0610132366004610886565b610378565b6100a06101453660046108a8565b6103d1565b610152610517565b6001600160801b03198216600081815260036020526040808220849055518392917f115c3e1d5164e8f7d3fc558e8a290f058c709114555eed7426c3c3b9d7d7318591a35050565b60025460609060009067ffffffffffffffff8111156101bb576101bb6108d1565b60405190808252806020026020018201604052801561020057816020015b60408051808201909152600080825260208201528152602001906001900390816101d95790505b50905060005b8151811015610303576002805482908110610223576102236108e7565b90600052602060002090600291828204019190066010029054906101000a900460801b828281518110610258576102586108e7565b60209081029190910101516001600160801b03199091169052600280546003916000918490811061028b5761028b6108e7565b90600052602060002090600291828204019190066010029054906101000a900460801b6001600160801b0319166001600160801b0319168152602001908152602001600020548282815181106102e3576102e36108e7565b6020908102919091018101510152806102fb81610913565b915050610206565b50919050565b610311610517565b61031c60018361044f565b6001600160801b03198216600081815260036020526040808220849055518392917fddbd9c69ad18561fc7cf11ff7be612fea0c255ddacedce5a41dd21a65a24ae8591a35050565b61036c610517565b6103766000610571565b565b610380610517565b61038b6001826105c1565b6001600160801b031981166000818152600360205260408082205490519092917f0792080f73e0f4bd6ee184076e9f0924507e65f2aa6517aef7b6abd9bc45b96291a350565b6103d9610517565b6001600160a01b0381166104435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61044c81610571565b50565b610459828261076a565b156104b95760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b606482015260840161043a565b600182810180546001600160801b0319841660009081526020958652604081208290558184018355918252939020600284040180546001600160801b03949092166010026101000a9384021990911660809290921c92909202179055565b6000546001600160a01b031633146103765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161043a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105cb828261076a565b61062a5760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920646f6573206e6f74206578697374206960448201526937103a34329039b2ba1760b11b606482015260840161043a565b60006001610639846001015490565b610643919061092e565b6001600160801b0319831660009081526020859052604090205490915080821461070657600084600101838154811061067e5761067e6108e7565b6000918252602080832060028304015460019283166010026101000a900460801b6001600160801b031981168452908890526040909220849055860180549192508291849081106106d1576106d16108e7565b90600052602060002090600291828204019190066010026101000a8154816001600160801b03021916908360801c0217905550505b6001600160801b031983166000908152602085905260408120556001840180548061073357610733610945565b60008281526020902060026000199092019182040180546001600160801b03601060018516026101000a0219169055905550505050565b600182015460009061077e575060006107e0565b6001600160801b0319821660008181526020859052604090205460018501805490919081106107af576107af6108e7565b90600052602060002090600291828204019190066010029054906101000a900460801b6001600160801b0319161490505b92915050565b80356001600160801b0319811681146107fe57600080fd5b919050565b6000806040838503121561081657600080fd5b61081f836107e6565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b8281101561087957815180516001600160801b031916855286015186850152928401929085019060010161084a565b5091979650505050505050565b60006020828403121561089857600080fd5b6108a1826107e6565b9392505050565b6000602082840312156108ba57600080fd5b81356001600160a01b03811681146108a157600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610927576109276108fd565b5060010190565b600082821015610940576109406108fd565b500390565b634e487b7160e01b600052603160045260246000fdfea26469706673582212208de37f61e1840687e42c50387d40d8fe365946e8f27807650295d0ee43925cd664736f6c634300080b0033";

export class GoldenSchema__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialPredicates: { predicateID: BytesLike; latestCID: BytesLike }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenSchema> {
    return super.deploy(
      initialPredicates,
      overrides || {}
    ) as Promise<GoldenSchema>;
  }
  getDeployTransaction(
    initialPredicates: { predicateID: BytesLike; latestCID: BytesLike }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialPredicates, overrides || {});
  }
  attach(address: string): GoldenSchema {
    return super.attach(address) as GoldenSchema;
  }
  connect(signer: Signer): GoldenSchema__factory {
    return super.connect(signer) as GoldenSchema__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenSchemaInterface {
    return new utils.Interface(_abi) as GoldenSchemaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenSchema {
    return new Contract(address, _abi, signerOrProvider) as GoldenSchema;
  }
}
