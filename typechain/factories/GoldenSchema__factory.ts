/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GoldenSchema, GoldenSchemaInterface } from "../GoldenSchema";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "initialPredicates",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "predicateCID",
        type: "bytes32",
      },
    ],
    name: "addPredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    name: "predicateIDToLatestCID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "predicates",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
    ],
    name: "removePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "predicateCID",
        type: "bytes32",
      },
    ],
    name: "updatePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000eed38038062000eed833981016040819052620000349162000391565b6200003f33620000bd565b805160005b81811015620000b4576200009f83828151811062000066576200006662000483565b60200260200101516000015184838151811062000087576200008762000483565b6020026020010151602001516200010d60201b60201c565b80620000ab8162000499565b91505062000044565b505050620004c3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146200016d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b62000188826001620001d060201b620004fd1790919060201c565b6001600160801b03198216600081815260036020526040808220849055518392917fddbd9c69ad18561fc7cf11ff7be612fea0c255ddacedce5a41dd21a65a24ae8591a35050565b620001dc82826200029c565b156200023e5760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b606482015260840162000164565b600182810180546001600160801b0319841660009081526020958652604081208290558184018355918252939020600284040180546001600160801b03949092166010026101000a9384021990911660809290921c92909202179055565b6001820154600090620002b25750600062000317565b6001600160801b031982166000818152602085905260409020546001850180549091908110620002e657620002e662000483565b90600052602060002090600291828204019190066010029054906101000a900460801b6001600160801b0319161490505b92915050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156200035857620003586200031d565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200038957620003896200031d565b604052919050565b60006020808385031215620003a557600080fd5b82516001600160401b0380821115620003bd57600080fd5b818501915085601f830112620003d257600080fd5b815181811115620003e757620003e76200031d565b620003f7848260051b016200035e565b818152848101925060069190911b8301840190878211156200041857600080fd5b928401925b81841015620004785760408489031215620004385760008081fd5b6200044262000333565b84516001600160801b0319811681146200045c5760008081fd5b815284860151868201528352604090930192918401916200041d565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415620004bc57634e487b7160e01b600052601160045260246000fd5b5060010190565b610a1a80620004d36000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100db578063b4112e40146100f6578063d6b7636314610124578063f2fde38b1461013757600080fd5b806338b7a7d51461008d5780633c3efab4146100a2578063702f1f5d146100c0578063715018a6146100d3575b600080fd5b6100a061009b366004610857565b61014a565b005b6100aa6101c5565b6040516100b79190610881565b60405180910390f35b6100a06100ce366004610857565b610334565b6100a06103b1565b6000546040516001600160a01b0390911681526020016100b7565b6101166101043660046108da565b60036020526000908152604090205481565b6040519081526020016100b7565b6100a06101323660046108da565b6103e7565b6100a06101453660046108fc565b610462565b6000546001600160a01b0316331461017d5760405162461bcd60e51b815260040161017490610925565b60405180910390fd5b6001600160801b03198216600081815260036020526040808220849055518392917f115c3e1d5164e8f7d3fc558e8a290f058c709114555eed7426c3c3b9d7d7318591a35050565b60025460609060009067ffffffffffffffff8111156101e6576101e661095a565b60405190808252806020026020018201604052801561022b57816020015b60408051808201909152600080825260208201528152602001906001900390816102045790505b50905060005b815181101561032e57600280548290811061024e5761024e610970565b90600052602060002090600291828204019190066010029054906101000a900460801b82828151811061028357610283610970565b60209081029190910101516001600160801b0319909116905260028054600391600091849081106102b6576102b6610970565b90600052602060002090600291828204019190066010029054906101000a900460801b6001600160801b0319166001600160801b03191681526020019081526020016000205482828151811061030e5761030e610970565b6020908102919091018101510152806103268161099c565b915050610231565b50919050565b6000546001600160a01b0316331461035e5760405162461bcd60e51b815260040161017490610925565b6103696001836104fd565b6001600160801b03198216600081815260036020526040808220849055518392917fddbd9c69ad18561fc7cf11ff7be612fea0c255ddacedce5a41dd21a65a24ae8591a35050565b6000546001600160a01b031633146103db5760405162461bcd60e51b815260040161017490610925565b6103e560006105c5565b565b6000546001600160a01b031633146104115760405162461bcd60e51b815260040161017490610925565b61041c600182610615565b6001600160801b031981166000818152600360205260408082205490519092917f0792080f73e0f4bd6ee184076e9f0924507e65f2aa6517aef7b6abd9bc45b96291a350565b6000546001600160a01b0316331461048c5760405162461bcd60e51b815260040161017490610925565b6001600160a01b0381166104f15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610174565b6104fa816105c5565b50565b61050782826107be565b156105675760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b6064820152608401610174565b600182810180546001600160801b0319841660009081526020958652604081208290558184018355918252939020600284040180546001600160801b03949092166010026101000a9384021990911660809290921c92909202179055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61061f82826107be565b61067e5760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920646f6573206e6f74206578697374206960448201526937103a34329039b2ba1760b11b6064820152608401610174565b6000600161068d846001015490565b61069791906109b7565b6001600160801b0319831660009081526020859052604090205490915080821461075a5760008460010183815481106106d2576106d2610970565b6000918252602080832060028304015460019283166010026101000a900460801b6001600160801b0319811684529088905260409092208490558601805491925082918490811061072557610725610970565b90600052602060002090600291828204019190066010026101000a8154816001600160801b03021916908360801c0217905550505b6001600160801b0319831660009081526020859052604081205560018401805480610787576107876109ce565b60008281526020902060026000199092019182040180546001600160801b03601060018516026101000a0219169055905550505050565b60018201546000906107d257506000610834565b6001600160801b03198216600081815260208590526040902054600185018054909190811061080357610803610970565b90600052602060002090600291828204019190066010029054906101000a900460801b6001600160801b0319161490505b92915050565b80356001600160801b03198116811461085257600080fd5b919050565b6000806040838503121561086a57600080fd5b6108738361083a565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b828110156108cd57815180516001600160801b031916855286015186850152928401929085019060010161089e565b5091979650505050505050565b6000602082840312156108ec57600080fd5b6108f58261083a565b9392505050565b60006020828403121561090e57600080fd5b81356001600160a01b03811681146108f557600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156109b0576109b0610986565b5060010190565b6000828210156109c9576109c9610986565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220aed24f45cbfbb50aa3509fcd45da40c0c294c5231b612a09259e9456f1c2e37464736f6c634300080b0033";

export class GoldenSchema__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialPredicates: { predicateID: BytesLike; latestCID: BytesLike }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenSchema> {
    return super.deploy(
      initialPredicates,
      overrides || {}
    ) as Promise<GoldenSchema>;
  }
  getDeployTransaction(
    initialPredicates: { predicateID: BytesLike; latestCID: BytesLike }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialPredicates, overrides || {});
  }
  attach(address: string): GoldenSchema {
    return super.attach(address) as GoldenSchema;
  }
  connect(signer: Signer): GoldenSchema__factory {
    return super.connect(signer) as GoldenSchema__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenSchemaInterface {
    return new utils.Interface(_abi) as GoldenSchemaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenSchema {
    return new Contract(address, _abi, signerOrProvider) as GoldenSchema;
  }
}
