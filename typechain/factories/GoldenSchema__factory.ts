/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GoldenSchema, GoldenSchemaInterface } from "../GoldenSchema";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "initialPredicates",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "predicateCID",
        type: "bytes32",
      },
    ],
    name: "addPredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    name: "predicateIDToLatestCID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "predicates",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
    ],
    name: "removePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "predicateCID",
        type: "bytes32",
      },
    ],
    name: "updatePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000f0338038062000f03833981016040819052620000349162000341565b6200003f33620000d5565b805160005b81811015620000cc57620000b78382815181106200007257634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518483815181106200009f57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516200012560201b60201c565b80620000c3816200048c565b91505062000044565b505050620004ca565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b620001a0826001620001e860201b620004cd1790919060201c565b6001600160801b03198216600081815260036020526040808220849055518392917fddbd9c69ad18561fc7cf11ff7be612fea0c255ddacedce5a41dd21a65a24ae8591a35050565b620001f48282620002b4565b15620002565760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b60648201526084016200017c565b600182810180546001600160801b0319841660009081526020958652604081208290558184018355918252939020600284040180546001600160801b03949092166010026101000a9384021990911660809290921c92909202179055565b6001820154600090620002ca575060006200033b565b6001600160801b0319821660008181526020859052604090205460018501805490919081106200030a57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600291828204019190066010029054906101000a900460801b6001600160801b0319161490505b92915050565b6000602080838503121562000354578182fd5b82516001600160401b03808211156200036b578384fd5b818501915085601f8301126200037f578384fd5b815181811115620003945762000394620004b4565b620003a4848260051b0162000459565b8181528481019250838501600683901b85018601891015620003c4578687fd5b8694505b828510156200042257604080828b031215620003e2578788fd5b620003ec6200042e565b82516001600160801b0319811681146200040457898afd5b815282880151888201528552600195909501949386019301620003c8565b50979650505050505050565b604080519081016001600160401b0381118282101715620004535762000453620004b4565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004845762000484620004b4565b604052919050565b6000600019821415620004ad57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b610a2980620004da6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100db578063b4112e40146100f6578063d6b7636314610124578063f2fde38b1461013757600080fd5b806338b7a7d51461008d5780633c3efab4146100a2578063702f1f5d146100c0578063715018a6146100d3575b600080fd5b6100a061009b3660046108f4565b61014a565b005b6100aa6101c5565b6040516100b7919061091d565b60405180910390f35b6100a06100ce3660046108f4565b610304565b6100a0610381565b6000546040516001600160a01b0390911681526020016100b7565b6101166101043660046108da565b60036020526000908152604090205481565b6040519081526020016100b7565b6100a06101323660046108da565b6103b7565b6100a06101453660046108ac565b610432565b6000546001600160a01b0316331461017d5760405162461bcd60e51b815260040161017490610976565b60405180910390fd5b6001600160801b03198216600081815260036020526040808220849055518392917f115c3e1d5164e8f7d3fc558e8a290f058c709114555eed7426c3c3b9d7d7318591a35050565b60025460609060009067ffffffffffffffff8111156101f457634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561023957816020015b60408051808201909152600080825260208201528152602001906001900390816102125790505b50905060005b81518110156102fe57610253600182610595565b82828151811061027357634e487b7160e01b600052603260045260246000fd5b60209081029190910101516001600160801b031990911690526003600061029b600184610595565b6001600160801b0319166001600160801b0319168152602001908152602001600020548282815181106102de57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101510152806102f6816109c2565b91505061023f565b50919050565b6000546001600160a01b0316331461032e5760405162461bcd60e51b815260040161017490610976565b6103396001836104cd565b6001600160801b03198216600081815260036020526040808220849055518392917fddbd9c69ad18561fc7cf11ff7be612fea0c255ddacedce5a41dd21a65a24ae8591a35050565b6000546001600160a01b031633146103ab5760405162461bcd60e51b815260040161017490610976565b6103b560006105e6565b565b6000546001600160a01b031633146103e15760405162461bcd60e51b815260040161017490610976565b6103ec600182610636565b6001600160801b031981166000818152600360205260408082205490519092917f0792080f73e0f4bd6ee184076e9f0924507e65f2aa6517aef7b6abd9bc45b96291a350565b6000546001600160a01b0316331461045c5760405162461bcd60e51b815260040161017490610976565b6001600160a01b0381166104c15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610174565b6104ca816105e6565b50565b6104d78282610809565b156105375760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b6064820152608401610174565b600182810180546001600160801b0319841660009081526020958652604081208290558184018355918252939020600284040180546001600160801b03949092166010026101000a9384021990911660809290921c92909202179055565b60008260010182815481106105ba57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600291828204019190066010029054906101000a900460801b90505b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106408282610809565b61069f5760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920646f6573206e6f74206578697374206960448201526937103a34329039b2ba1760b11b6064820152608401610174565b600060016106ae846001015490565b6106b891906109ab565b6001600160801b0319831660009081526020859052604090205490915080821461079757600084600101838154811061070157634e487b7160e01b600052603260045260246000fd5b6000918252602080832060028304015460019283166010026101000a900460801b6001600160801b0319811684529088905260409092208490558601805491925082918490811061076257634e487b7160e01b600052603260045260246000fd5b90600052602060002090600291828204019190066010026101000a8154816001600160801b03021916908360801c0217905550505b6001600160801b03198316600090815260208590526040812055600184018054806107d257634e487b7160e01b600052603160045260246000fd5b60008281526020902060026000199092019182040180546001600160801b03601060018516026101000a0219169055905550505050565b600182015460009061081d575060006105e0565b6001600160801b03198216600081815260208590526040902054600185018054909190811061085c57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060028204015460019091166010026101000a900460801b6001600160801b031916149392505050565b80356001600160801b0319811681146108a757600080fd5b919050565b6000602082840312156108bd578081fd5b81356001600160a01b03811681146108d3578182fd5b9392505050565b6000602082840312156108eb578081fd5b6108d38261088f565b60008060408385031215610906578081fd5b61090f8361088f565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b8281101561096957815180516001600160801b031916855286015186850152928401929085019060010161093a565b5091979650505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000828210156109bd576109bd6109dd565b500390565b60006000198214156109d6576109d66109dd565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205b5c991574c693af46cbdd2334165db009b798ff4ff921c3d5da486cce64c3ee64736f6c63430008040033";

export class GoldenSchema__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialPredicates: { predicateID: BytesLike; latestCID: BytesLike }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenSchema> {
    return super.deploy(
      initialPredicates,
      overrides || {}
    ) as Promise<GoldenSchema>;
  }
  getDeployTransaction(
    initialPredicates: { predicateID: BytesLike; latestCID: BytesLike }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialPredicates, overrides || {});
  }
  attach(address: string): GoldenSchema {
    return super.attach(address) as GoldenSchema;
  }
  connect(signer: Signer): GoldenSchema__factory {
    return super.connect(signer) as GoldenSchema__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenSchemaInterface {
    return new utils.Interface(_abi) as GoldenSchemaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenSchema {
    return new Contract(address, _abi, signerOrProvider) as GoldenSchema;
  }
}
