/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GoldenSchema, GoldenSchemaInterface } from "../GoldenSchema";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "initialPredicates",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "initialEntityTypes",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "entityTypeHash",
        type: "bytes32",
      },
    ],
    name: "addEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "predicateHash",
        type: "bytes32",
      },
    ],
    name: "addPredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "predicateHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "entityTypeHash",
        type: "bytes32",
      },
    ],
    name: "addPredicateToEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entityTypes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "predicates",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "entityTypeHash",
        type: "bytes32",
      },
    ],
    name: "predicatesByEntityType",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "entityTypeHash",
        type: "bytes32",
      },
    ],
    name: "removeEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "predicateHash",
        type: "bytes32",
      },
    ],
    name: "removePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "predicateHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "entityTypeHash",
        type: "bytes32",
      },
    ],
    name: "removePredicateFromEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d4e38038062000d4e8339810160408190526200003491620003b3565b6200003f33620000eb565b815160005b818110156200008f576200007a8482815181106200006657620000666200041d565b60200260200101516200013b60201b60201c565b80620000868162000433565b91505062000044565b50815160005b81811015620000e057620000cb848281518110620000b757620000b76200041d565b6020026020010151620001a860201b60201c565b80620000d78162000433565b91505062000095565b50505050506200045d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146200018a5760405162461bcd60e51b8152602060048201819052602482015260008051602062000d2e83398151915260448201526064015b60405180910390fd5b620001a58160016200020e60201b620004e91790919060201c565b50565b6000546001600160a01b03163314620001f35760405162461bcd60e51b8152602060048201819052602482015260008051602062000d2e833981519152604482015260640162000181565b620001a58160036200020e60201b620004e91790919060201c565b6200021a8282620002a5565b156200027c5760405162461bcd60e51b815260206004820152602a60248201527f427974657333325365743a206b657920616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b606482015260840162000181565b600180830180546000848152602095865260408120829055928101825590825292902090910155565b6001820154600090620002bb57506000620002f3565b6000828152602084905260409020546001840180548492908110620002e457620002e46200041d565b90600052602060002001541490505b92915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200032157600080fd5b815160206001600160401b0380831115620003405762000340620002f9565b8260051b604051601f19603f83011681018181108482111715620003685762000368620002f9565b6040529384528581018301938381019250878511156200038757600080fd5b83870191505b84821015620003a8578151835291830191908301906200038d565b979650505050505050565b60008060408385031215620003c757600080fd5b82516001600160401b0380821115620003df57600080fd5b620003ed868387016200030f565b935060208501519150808211156200040457600080fd5b5062000413858286016200030f565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200045657634e487b7160e01b600052601160045260246000fd5b5060010190565b6108c1806200046d6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80634b41d614116100715780634b41d6141461012c57806352878b9f1461013f578063715018a6146101525780638da5cb5b1461015a578063ddc63bd614610175578063f2fde38b1461018857600080fd5b806257557a146100b857806302748999146100cd5780632562e43b146100e0578063262e3ee4146100fe5780633c3efab41461011157806345c03aea14610119575b600080fd5b6100cb6100c6366004610756565b61019b565b005b6100cb6100db366004610756565b6101dc565b6100e8610211565b6040516100f5919061076f565b60405180910390f35b6100cb61010c366004610756565b61026c565b6100e86102a1565b6100cb6101273660046107b3565b6102f9565b6100cb61013a3660046107b3565b61033f565b6100cb61014d366004610756565b610381565b6100cb6103b6565b6000546040516001600160a01b0390911681526020016100f5565b6100e8610183366004610756565b6103ec565b6100cb6101963660046107d5565b610451565b6000546001600160a01b031633146101ce5760405162461bcd60e51b81526004016101c590610805565b60405180910390fd5b6101d96001826104e9565b50565b6000546001600160a01b031633146102065760405162461bcd60e51b81526004016101c590610805565b6101d960038261057c565b6060600360010180548060200260200160405190810160405280929190818152602001828054801561026257602002820191906000526020600020905b81548152602001906001019080831161024e575b5050505050905090565b6000546001600160a01b031633146102965760405162461bcd60e51b81526004016101c590610805565b6101d960018261057c565b606060018001805480602002602001604051908101604052809291908181526020018280548015610262576020028201919060005260206000209081548152602001906001019080831161024e575050505050905090565b6000546001600160a01b031633146103235760405162461bcd60e51b81526004016101c590610805565b600081815260056020526040902061033b90836104e9565b5050565b6000546001600160a01b031633146103695760405162461bcd60e51b81526004016101c590610805565b600081815260056020526040902061033b908361057c565b6000546001600160a01b031633146103ab5760405162461bcd60e51b81526004016101c590610805565b6101d96003826104e9565b6000546001600160a01b031633146103e05760405162461bcd60e51b81526004016101c590610805565b6103ea60006106b7565b565b60008181526005602090815260409182902060010180548351818402810184019094528084526060939283018282801561044557602002820191906000526020600020905b815481526020019060010190808311610431575b50505050509050919050565b6000546001600160a01b0316331461047b5760405162461bcd60e51b81526004016101c590610805565b6001600160a01b0381166104e05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c5565b6101d9816106b7565b6104f38282610707565b156105535760405162461bcd60e51b815260206004820152602a60248201527f427974657333325365743a206b657920616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b60648201526084016101c5565b600180830180546000848152602095865260408120829055928101825590825292902090910155565b6105868282610707565b6105e55760405162461bcd60e51b815260206004820152602a60248201527f427974657333325365743a206b657920646f6573206e6f74206578697374206960448201526937103a34329039b2ba1760b11b60648201526084016101c5565b600060016105f4846001015490565b6105fe919061083a565b60008381526020859052604090205490915080821461067957600084600101838154811061062e5761062e61085f565b9060005260206000200154905081856000016000838152602001908152602001600020819055508085600101838154811061066b5761066b61085f565b600091825260209091200155505b6000838152602085905260408120556001840180548061069b5761069b610875565b6001900381819060005260206000200160009055905550505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600182015460009061071b57506000610750565b60008281526020849052604090205460018401805484929081106107415761074161085f565b90600052602060002001541490505b92915050565b60006020828403121561076857600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156107a75783518352928401929184019160010161078b565b50909695505050505050565b600080604083850312156107c657600080fd5b50508035926020909101359150565b6000602082840312156107e757600080fd5b81356001600160a01b03811681146107fe57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008282101561085a57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212200f91ddd5763ac1259dfee2c325adccde76f3f8b375e42b147cf439b7958251f364736f6c634300080b00334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572";

export class GoldenSchema__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialPredicates: BytesLike[],
    initialEntityTypes: BytesLike[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenSchema> {
    return super.deploy(
      initialPredicates,
      initialEntityTypes,
      overrides || {}
    ) as Promise<GoldenSchema>;
  }
  getDeployTransaction(
    initialPredicates: BytesLike[],
    initialEntityTypes: BytesLike[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialPredicates,
      initialEntityTypes,
      overrides || {}
    );
  }
  attach(address: string): GoldenSchema {
    return super.attach(address) as GoldenSchema;
  }
  connect(signer: Signer): GoldenSchema__factory {
    return super.connect(signer) as GoldenSchema__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenSchemaInterface {
    return new utils.Interface(_abi) as GoldenSchemaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenSchema {
    return new Contract(address, _abi, signerOrProvider) as GoldenSchema;
  }
}
