/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GoldenSchema, GoldenSchemaInterface } from "../GoldenSchema";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "initialPredicates",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "initialEntityTypes",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "entityType",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "predicates",
            type: "bytes32[]",
          },
        ],
        internalType: "struct GoldenSchema.PredicatesByEntityType[]",
        name: "initialPredicatesByEntityTypes",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "entityTypeHash",
        type: "bytes32",
      },
    ],
    name: "addEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "predicateHash",
        type: "bytes32",
      },
    ],
    name: "addPredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "predicateHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "entityTypeHash",
        type: "bytes32",
      },
    ],
    name: "addPredicateToEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entityTypes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "predicates",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "entityTypeHash",
        type: "bytes32",
      },
    ],
    name: "predicatesByEntityType",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "predicatesByEntityTypes",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "entityType",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "predicates",
            type: "bytes32[]",
          },
        ],
        internalType: "struct GoldenSchema.PredicatesByEntityType[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "entityTypeHash",
        type: "bytes32",
      },
    ],
    name: "removeEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "predicateHash",
        type: "bytes32",
      },
    ],
    name: "removePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "predicateHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "entityTypeHash",
        type: "bytes32",
      },
    ],
    name: "removePredicateFromEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011cb380380620011cb833981016040819052620000349162000551565b6200003f33620001c0565b825160005b818110156200008f576200007a8582815181106200006657620000666200069b565b60200260200101516200021060201b60201c565b806200008681620006b1565b91505062000044565b50825160005b81811015620000e057620000cb858281518110620000b757620000b76200069b565b60200260200101516200027d60201b60201c565b80620000d781620006b1565b91505062000095565b5060005b8351811015620001b45760005b8482815181106200010657620001066200069b565b602002602001015160200151518110156200019e57620001898583815181106200013457620001346200069b565b60200260200101516020015182815181106200015457620001546200069b565b60200260200101518684815181106200017157620001716200069b565b602002602001015160000151620002e360201b60201c565b806200019581620006b1565b915050620000f1565b5080620001ab81620006b1565b915050620000e4565b505050505050620006db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146200025f5760405162461bcd60e51b81526020600482018190526024820152600080516020620011ab83398151915260448201526064015b60405180910390fd5b6200027a8160016200035960201b6200060f1790919060201c565b50565b6000546001600160a01b03163314620002c85760405162461bcd60e51b81526020600482018190526024820152600080516020620011ab833981519152604482015260640162000256565b6200027a8160036200035960201b6200060f1790919060201c565b6000546001600160a01b031633146200032e5760405162461bcd60e51b81526020600482018190526024820152600080516020620011ab833981519152604482015260640162000256565b6000818152600560209081526040909120620003559184906200060f62000359821b17901c565b5050565b620003658282620003f0565b15620003c75760405162461bcd60e51b815260206004820152602a60248201527f427974657333325365743a206b657920616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b606482015260840162000256565b600180830180546000848152602095865260408120829055928101825590825292902090910155565b600182015460009062000406575060006200043e565b60008281526020849052604090205460018401805484929081106200042f576200042f6200069b565b90600052602060002001541490505b92915050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156200047f576200047f62000444565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620004b057620004b062000444565b604052919050565b60006001600160401b03821115620004d457620004d462000444565b5060051b60200190565b600082601f830112620004f057600080fd5b81516020620005096200050383620004b8565b62000485565b82815260059290921b840181019181810190868411156200052957600080fd5b8286015b848110156200054657805183529183019183016200052d565b509695505050505050565b6000806000606084860312156200056757600080fd5b83516001600160401b03808211156200057f57600080fd5b6200058d87838801620004de565b9450602091508186015181811115620005a557600080fd5b620005b388828901620004de565b945050604086015181811115620005c957600080fd5b8601601f81018813620005db57600080fd5b8051620005ec6200050382620004b8565b81815260059190911b8201840190848101908a8311156200060c57600080fd5b8584015b838110156200068a578051868111156200062a5760008081fd5b85016040818e03601f19011215620006425760008081fd5b6200064c6200045a565b888201518152604082015188811115620006665760008081fd5b620006768f8b83860101620004de565b828b01525084525091860191860162000610565b508096505050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b6000600019821415620006d457634e487b7160e01b600052601160045260246000fd5b5060010190565b610ac080620006eb6000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634b41d6141161008c5780638da5cb5b116100665780638da5cb5b14610175578063ddc63bd614610190578063eff1d1a6146101a3578063f2fde38b146101b857600080fd5b80634b41d6141461014757806352878b9f1461015a578063715018a61461016d57600080fd5b806257557a146100d357806302748999146100e85780632562e43b146100fb578063262e3ee4146101195780633c3efab41461012c57806345c03aea14610134575b600080fd5b6100e66100e136600461087c565b6101cb565b005b6100e66100f636600461087c565b61020c565b610103610241565b6040516101109190610895565b60405180910390f35b6100e661012736600461087c565b61029c565b6101036102d1565b6100e66101423660046108d9565b610329565b6100e66101553660046108d9565b61036f565b6100e661016836600461087c565b6103b1565b6100e66103e6565b6000546040516001600160a01b039091168152602001610110565b61010361019e36600461087c565b61041c565b6101ab610481565b60405161011091906108fb565b6100e66101c636600461099b565b610577565b6000546001600160a01b031633146101fe5760405162461bcd60e51b81526004016101f5906109cb565b60405180910390fd5b61020960018261060f565b50565b6000546001600160a01b031633146102365760405162461bcd60e51b81526004016101f5906109cb565b6102096003826106a2565b6060600360010180548060200260200160405190810160405280929190818152602001828054801561029257602002820191906000526020600020905b81548152602001906001019080831161027e575b5050505050905090565b6000546001600160a01b031633146102c65760405162461bcd60e51b81526004016101f5906109cb565b6102096001826106a2565b606060018001805480602002602001604051908101604052809291908181526020018280548015610292576020028201919060005260206000209081548152602001906001019080831161027e575050505050905090565b6000546001600160a01b031633146103535760405162461bcd60e51b81526004016101f5906109cb565b600081815260056020526040902061036b908361060f565b5050565b6000546001600160a01b031633146103995760405162461bcd60e51b81526004016101f5906109cb565b600081815260056020526040902061036b90836106a2565b6000546001600160a01b031633146103db5760405162461bcd60e51b81526004016101f5906109cb565b61020960038261060f565b6000546001600160a01b031633146104105760405162461bcd60e51b81526004016101f5906109cb565b61041a60006107dd565b565b60008181526005602090815260409182902060010180548351818402810184019094528084526060939283018282801561047557602002820191906000526020600020905b815481526020019060010190808311610461575b50505050509050919050565b60045460609060009067ffffffffffffffff8111156104a2576104a2610a00565b6040519080825280602002602001820160405280156104e857816020015b6040805180820190915260008152606060208201528152602001906001900390816104c05790505b50905060005b6004548110156105715760006003600101828154811061051057610510610a16565b9060005260206000200154905060006105288261041c565b905060405180604001604052808381526020018281525084848151811061055157610551610a16565b60200260200101819052505050808061056990610a42565b9150506104ee565b50919050565b6000546001600160a01b031633146105a15760405162461bcd60e51b81526004016101f5906109cb565b6001600160a01b0381166106065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f5565b610209816107dd565b610619828261082d565b156106795760405162461bcd60e51b815260206004820152602a60248201527f427974657333325365743a206b657920616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b60648201526084016101f5565b600180830180546000848152602095865260408120829055928101825590825292902090910155565b6106ac828261082d565b61070b5760405162461bcd60e51b815260206004820152602a60248201527f427974657333325365743a206b657920646f6573206e6f74206578697374206960448201526937103a34329039b2ba1760b11b60648201526084016101f5565b6000600161071a846001015490565b6107249190610a5d565b60008381526020859052604090205490915080821461079f57600084600101838154811061075457610754610a16565b9060005260206000200154905081856000016000838152602001908152602001600020819055508085600101838154811061079157610791610a16565b600091825260209091200155505b600083815260208590526040812055600184018054806107c1576107c1610a74565b6001900381819060005260206000200160009055905550505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600182015460009061084157506000610876565b600082815260208490526040902054600184018054849290811061086757610867610a16565b90600052602060002001541490505b92915050565b60006020828403121561088e57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156108cd578351835292840192918401916001016108b1565b50909695505050505050565b600080604083850312156108ec57600080fd5b50508035926020909101359150565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561098c57898403603f19018652825180518552880151888501889052805188860181905290890190839060608701905b808310156109775783518252928b019260019290920191908b0190610957565b50978a01979550505091870191600101610923565b50919998505050505050505050565b6000602082840312156109ad57600080fd5b81356001600160a01b03811681146109c457600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610a5657610a56610a2c565b5060010190565b600082821015610a6f57610a6f610a2c565b500390565b634e487b7160e01b600052603160045260246000fdfea264697066735822122050e73fc6a3c09e552e5f2872eeea3e463c65cb9ea0fba2e43d38030695dbc1df64736f6c634300080b00334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572";

export class GoldenSchema__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialPredicates: BytesLike[],
    initialEntityTypes: BytesLike[],
    initialPredicatesByEntityTypes: {
      entityType: BytesLike;
      predicates: BytesLike[];
    }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenSchema> {
    return super.deploy(
      initialPredicates,
      initialEntityTypes,
      initialPredicatesByEntityTypes,
      overrides || {}
    ) as Promise<GoldenSchema>;
  }
  getDeployTransaction(
    initialPredicates: BytesLike[],
    initialEntityTypes: BytesLike[],
    initialPredicatesByEntityTypes: {
      entityType: BytesLike;
      predicates: BytesLike[];
    }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialPredicates,
      initialEntityTypes,
      initialPredicatesByEntityTypes,
      overrides || {}
    );
  }
  attach(address: string): GoldenSchema {
    return super.attach(address) as GoldenSchema;
  }
  connect(signer: Signer): GoldenSchema__factory {
    return super.connect(signer) as GoldenSchema__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenSchemaInterface {
    return new utils.Interface(_abi) as GoldenSchemaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenSchema {
    return new Contract(address, _abi, signerOrProvider) as GoldenSchema;
  }
}
