/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakeableUpgradeable,
  StakeableUpgradeableInterface,
} from "../StakeableUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "_stakeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610487806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806323b6230214610067578063715018a6146100a35780637cb569de146100ad5780638da5cb5b146100c0578063eb36854e146100db578063f2fde38b146100ee575b600080fd5b610090610075366004610392565b6001600160a01b031660009081526065602052604090205490565b6040519081526020015b60405180910390f35b6100ab610101565b005b6100ab6100bb3660046103b4565b610140565b6033546040516001600160a01b03909116815260200161009a565b6100ab6100e93660046103de565b610203565b6100ab6100fc366004610392565b610289565b6033546001600160a01b031633146101345760405162461bcd60e51b815260040161012b906103f7565b60405180910390fd5b61013e6000610324565b565b6033546001600160a01b0316331461016a5760405162461bcd60e51b815260040161012b906103f7565b6001600160a01b0382166000908152606560205260409020548111156101d25760405162461bcd60e51b815260206004820152601760248201527f5f736c6173683a20657863656564732062616c616e6365000000000000000000604482015260640161012b565b6001600160a01b038216600090815260656020526040812080548392906101fa90849061042c565b90915550505050565b336000908152606560205260409020548111156102625760405162461bcd60e51b815260206004820152601960248201527f5f756e7374616b653a20657863656564732062616c616e636500000000000000604482015260640161012b565b336000908152606560205260408120805483929061028190849061042c565b909155505050565b6033546001600160a01b031633146102b35760405162461bcd60e51b815260040161012b906103f7565b6001600160a01b0381166103185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161012b565b61032181610324565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b038116811461038d57600080fd5b919050565b6000602082840312156103a457600080fd5b6103ad82610376565b9392505050565b600080604083850312156103c757600080fd5b6103d083610376565b946020939093013593505050565b6000602082840312156103f057600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008282101561044c57634e487b7160e01b600052601160045260246000fd5b50039056fea2646970667358221220c508407fd5967971b83c4f13cd11dd6028392e02959a492df502d2e69af8f97e64736f6c634300080b0033";

export class StakeableUpgradeable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakeableUpgradeable> {
    return super.deploy(overrides || {}) as Promise<StakeableUpgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StakeableUpgradeable {
    return super.attach(address) as StakeableUpgradeable;
  }
  connect(signer: Signer): StakeableUpgradeable__factory {
    return super.connect(signer) as StakeableUpgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeableUpgradeableInterface {
    return new utils.Interface(_abi) as StakeableUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakeableUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StakeableUpgradeable;
  }
}
