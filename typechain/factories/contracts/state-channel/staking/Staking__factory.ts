/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Staking,
  StakingInterface,
} from "../../../../contracts/state-channel/staking/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_reputationContractAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "costPerVoteMultiplier",
        type: "uint256",
      },
    ],
    name: "AgreementCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addedOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addedBy",
        type: "address",
      },
    ],
    name: "OwnerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "removedOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "removedBy",
        type: "address",
      },
    ],
    name: "OwnerRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "agreements",
    outputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "commitAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePerVoteMultiplier",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isClosed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "closeChannel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "getClaims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "getId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reputation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxReputation",
        type: "uint256",
      },
    ],
    name: "getVotePriceMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "lockedStake",
    outputs: [
      {
        internalType: "uint256",
        name: "lockedAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isUnlocked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPricePerVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumPricePerVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_commitAmount",
        type: "uint256",
      },
    ],
    name: "openChannel",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reputationContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_input",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_precision",
        type: "uint256",
      },
    ],
    name: "toPrecision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620011143803806200111483398101604081905262000034916200021f565b6200003f826200005b565b6001600160a01b031660805250600a6000556001805562000257565b62000068600682620000a1565b60405133906001600160a01b038316907fc82bdbbf677a2462f2a7e22e4ba9abd209496b69cd7b868b3b1d28f76e09a40a90600090a350565b6001600160a01b038116620000fd5760405162461bcd60e51b815260206004820152601360248201527f496e76616c69642030783020616464726573730000000000000000000000000060448201526064015b60405180910390fd5b6200010982826200017d565b15620001585760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401620000f4565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620001e25760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401620000f4565b506001600160a01b03166000908152602091909152604090205460ff1690565b80516001600160a01b03811681146200021a57600080fd5b919050565b600080604083850312156200023357600080fd5b6200023e8362000202565b91506200024e6020840162000202565b90509250929050565b608051610e9362000281600039600081816101da015281816109a90152610a1c0152610e936000f3fe6080604052600436106101025760003560e01c80637065cb4811610095578063c5d3e11d11610064578063c5d3e11d146103ba578063ce20372f146103da578063d0d46a0b146103fa578063fc7e286d14610430578063fd85b1a71461045d57600080fd5b80637065cb48146102e857806399249ad2146103085780639e1f68c714610328578063aaf5eb68146103a557600080fd5b80632f54bf6e116100d15780632f54bf6e14610214578063402914f5146102445780634c2ee09d146102715780634eab2dd41461029157600080fd5b80630844f7851461016757806309dfff3d14610190578063173825d9146101a65780631f54f729146101c857600080fd5b36610162573360009081526003602052604081208054349290610126908490610c03565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2005b600080fd5b34801561017357600080fd5b5061017d60005481565b6040519081526020015b60405180910390f35b34801561019c57600080fd5b5061017d60015481565b3480156101b257600080fd5b506101c66101c1366004610c32565b61047d565b005b3480156101d457600080fd5b506101fc7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610187565b34801561022057600080fd5b5061023461022f366004610c32565b6104b7565b6040519015158152602001610187565b34801561025057600080fd5b5061017d61025f366004610c32565b60056020526000908152604090205481565b34801561027d57600080fd5b506101c661028c366004610c4d565b6104ca565b34801561029d57600080fd5b506102d36102ac366004610c66565b60046020908152600092835260408084209091529082529020805460019091015460ff1682565b60408051928352901515602083015201610187565b3480156102f457600080fd5b506101c6610303366004610c32565b6105cb565b34801561031457600080fd5b5061017d610323366004610c90565b6105f9565b34801561033457600080fd5b50610379610343366004610c4d565b600260208190526000918252604090912080546001820154928201546003909201546001600160a01b0390911692919060ff1684565b604080516001600160a01b03909516855260208501939093529183015215156060820152608001610187565b3480156103b157600080fd5b5061017d601281565b3480156103c657600080fd5b5061017d6103d5366004610c66565b610662565b3480156103e657600080fd5b5061017d6103f5366004610c90565b6106af565b34801561040657600080fd5b5061017d610415366004610c32565b6001600160a01b031660009081526005602052604090205490565b34801561043c57600080fd5b5061017d61044b366004610c32565b60036020526000908152604090205481565b34801561046957600080fd5b5061017d610478366004610c4d565b6106cd565b610486336104b7565b6104ab5760405162461bcd60e51b81526004016104a290610cb2565b60405180910390fd5b6104b48161085d565b50565b60006104c46006836108a1565b92915050565b6104d3336104b7565b6104ef5760405162461bcd60e51b81526004016104a290610cb2565b600081815260026020908152604080832080546001600160a01b0316845260048352818420858552909252909120600181015460ff161580156105325750805415155b61057e5760405162461bcd60e51b815260206004820152601860248201527f636c6f73654368616e6e656c3a20696e76616c6964206964000000000000000060448201526064016104a2565b6001818101805460ff19169091179055805482546001600160a01b0316600090815260056020526040902055600382015460ff166105c65760038201805460ff191660011790555b505050565b6105d4336104b7565b6105f05760405162461bcd60e51b81526004016104a290610cb2565b6104b481610924565b60008061060960005460126106af565b9050600061061a60015460126106af565b9050600061062a86866012610968565b9050818161063a600160126106af565b6106449190610d00565b61064e9085610d13565b6106589190610c03565b9695505050505050565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905242605482015260009060740160405160208183030381529060405280519060200120905092915050565b60006106bc82600a610e16565b6106c69084610d13565b9392505050565b6000806106da3384610662565b33600081815260046020908152604080832085845282528083209383526003909152902054919250908411156107525760405162461bcd60e51b815260206004820152601b60248201527f6f70656e4368616e6e656c3a20696e76616c696420616d6f756e74000000000060448201526064016104a2565b600061075d33610987565b90506000610769610a18565b9050600061077783836105f9565b3360009081526003602052604081208054929350899290919061079b908490610d00565b9091555050868455604080516080810182523380825260208083018b8152838501868152600060608087018281528d8352600280875292899020975188546001600160a01b0319166001600160a01b039091161788559351600188015591519086015590516003909401805460ff19169415159490941790935583518981529081018b9052928301849052917f941d21e8df4a37dccc95f4a1a8fddd5971e1ceb6e8e94dc60cde1762fcc1e604910160405180910390a2509295945050505050565b610868600682610aa3565b60405133906001600160a01b038316907fe594d081b4382713733fe631966432c9cea5199afb2db5c3c1931f9f9300367990600090a350565b60006001600160a01b0382166109045760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016104a2565b506001600160a01b03166000908152602091909152604090205460ff1690565b61092f600682610b25565b60405133906001600160a01b038316907fc82bdbbf677a2462f2a7e22e4ba9abd209496b69cd7b868b3b1d28f76e09a40a90600090a350565b60008261097585846106af565b61097f9190610e22565b949350505050565b604051634e44d07160e11b81526001600160a01b0382811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690639c89a0e2906024016020604051808303816000875af11580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610e44565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166339066bf56040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9e9190610e44565b905090565b610aad82826108a1565b610b035760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b60648201526084016104a2565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b038116610b715760405162461bcd60e51b8152602060048201526013602482015272496e76616c696420307830206164647265737360681b60448201526064016104a2565b610b7b82826108a1565b15610bc85760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064016104a2565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b634e487b7160e01b600052601160045260246000fd5b808201808211156104c4576104c4610bed565b80356001600160a01b0381168114610c2d57600080fd5b919050565b600060208284031215610c4457600080fd5b6106c682610c16565b600060208284031215610c5f57600080fd5b5035919050565b60008060408385031215610c7957600080fd5b610c8283610c16565b946020939093013593505050565b60008060408385031215610ca357600080fd5b50508035926020909101359150565b6020808252602e908201527f4f776e6572526f6c653a2063616c6c657220646f6573206e6f7420686176652060408201526d746865204f776e657220726f6c6560901b606082015260800190565b818103818111156104c4576104c4610bed565b6000816000190483118215151615610d2d57610d2d610bed565b500290565b600181815b80851115610d6d578160001904821115610d5357610d53610bed565b80851615610d6057918102915b93841c9390800290610d37565b509250929050565b600082610d84575060016104c4565b81610d91575060006104c4565b8160018114610da75760028114610db157610dcd565b60019150506104c4565b60ff841115610dc257610dc2610bed565b50506001821b6104c4565b5060208310610133831016604e8410600b8410161715610df0575081810a6104c4565b610dfa8383610d32565b8060001904821115610e0e57610e0e610bed565b029392505050565b60006106c68383610d75565b600082610e3f57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610e5657600080fd5b505191905056fea2646970667358221220c7d17368dc864b67b20aea518bd46f0895e9b80ddff6deeab87700bb40bd878b64736f6c63430008100033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: string,
    _reputationContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      _owner,
      _reputationContractAddress,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    _owner: string,
    _reputationContractAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _reputationContractAddress,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
