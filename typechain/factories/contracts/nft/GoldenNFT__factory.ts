/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldenNFT,
  GoldenNFTInterface,
} from "../../../contracts/nft/GoldenNFT";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "goldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "GoldenTokenContractAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "BURNER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_ceramicIds",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_goldenTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "addBurners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "addMinters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "bulkBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "ceramicId",
            type: "string",
          },
          {
            internalType: "string",
            name: "entityId",
            type: "string",
          },
        ],
        internalType: "struct GoldenNFT.CeramicInfo[]",
        name: "infos",
        type: "tuple[]",
      },
    ],
    name: "bulkMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
    ],
    name: "doesCeramicIdExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCeramicId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCeramicIdsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getEntityId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGoldenTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "getTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "goldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
      {
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "removeBurners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "removeMinters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGoldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "setGoldenTokenContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061208f806100206000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806389d94ff31161011a578063ab55f1a0116100ad578063d3544d8f1161007c578063d3544d8f14610450578063d539139314610458578063d547741f1461046d578063e47d419b14610480578063f2fde38b1461049357600080fd5b8063ab55f1a014610404578063c4d66de814610417578063c6d246ee1461042a578063c87b56dd1461043d57600080fd5b806395d89b41116100e957806395d89b41146103ce5780639e1059b3146103d65780639e124d69146103e9578063a217fddf146103fc57600080fd5b806389d94ff3146103845780638aa0fdad146103975780638da5cb5b146103aa57806391d14854146103bb57600080fd5b806336568abe1161019d5780635f2603321161016c5780635f260332146103305780635fc1964f14610343578063715018a61461035657806371e2a6571461035e5780638638a46c1461037157600080fd5b806336568abe146102ee5780633ab84dd9146103015780633eaaf86b1461031457806342966c681461031d57600080fd5b8063248a9ca3116101d9578063248a9ca31461027c578063282c51f31461029f5780632a63b292146102b45780632f2ff15d146102d957600080fd5b806301ffc9a71461020b57806306fdde03146102335780630aebee27146102485780631e7663bc1461025b575b600080fd5b61021e6102193660046118a9565b6104a6565b60405190151581526020015b60405180910390f35b61023b6104dd565b60405161022a9190611923565b61023b610256366004611936565b61056f565b61026e61026936600461194f565b610611565b60405190815260200161022a565b61026e61028a366004611936565b60009081526097602052604090206001015490565b61026e60008051602061201a83398151915281565b60ca546001600160a01b03165b6040516001600160a01b03909116815260200161022a565b6102ec6102e73660046119dd565b61063c565b005b6102ec6102fc3660046119dd565b610666565b6102ec61030f366004611a50565b6106e9565b61026e60cb5481565b6102ec61032b366004611936565b610746565b6102ec61033e366004611afd565b6109ac565b6102ec610351366004611a50565b610a4f565b6102ec610aac565b6102ec61036c366004611a50565b610ac0565b61021e61037f36600461194f565b610b1d565b60ca546102c1906001600160a01b031681565b61026e6103a5366004611b88565b610b4c565b6033546001600160a01b03166102c1565b61021e6103c93660046119dd565b610d70565b61023b610d9b565b61023b6103e4366004611936565b610daa565b6102ec6103f7366004611c38565b610e56565b61026e600081565b61023b610412366004611936565b610ef7565b6102ec610425366004611afd565b610f17565b6102ec610438366004611c38565b611169565b61023b61044b366004611936565b611226565b60d15461026e565b61026e60008051602061203a83398151915281565b6102ec61047b3660046119dd565b61128f565b6102ec61048e366004611a50565b6112b4565b6102ec6104a1366004611afd565b611311565b60006001600160e01b03198216637965db0b60e01b14806104d757506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060cc80546104ec90611c7a565b80601f016020809104026020016040519081016040528092919081815260200182805461051890611c7a565b80156105655780601f1061053a57610100808354040283529160200191610565565b820191906000526020600020905b81548152906001019060200180831161054857829003601f168201915b5050505050905090565b600081815260ce6020526040902080546060919061058c90611c7a565b80601f01602080910402602001604051908101604052809291908181526020018280546105b890611c7a565b80156106055780601f106105da57610100808354040283529160200191610605565b820191906000526020600020905b8154815290600101906020018083116105e857829003601f168201915b50505050509050919050565b600060cf8383604051610625929190611cb4565b908152602001604051809103902054905092915050565b6000828152609760205260409020600101546106578161138a565b6106618383611394565b505050565b6001600160a01b03811633146106db5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106e5828261141a565b5050565b6106f1611481565b60005b81518110156106e557600082828151811061071157610711611cc4565b6020026020010151905061073360008051602061201a833981519152826114db565b508061073e81611cf0565b9150506106f4565b60008051602061201a83398151915261075e8161138a565b600082815260ce60205260409020805461077790611c7a565b90506000036107c15760405162461bcd60e51b8152602060048201526016602482015275313ab937103737b732bc34b9ba32b73a103a37b5b2b760511b60448201526064016106d2565b600082815260ce602052604080822081518083019092528054829082906107e790611c7a565b80601f016020809104026020016040519081016040528092919081815260200182805461081390611c7a565b80156108605780601f1061083557610100808354040283529160200191610860565b820191906000526020600020905b81548152906001019060200180831161084357829003601f168201915b5050505050815260200160018201805461087990611c7a565b80601f01602080910402602001604051908101604052809291908181526020018280546108a590611c7a565b80156108f25780601f106108c7576101008083540402835291602001916108f2565b820191906000526020600020905b8154815290600101906020018083116108d557829003601f168201915b50505091909252505081516020830151604051939450909290915060cf9061091b908490611d09565b908152604080516020928190038301902060009081905587815260ce909252812090610947828261185b565b61095560018301600061185b565b5050600160cb546109669190611d25565b60cb5560405185907f0382b2fef14b477d7957cef64d9f6ec53433de024d4e3c319194c7a554355e329061099d9085908590611d38565b60405180910390a25050505050565b6109b4611481565b6001600160a01b038116610a055760405162461bcd60e51b815260206004820152601860248201527716995c9bc81859191c995cdcc81b9bdd08185b1b1bddd95960421b60448201526064016106d2565b60ca80546001600160a01b0319166001600160a01b0383169081179091556040517fe2c34fba7a16caa93431a35c2f08f7f67264f0175978b111d35dbd9e014bb51690600090a250565b610a57611481565b60005b81518110156106e5576000828281518110610a7757610a77611cc4565b60200260200101519050610a9960008051602061203a8339815191528261141a565b5080610aa481611cf0565b915050610a5a565b610ab4611481565b610abe60006114e5565b565b610ac8611481565b60005b81518110156106e5576000828281518110610ae857610ae8611cc4565b60200260200101519050610b0a60008051602061203a833981519152826114db565b5080610b1581611cf0565b915050610acb565b600060d08383604051610b31929190611cb4565b9081526040519081900360200190205460ff16905092915050565b600060008051602061203a833981519152610b668161138a565b8351600003610bb75760405162461bcd60e51b815260206004820152601960248201527f636572616d696349642063616e6e6f7420626520656d7074790000000000000060448201526064016106d2565b8251600003610c085760405162461bcd60e51b815260206004820152601860248201527f656e7469747949642063616e6e6f7420626520656d707479000000000000000060448201526064016106d2565b6000610c1360c95490565b90508060cf85604051610c269190611d09565b9081526040805160209281900383018120939093558281018152878352818301879052600084815260ce909252902081518190610c639082611db4565b5060208201516001820190610c789082611db4565b505060c9805460010190555060d085604051610c949190611d09565b9081526040519081900360200190205460ff16610d1b57600160d086604051610cbd9190611d09565b908152604051908190036020019020805491151560ff1990921691909117905560d180546001810182556000919091527f695fb3134ad82c3b8022bc5464edd0bcc9424ef672b52245dcb6ab2374327ce301610d198682611db4565b505b60cb54610d29906001611e74565b60cb5560405181907fa927ac04d4d3734fe8f2c6d7e10171f210b004d3f2d2a4449bbc6a5f2e5427e390610d609088908890611d38565b60405180910390a2949350505050565b60009182526097602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060cd80546104ec90611c7a565b60d18181548110610dba57600080fd5b906000526020600020016000915090508054610dd590611c7a565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0190611c7a565b8015610e4e5780601f10610e2357610100808354040283529160200191610e4e565b820191906000526020600020905b815481529060010190602001808311610e3157829003601f168201915b505050505081565b60008051602061201a833981519152610e6e8161138a565b81610ead5760405162461bcd60e51b815260206004820152600f60248201526e62756c6b4275726e2030204e46547360881b60448201526064016106d2565b60005b82811015610ef1576000848483818110610ecc57610ecc611cc4565b905060200201359050610ede81610746565b5080610ee981611cf0565b915050610eb0565b50505050565b600081815260ce6020526040902060010180546060919061058c90611c7a565b600054610100900460ff1615808015610f375750600054600160ff909116105b80610f515750303b158015610f51575060005460ff166001145b610fb45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106d2565b6000805460ff191660011790558015610fd7576000805461ff0019166101001790555b6001600160a01b0382166110285760405162461bcd60e51b815260206004820152601860248201527716995c9bc81859191c995cdcc81b9bdd08185b1b1bddd95960421b60448201526064016106d2565b61103660c980546001019055565b61103e611537565b6110896040518060400160405280600d81526020016c476f6c64656e20456e7469747960981b81525060405180604001604052806004815260200163474c444560e01b815250611566565b60ca80546001600160a01b0319166001600160a01b0384161790556110ac611597565b6110b76000336114db565b6040805160018082528183019092526000916020808301908036833701905050905033816000815181106110ed576110ed611cc4565b60200260200101906001600160a01b031690816001600160a01b03168152505061111681610ac0565b61111f816106e9565b5080156106e5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60008051602061203a8339815191526111818161138a565b816111c05760405162461bcd60e51b815260206004820152600f60248201526e62756c6b4d696e742030204e46547360881b60448201526064016106d2565b60005b82811015610ef15760008484838181106111df576111df611cc4565b90506020028101906111f19190611e87565b6111fa90611e9d565b805160208201519192509061120f8282610b4c565b50505050808061121e90611cf0565b9150506111c3565b6060611231826115be565b6112765760405162461bcd60e51b81526020600482015260166024820152751d1bdad95b925908191bd95cc81b9bdd08195e1a5cdd60521b60448201526064016106d2565b600082815260ce60205260409020805461058c90611c7a565b6000828152609760205260409020600101546112aa8161138a565b610661838361141a565b6112bc611481565b60005b81518110156106e55760008282815181106112dc576112dc611cc4565b602002602001015190506112fe60008051602061201a8339815191528261141a565b508061130981611cf0565b9150506112bf565b611319611481565b6001600160a01b03811661137e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106d2565b611387816114e5565b50565b61138781336115e4565b61139e8282610d70565b6106e55760008281526097602090815260408083206001600160a01b03851684529091529020805460ff191660011790556113d63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6114248282610d70565b156106e55760008281526097602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6033546001600160a01b03163314610abe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d2565b6106e58282611394565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661155e5760405162461bcd60e51b81526004016106d290611f23565b610abe611648565b600054610100900460ff1661158d5760405162461bcd60e51b81526004016106d290611f23565b6106e58282611678565b600054610100900460ff16610abe5760405162461bcd60e51b81526004016106d290611f23565b600081815260ce6020526040812080548291906115da90611c7a565b9050119050919050565b6115ee8282610d70565b6106e557611606816001600160a01b031660146116b8565b6116118360206116b8565b604051602001611622929190611f6e565b60408051601f198184030181529082905262461bcd60e51b82526106d291600401611923565b600054610100900460ff1661166f5760405162461bcd60e51b81526004016106d290611f23565b610abe336114e5565b600054610100900460ff1661169f5760405162461bcd60e51b81526004016106d290611f23565b60cc6116ab8382611db4565b5060cd6106618282611db4565b606060006116c7836002611fe3565b6116d2906002611e74565b67ffffffffffffffff8111156116ea576116ea611a09565b6040519080825280601f01601f191660200182016040528015611714576020820181803683370190505b509050600360fc1b8160008151811061172f5761172f611cc4565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061175e5761175e611cc4565b60200101906001600160f81b031916908160001a9053506000611782846002611fe3565b61178d906001611e74565b90505b6001811115611805576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106117c1576117c1611cc4565b1a60f81b8282815181106117d7576117d7611cc4565b60200101906001600160f81b031916908160001a90535060049490941c936117fe81612002565b9050611790565b5083156118545760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106d2565b9392505050565b50805461186790611c7a565b6000825580601f10611877575050565b601f01602090049060005260206000209081019061138791905b808211156118a55760008155600101611891565b5090565b6000602082840312156118bb57600080fd5b81356001600160e01b03198116811461185457600080fd5b60005b838110156118ee5781810151838201526020016118d6565b50506000910152565b6000815180845261190f8160208601602086016118d3565b601f01601f19169290920160200192915050565b60208152600061185460208301846118f7565b60006020828403121561194857600080fd5b5035919050565b6000806020838503121561196257600080fd5b823567ffffffffffffffff8082111561197a57600080fd5b818501915085601f83011261198e57600080fd5b81358181111561199d57600080fd5b8660208285010111156119af57600080fd5b60209290920196919550909350505050565b80356001600160a01b03811681146119d857600080fd5b919050565b600080604083850312156119f057600080fd5b82359150611a00602084016119c1565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611a4857611a48611a09565b604052919050565b60006020808385031215611a6357600080fd5b823567ffffffffffffffff80821115611a7b57600080fd5b818501915085601f830112611a8f57600080fd5b813581811115611aa157611aa1611a09565b8060051b9150611ab2848301611a1f565b8181529183018401918481019088841115611acc57600080fd5b938501935b83851015611af157611ae2856119c1565b82529385019390850190611ad1565b98975050505050505050565b600060208284031215611b0f57600080fd5b611854826119c1565b600082601f830112611b2957600080fd5b813567ffffffffffffffff811115611b4357611b43611a09565b611b56601f8201601f1916602001611a1f565b818152846020838601011115611b6b57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611b9b57600080fd5b823567ffffffffffffffff80821115611bb357600080fd5b611bbf86838701611b18565b93506020850135915080821115611bd557600080fd5b50611be285828601611b18565b9150509250929050565b60008083601f840112611bfe57600080fd5b50813567ffffffffffffffff811115611c1657600080fd5b6020830191508360208260051b8501011115611c3157600080fd5b9250929050565b60008060208385031215611c4b57600080fd5b823567ffffffffffffffff811115611c6257600080fd5b611c6e85828601611bec565b90969095509350505050565b600181811c90821680611c8e57607f821691505b602082108103611cae57634e487b7160e01b600052602260045260246000fd5b50919050565b8183823760009101908152919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611d0257611d02611cda565b5060010190565b60008251611d1b8184602087016118d3565b9190910192915050565b818103818111156104d7576104d7611cda565b604081526000611d4b60408301856118f7565b8281036020840152611d5d81856118f7565b95945050505050565b601f82111561066157600081815260208120601f850160051c81016020861015611d8d5750805b601f850160051c820191505b81811015611dac57828155600101611d99565b505050505050565b815167ffffffffffffffff811115611dce57611dce611a09565b611de281611ddc8454611c7a565b84611d66565b602080601f831160018114611e175760008415611dff5750858301515b600019600386901b1c1916600185901b178555611dac565b600085815260208120601f198616915b82811015611e4657888601518255948401946001909101908401611e27565b5085821015611e645787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156104d7576104d7611cda565b60008235603e19833603018112611d1b57600080fd5b600060408236031215611eaf57600080fd5b6040516040810167ffffffffffffffff8282108183111715611ed357611ed3611a09565b816040528435915080821115611ee857600080fd5b611ef436838701611b18565b83526020850135915080821115611f0a57600080fd5b50611f1736828601611b18565b60208301525092915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611fa68160178501602088016118d3565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611fd78160288401602088016118d3565b01602801949350505050565b6000816000190483118215151615611ffd57611ffd611cda565b500290565b60008161201157612011611cda565b50600019019056fe3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8489f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6a264697066735822122087e790c09aacc890987953c2c0eb53900572fcb5d90172e8a50ae2a61012e56264736f6c63430008100033";

type GoldenNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldenNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldenNFT__factory extends ContractFactory {
  constructor(...args: GoldenNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenNFT> {
    return super.deploy(overrides || {}) as Promise<GoldenNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GoldenNFT {
    return super.attach(address) as GoldenNFT;
  }
  override connect(signer: Signer): GoldenNFT__factory {
    return super.connect(signer) as GoldenNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenNFTInterface {
    return new utils.Interface(_abi) as GoldenNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenNFT {
    return new Contract(address, _abi, signerOrProvider) as GoldenNFT;
  }
}
