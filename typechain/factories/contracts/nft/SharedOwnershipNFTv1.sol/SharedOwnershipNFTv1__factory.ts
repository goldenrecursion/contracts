/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SharedOwnershipNFTv1,
  SharedOwnershipNFTv1Interface,
} from "../../../../contracts/nft/SharedOwnershipNFTv1.sol/SharedOwnershipNFTv1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "goldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "GoldenTokenContractAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "minStakeToMint",
        type: "uint256",
      },
    ],
    name: "MinStakeToMintsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "minterReward",
        type: "uint256",
      },
    ],
    name: "MinterRewardChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "treasuryAddress",
        type: "address",
      },
    ],
    name: "TreasuryAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "WeightAdded",
    type: "event",
  },
  {
    inputs: [],
    name: "CALC_PRECISION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_CONTRIBUTION_WEIGHT",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TREASURY_SHARE",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "addWeight",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "getContributorShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "getTokenWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
    ],
    name: "getWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "goldenTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasuryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_goldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minStakeToMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenId",
        type: "bytes32",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minterReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGoldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "setGoldenTokenContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMinStakedToMint",
        type: "uint256",
      },
    ],
    name: "setMinStakeToMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMinterReward",
        type: "uint256",
      },
    ],
    name: "setMinterReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061145c806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80635f260332116100c3578063a8e323c01161007c578063a8e323c0146102df578063adf2cead146102f2578063c5f956af14610305578063dcf4438d14610318578063de0dc4a31461032b578063f2fde38b1461033e57600080fd5b80635f2603321461028f5780636605bfda146102a2578063715018a6146102b55780638da5cb5b146102bd57806395d89b41146102ce5780639bdd7ac7146102d657600080fd5b806338a699a41161011557806338a699a4146101cf57806346b382e614610202578063485cc9551461022d5780634ae26521146102425780634dc70bac146102555780634e8ddd3a1461026f57600080fd5b806301f6eade1461015d57806306fdde031461017e578063160c8fbf1461019357806318160ddd146101aa5780632d40d8f4146101b357806332696174146101c6575b600080fd5b6101666103e881565b60405161ffff90911681526020015b60405180910390f35b610186610351565b60405161017591906111d9565b61019c606b5481565b604051908152602001610175565b61019c606d5481565b61019c6101c13660046110d1565b6103df565b61016661753081565b6101f26101dd3660046110fa565b60009081526066602052604090205460ff1690565b6040519015158152602001610175565b606a54610215906001600160a01b031681565b6040516001600160a01b039091168152602001610175565b61024061023b36600461109f565b61043f565b005b6102406102503660046110fa565b61067f565b61025d600381565b60405160ff9091168152602001610175565b61019c61027d3660046110fa565b60009081526065602052604090205490565b61024061029d36600461107e565b6106ba565b6102406102b036600461107e565b61070c565b61024061075e565b6033546001600160a01b0316610215565b610186610772565b61019c606c5481565b61019c6102ed366004611112565b61077f565b6102406103003660046110fa565b610804565b606954610215906001600160a01b031681565b6102406103263660046110fa565b610acc565b610240610339366004611134565b610b07565b61024061034c36600461107e565b610d96565b6067805461035e906113d5565b80601f016020809104026020016040519081016040528092919081815260200182805461038a906113d5565b80156103d75780601f106103ac576101008083540402835291602001916103d7565b820191906000526020600020905b8154815290600101906020018083116103ba57829003601f168201915b505050505081565b600081815260656020526040812080546103fb6003600a61130a565b6001600160a01b038616600090815260018401602052604090205461042091906113b6565b61042a919061129b565b6104359060646113b6565b9150505b92915050565b600054610100900460ff161580801561045f5750600054600160ff909116105b806104795750303b158015610479575060005460ff166001145b6104e15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610504576000805461ff0019166101001790555b61050c610e0f565b606980546001600160a01b038086166001600160a01b031992831617909255606a80549285169290911691909117905560408051808201909152600d8082526c476f6c64656e20456e7469747960981b602090920191825261057091606791610fc9565b5060408051808201909152600480825263474c444560e01b602090920191825261059c91606891610fc9565b50600a606c81905550816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156105e057600080fd5b505af11580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610618919061116d565b6106269060ff16600a6112fe565b61063190600a6113b6565b606b55801561067a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610687610e3e565b606c81905560405181907fe4325231d50465ecdb9e675941d5660b3b44f409c8899d50f6c458e650e6c56b90600090a250565b6106c2610e3e565b606a80546001600160a01b0319166001600160a01b0383169081179091556040517fe2c34fba7a16caa93431a35c2f08f7f67264f0175978b111d35dbd9e014bb51690600090a250565b610714610e3e565b606980546001600160a01b0319166001600160a01b0383169081179091556040517f9073dfac663173e64aa95665faedae52e2246f9bcdd3890fbfaf6733b46bba1390600090a250565b610766610e3e565b6107706000610e98565b565b6068805461035e906113d5565b60006001600160a01b0382166107d75760405162461bcd60e51b815260206004820152601f60248201527f436f6e7472696275746f722063616e6e6f74206265203020616464726573730060448201526064016104d8565b5060008281526065602090815260408083206001600160a01b038516845260010190915290205492915050565b606b54606a54604051630213119b60e51b815233600482015282916001600160a01b03169063426233609060240160206040518083038186803b15801561084a57600080fd5b505afa15801561085e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108829190611155565b10156108c45760405162461bcd60e51b8152602060048201526011602482015270139bdd08195b9bdd59da081cdd185ad959607a1b60448201526064016104d8565b604080518082018252600b81526a5374616b65206f66206d6560a81b6020820152606a549151630213119b60e51b8152336004820152610967926001600160a01b0316906342623360906024015b60206040518083038186803b15801561092a57600080fd5b505afa15801561093e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109629190611155565b610eea565b60008281526066602052604090205460ff16156109bf5760405162461bcd60e51b8152602060048201526016602482015275746f6b656e496420616c72656164792065786973747360501b60448201526064016104d8565b600082815260666020908152604091829020805460ff191660011790558151808301909252601182527036b4b73a103f1036b9b39739b2b73232b960791b90820152610a0b9033610f33565b6000828152606560209081526040808320606c5433855260018201909352922054610a369190611283565b336000908152600183016020526040902055606c548154610a579190611283565b815560408051808201909152601181527036b4b73a103f1036b9b39739b2b73232b960791b6020820152610a8b9033610f33565b606d54610a99906001611283565b606d5560405183907f28ab20602bd623131cf15795d8c9b75bf64baba8fca1dac448140b67e22837e390600090a2505050565b610ad4610e3e565b606b81905560405181907f99c2f2c991c8b41d0889161043c82ec8e0bffcc9b02960929265b9ff05e61f1090600090a250565b606b54606a54604051630213119b60e51b815233600482015282916001600160a01b03169063426233609060240160206040518083038186803b158015610b4d57600080fd5b505afa158015610b61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b859190611155565b1015610bc75760405162461bcd60e51b8152602060048201526011602482015270139bdd08195b9bdd59da081cdd185ad959607a1b60448201526064016104d8565b604080518082018252600b81526a5374616b65206f66206d6560a81b6020820152606a549151630213119b60e51b8152336004820152610c19926001600160a01b031690634262336090602401610912565b60008211610c695760405162461bcd60e51b815260206004820152601f60248201527f7765696768742063616e6e6f7420626520736d616c6c6572207468616e20310060448201526064016104d8565b6103e8821115610cbb5760405162461bcd60e51b815260206004820181905260248201527f7765696768742063616e6e6f74206265206c6172676572207468616e206d617860448201526064016104d8565b60008381526066602052604090205460ff16610d105760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064016104d8565b60008381526065602090815260408083203384526001810190925290912054610d3a908490611283565b3360009081526001830160205260409020558054610d59908490611283565b815560405183815284907f2ca3c266355476fd1179e28689d9a6c6c8407ebd7cd5377c1c9b48da50da33df9060200160405180910390a250505050565b610d9e610e3e565b6001600160a01b038116610e035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d8565b610e0c81610e98565b50565b600054610100900460ff16610e365760405162461bcd60e51b81526004016104d890611238565b610770610f78565b6033546001600160a01b031633146107705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d8565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610f2f8282604051602401610f00929190611216565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610fa8565b5050565b610f2f8282604051602401610f499291906111ec565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610fa8565b600054610100900460ff16610f9f5760405162461bcd60e51b81526004016104d890611238565b61077033610e98565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054610fd5906113d5565b90600052602060002090601f016020900481019282610ff7576000855561103d565b82601f1061101057805160ff191683800117855561103d565b8280016001018555821561103d579182015b8281111561103d578251825591602001919060010190611022565b5061104992915061104d565b5090565b5b80821115611049576000815560010161104e565b80356001600160a01b038116811461107957600080fd5b919050565b60006020828403121561108f578081fd5b61109882611062565b9392505050565b600080604083850312156110b1578081fd5b6110ba83611062565b91506110c860208401611062565b90509250929050565b600080604083850312156110e3578182fd5b6110ec83611062565b946020939093013593505050565b60006020828403121561110b578081fd5b5035919050565b60008060408385031215611124578182fd5b823591506110c860208401611062565b60008060408385031215611146578182fd5b50508035926020909101359150565b600060208284031215611166578081fd5b5051919050565b60006020828403121561117e578081fd5b815160ff81168114611098578182fd5b60008151808452815b818110156111b357602081850181015186830182015201611197565b818111156111c45782602083870101525b50601f01601f19169290920160200192915050565b602081526000611098602083018461118e565b6040815260006111ff604083018561118e565b905060018060a01b03831660208301529392505050565b604081526000611229604083018561118e565b90508260208301529392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000821982111561129657611296611410565b500190565b6000826112b657634e487b7160e01b81526012600452602481fd5b500490565b600181815b808511156112f65781600019048211156112dc576112dc611410565b808516156112e957918102915b93841c93908002906112c0565b509250929050565b60006110988383611315565b600061109860ff8416835b60008261132457506001610439565b8161133157506000610439565b816001811461134757600281146113515761136d565b6001915050610439565b60ff84111561136257611362611410565b50506001821b610439565b5060208310610133831016604e8410600b8410161715611390575081810a610439565b61139a83836112bb565b80600019048211156113ae576113ae611410565b029392505050565b60008160001904831182151516156113d0576113d0611410565b500290565b600181811c908216806113e957607f821691505b6020821081141561140a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220d11a688b04d5ed39108b20d0d257b86832b07e50d034ca4fc80e6bc82b877f8b64736f6c63430008040033";

type SharedOwnershipNFTv1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SharedOwnershipNFTv1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SharedOwnershipNFTv1__factory extends ContractFactory {
  constructor(...args: SharedOwnershipNFTv1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SharedOwnershipNFTv1> {
    return super.deploy(overrides || {}) as Promise<SharedOwnershipNFTv1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SharedOwnershipNFTv1 {
    return super.attach(address) as SharedOwnershipNFTv1;
  }
  override connect(signer: Signer): SharedOwnershipNFTv1__factory {
    return super.connect(signer) as SharedOwnershipNFTv1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SharedOwnershipNFTv1Interface {
    return new utils.Interface(_abi) as SharedOwnershipNFTv1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SharedOwnershipNFTv1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SharedOwnershipNFTv1;
  }
}
