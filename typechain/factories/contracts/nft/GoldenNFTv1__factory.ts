/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldenNFTv1,
  GoldenNFTv1Interface,
} from "../../../contracts/nft/GoldenNFTv1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "goldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "GoldenTokenContractAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_ceramicIds",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_goldenTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "bulkBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "ceramicId",
            type: "string",
          },
          {
            internalType: "string",
            name: "entityId",
            type: "string",
          },
        ],
        internalType: "struct GoldenNFTv1.CeramicInfo[]",
        name: "infos",
        type: "tuple[]",
      },
    ],
    name: "bulkMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
    ],
    name: "doesCeramicIdExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCeramicId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCeramicIdsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getEntityId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGoldenTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "getTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "goldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
      {
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGoldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "setGoldenTokenContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115e6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638aa0fdad116100b8578063ab55f1a01161007c578063ab55f1a014610274578063c4d66de814610287578063c6d246ee1461029a578063c87b56dd146102ad578063d3544d8f146102c0578063f2fde38b146102c857600080fd5b80638aa0fdad146102225780638da5cb5b1461023557806395d89b41146102465780639e1059b31461024e5780639e124d691461026157600080fd5b806342966c68116100ff57806342966c68146101bc5780635f260332146101d1578063715018a6146101e45780638638a46c146101ec57806389d94ff31461020f57600080fd5b806306fdde031461013c5780630aebee271461015a5780631e7663bc1461016d5780632a63b2921461018e5780633eaaf86b146101b3575b600080fd5b6101446102db565b60405161015191906113ab565b60405180910390f35b61014461016836600461133b565b61036d565b61018061017b36600461126d565b61040f565b604051908152602001610151565b6066546001600160a01b03165b6040516001600160a01b039091168152602001610151565b61018060675481565b6101cf6101ca36600461133b565b61043a565b005b6101cf6101df3660046111d7565b610693565b6101cf610736565b6101ff6101fa36600461126d565b61074a565b6040519015158152602001610151565b60665461019b906001600160a01b031681565b6101806102303660046112da565b610779565b6033546001600160a01b031661019b565b610144610996565b61014461025c36600461133b565b6109a5565b6101cf61026f366004611245565b610a51565b61014461028236600461133b565b610aef565b6101cf6102953660046111d7565b610b0f565b6101cf6102a8366004611205565b610ce6565b6101446102bb36600461133b565b610da1565b606d54610180565b6101cf6102d63660046111d7565b610e0a565b6060606880546102ea9061152e565b80601f01602080910402602001604051908101604052809291908181526020018280546103169061152e565b80156103635780601f1061033857610100808354040283529160200191610363565b820191906000526020600020905b81548152906001019060200180831161034657829003601f168201915b5050505050905090565b6000818152606a6020526040902080546060919061038a9061152e565b80601f01602080910402602001604051908101604052809291908181526020018280546103b69061152e565b80156104035780601f106103d857610100808354040283529160200191610403565b820191906000526020600020905b8154815290600101906020018083116103e657829003601f168201915b50505050509050919050565b6000606b838360405161042392919061137f565b908152602001604051809103902054905092915050565b610442610e83565b6000818152606a60205260409020805461045b9061152e565b151590506104a95760405162461bcd60e51b8152602060048201526016602482015275313ab937103737b732bc34b9ba32b73a103a37b5b2b760511b60448201526064015b60405180910390fd5b6000818152606a602052604080822081518083019092528054829082906104cf9061152e565b80601f01602080910402602001604051908101604052809291908181526020018280546104fb9061152e565b80156105485780601f1061051d57610100808354040283529160200191610548565b820191906000526020600020905b81548152906001019060200180831161052b57829003601f168201915b505050505081526020016001820180546105619061152e565b80601f016020809104026020016040519081016040528092919081815260200182805461058d9061152e565b80156105da5780601f106105af576101008083540402835291602001916105da565b820191906000526020600020905b8154815290600101906020018083116105bd57829003601f168201915b505050919092525050815160208301516040519394509092909150606b9061060390849061138f565b9081526040805160209281900383019020600090819055868152606a90925281209061062f8282611033565b61063d600183016000611033565b5050600160675461064e9190611464565b60675560405184907f0382b2fef14b477d7957cef64d9f6ec53433de024d4e3c319194c7a554355e329061068590859085906113be565b60405180910390a250505050565b61069b610e83565b6001600160a01b0381166106ec5760405162461bcd60e51b815260206004820152601860248201527716995c9bc81859191c995cdcc81b9bdd08185b1b1bddd95960421b60448201526064016104a0565b606680546001600160a01b0319166001600160a01b0383169081179091556040517fe2c34fba7a16caa93431a35c2f08f7f67264f0175978b111d35dbd9e014bb51690600090a250565b61073e610e83565b6107486000610edd565b565b6000606c838360405161075e92919061137f565b9081526040519081900360200190205460ff16905092915050565b6000610783610e83565b82516107d15760405162461bcd60e51b815260206004820152601960248201527f636572616d696349642063616e6e6f7420626520656d7074790000000000000060448201526064016104a0565b815161081f5760405162461bcd60e51b815260206004820152601860248201527f656e7469747949642063616e6e6f7420626520656d707479000000000000000060448201526064016104a0565b600061082a60655490565b905080606b8460405161083d919061138f565b90815260408051602092819003830181209390935582810181528683528183018690526000848152606a83522082518051919261087f9284929091019061106d565b506020828101518051610898926001850192019061106d565b505060658054600101905550606c846040516108b4919061138f565b9081526040519081900360200190205460ff16610942576001606c856040516108dd919061138f565b90815260405160209181900382019020805460ff191692151592909217909155606d80546001810182556000919091528551610940927f5006b838207c6a9ae9b84d68f467dd4bb5c305fbfb6b04eab8faaabeec1e18d89092019187019061106d565b505b60675461095090600161144c565b60675560405181907fa927ac04d4d3734fe8f2c6d7e10171f210b004d3f2d2a4449bbc6a5f2e5427e39061098790879087906113be565b60405180910390a29392505050565b6060606980546102ea9061152e565b606d81815481106109b557600080fd5b9060005260206000200160009150905080546109d09061152e565b80601f01602080910402602001604051908101604052809291908181526020018280546109fc9061152e565b8015610a495780601f10610a1e57610100808354040283529160200191610a49565b820191906000526020600020905b815481529060010190602001808311610a2c57829003601f168201915b505050505081565b610a59610e83565b80610a985760405162461bcd60e51b815260206004820152600f60248201526e62756c6b4275726e2030204e46547360881b60448201526064016104a0565b60005b81811015610aea576000838383818110610ac557634e487b7160e01b600052603260045260246000fd5b905060200201359050610ad78161043a565b5080610ae281611569565b915050610a9b565b505050565b6000818152606a6020526040902060010180546060919061038a9061152e565b600054610100900460ff1615808015610b2f5750600054600160ff909116105b80610b495750303b158015610b49575060005460ff166001145b610bac5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104a0565b6000805460ff191660011790558015610bcf576000805461ff0019166101001790555b6001600160a01b038216610c205760405162461bcd60e51b815260206004820152601860248201527716995c9bc81859191c995cdcc81b9bdd08185b1b1bddd95960421b60448201526064016104a0565b610c2e606580546001019055565b610c36610f2f565b610c816040518060400160405280600d81526020016c476f6c64656e20456e7469747960981b81525060405180604001604052806004815260200163474c444560e01b815250610f5e565b606680546001600160a01b0319166001600160a01b0384161790558015610ce2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b610cee610e83565b80610d2d5760405162461bcd60e51b815260206004820152600f60248201526e62756c6b4d696e742030204e46547360881b60448201526064016104a0565b60005b81811015610aea576000838383818110610d5a57634e487b7160e01b600052603260045260246000fd5b9050602002810190610d6c9190611437565b610d759061147b565b8051602082015191925090610d8a8282610779565b505050508080610d9990611569565b915050610d30565b6060610dac82610f8f565b610df15760405162461bcd60e51b81526020600482015260166024820152751d1bdad95b925908191bd95cc81b9bdd08195e1a5cdd60521b60448201526064016104a0565b6000828152606a60205260409020805461038a9061152e565b610e12610e83565b6001600160a01b038116610e775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a0565b610e8081610edd565b50565b6033546001600160a01b031633146107485760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a0565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610f565760405162461bcd60e51b81526004016104a0906113ec565b610748610fb5565b600054610100900460ff16610f855760405162461bcd60e51b81526004016104a0906113ec565b610ce28282610fe5565b6000818152606a602052604081208054829190610fab9061152e565b9050119050919050565b600054610100900460ff16610fdc5760405162461bcd60e51b81526004016104a0906113ec565b61074833610edd565b600054610100900460ff1661100c5760405162461bcd60e51b81526004016104a0906113ec565b815161101f90606890602085019061106d565b508051610aea90606990602084019061106d565b50805461103f9061152e565b6000825580601f1061104f575050565b601f016020900490600052602060002090810190610e8091906110f1565b8280546110799061152e565b90600052602060002090601f01602090048101928261109b57600085556110e1565b82601f106110b457805160ff19168380011785556110e1565b828001600101855582156110e1579182015b828111156110e15782518255916020019190600101906110c6565b506110ed9291506110f1565b5090565b5b808211156110ed57600081556001016110f2565b60008083601f840112611117578081fd5b50813567ffffffffffffffff81111561112e578182fd5b6020830191508360208260051b850101111561114957600080fd5b9250929050565b600082601f830112611160578081fd5b813567ffffffffffffffff8082111561117b5761117b61159a565b604051601f8301601f19908116603f011681019082821181831017156111a3576111a361159a565b816040528381528660208588010111156111bb578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156111e8578081fd5b81356001600160a01b03811681146111fe578182fd5b9392505050565b60008060208385031215611217578081fd5b823567ffffffffffffffff81111561122d578182fd5b61123985828601611106565b90969095509350505050565b60008060208385031215611257578182fd5b823567ffffffffffffffff81111561122d578283fd5b6000806020838503121561127f578182fd5b823567ffffffffffffffff80821115611296578384fd5b818501915085601f8301126112a9578384fd5b8135818111156112b7578485fd5b8660208285010111156112c8578485fd5b60209290920196919550909350505050565b600080604083850312156112ec578182fd5b823567ffffffffffffffff80821115611303578384fd5b61130f86838701611150565b93506020850135915080821115611324578283fd5b5061133185828601611150565b9150509250929050565b60006020828403121561134c578081fd5b5035919050565b6000815180845261136b8160208601602086016114fe565b601f01601f19169290920160200192915050565b8183823760009101908152919050565b600082516113a18184602087016114fe565b9190910192915050565b6020815260006111fe6020830184611353565b6040815260006113d16040830185611353565b82810360208401526113e38185611353565b95945050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008235603e198336030181126113a1578182fd5b6000821982111561145f5761145f611584565b500190565b60008282101561147657611476611584565b500390565b60006040823603121561148c578081fd5b6040516040810167ffffffffffffffff82821081831117156114b0576114b061159a565b8160405284359150808211156114c4578384fd5b6114d036838701611150565b835260208501359150808211156114e5578384fd5b506114f236828601611150565b60208301525092915050565b60005b83811015611519578181015183820152602001611501565b83811115611528576000848401525b50505050565b600181811c9082168061154257607f821691505b6020821081141561156357634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561157d5761157d611584565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220663d1e31cbd2423a6c8fe76ff12b8d3d7c28af84d5286e0f685260eaf8552b1d64736f6c63430008040033";

type GoldenNFTv1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldenNFTv1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldenNFTv1__factory extends ContractFactory {
  constructor(...args: GoldenNFTv1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenNFTv1> {
    return super.deploy(overrides || {}) as Promise<GoldenNFTv1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GoldenNFTv1 {
    return super.attach(address) as GoldenNFTv1;
  }
  override connect(signer: Signer): GoldenNFTv1__factory {
    return super.connect(signer) as GoldenNFTv1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenNFTv1Interface {
    return new utils.Interface(_abi) as GoldenNFTv1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenNFTv1 {
    return new Contract(address, _abi, signerOrProvider) as GoldenNFTv1;
  }
}
