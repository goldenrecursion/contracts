/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldenNFTv1,
  GoldenNFTv1Interface,
} from "../../../contracts/nft/GoldenNFTv1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "goldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "GoldenTokenContractAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_ceramicIds",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_goldenTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "bulkBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "ceramicId",
            type: "string",
          },
          {
            internalType: "string",
            name: "entityId",
            type: "string",
          },
        ],
        internalType: "struct GoldenNFTv1.CeramicInfo[]",
        name: "infos",
        type: "tuple[]",
      },
    ],
    name: "bulkMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
    ],
    name: "doesCeramicIdExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCeramicId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCeramicIdsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getEntityId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGoldenTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "getTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "goldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
      {
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGoldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "setGoldenTokenContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638aa0fdad116100b8578063ab55f1a01161007c578063ab55f1a014610274578063c4d66de814610287578063c6d246ee1461029a578063c87b56dd146102ad578063d3544d8f146102c0578063f2fde38b146102c857600080fd5b80638aa0fdad146102225780638da5cb5b1461023557806395d89b41146102465780639e1059b31461024e5780639e124d691461026157600080fd5b806342966c68116100ff57806342966c68146101bc5780635f260332146101d1578063715018a6146101e45780638638a46c146101ec57806389d94ff31461020f57600080fd5b806306fdde031461013c5780630aebee271461015a5780631e7663bc1461016d5780632a63b2921461018e5780633eaaf86b146101b3575b600080fd5b6101446102db565b604051610151919061139e565b60405180910390f35b61014461016836600461132e565b61036d565b61018061017b366004611260565b61040f565b604051908152602001610151565b6066546001600160a01b03165b6040516001600160a01b039091168152602001610151565b61018060675481565b6101cf6101ca36600461132e565b61043a565b005b6101cf6101df3660046111ca565b610693565b6101cf610736565b6101ff6101fa366004611260565b61074a565b6040519015158152602001610151565b60665461019b906001600160a01b031681565b6101806102303660046112cd565b610779565b6033546001600160a01b031661019b565b610144610997565b61014461025c36600461132e565b6109a6565b6101cf61026f366004611238565b610a52565b61014461028236600461132e565b610af0565b6101cf6102953660046111ca565b610b10565b6101cf6102a83660046111f8565b610cd9565b6101446102bb36600461132e565b610d94565b606d54610180565b6101cf6102d63660046111ca565b610dfd565b6060606880546102ea90611521565b80601f016020809104026020016040519081016040528092919081815260200182805461031690611521565b80156103635780601f1061033857610100808354040283529160200191610363565b820191906000526020600020905b81548152906001019060200180831161034657829003601f168201915b5050505050905090565b6000818152606a6020526040902080546060919061038a90611521565b80601f01602080910402602001604051908101604052809291908181526020018280546103b690611521565b80156104035780601f106103d857610100808354040283529160200191610403565b820191906000526020600020905b8154815290600101906020018083116103e657829003601f168201915b50505050509050919050565b6000606b8383604051610423929190611372565b908152602001604051809103902054905092915050565b610442610e76565b6000818152606a60205260409020805461045b90611521565b151590506104a95760405162461bcd60e51b8152602060048201526016602482015275313ab937103737b732bc34b9ba32b73a103a37b5b2b760511b60448201526064015b60405180910390fd5b6000818152606a602052604080822081518083019092528054829082906104cf90611521565b80601f01602080910402602001604051908101604052809291908181526020018280546104fb90611521565b80156105485780601f1061051d57610100808354040283529160200191610548565b820191906000526020600020905b81548152906001019060200180831161052b57829003601f168201915b5050505050815260200160018201805461056190611521565b80601f016020809104026020016040519081016040528092919081815260200182805461058d90611521565b80156105da5780601f106105af576101008083540402835291602001916105da565b820191906000526020600020905b8154815290600101906020018083116105bd57829003601f168201915b505050919092525050815160208301516040519394509092909150606b90610603908490611382565b9081526040805160209281900383019020600090819055868152606a90925281209061062f8282611026565b61063d600183016000611026565b5050600160675461064e9190611457565b60675560405184907f0382b2fef14b477d7957cef64d9f6ec53433de024d4e3c319194c7a554355e329061068590859085906113b1565b60405180910390a250505050565b61069b610e76565b6001600160a01b0381166106ec5760405162461bcd60e51b815260206004820152601860248201527716995c9bc81859191c995cdcc81b9bdd08185b1b1bddd95960421b60448201526064016104a0565b606680546001600160a01b0319166001600160a01b0383169081179091556040517fe2c34fba7a16caa93431a35c2f08f7f67264f0175978b111d35dbd9e014bb51690600090a250565b61073e610e76565b6107486000610ed0565b565b6000606c838360405161075e929190611372565b9081526040519081900360200190205460ff16905092915050565b6000610783610e76565b82516107d15760405162461bcd60e51b815260206004820152601960248201527f636572616d696349642063616e6e6f7420626520656d7074790000000000000060448201526064016104a0565b815161081f5760405162461bcd60e51b815260206004820152601860248201527f656e7469747949642063616e6e6f7420626520656d707479000000000000000060448201526064016104a0565b600061082a60655490565b905080606b8460405161083d9190611382565b90815260408051602092819003830181209390935582810181528683528183018690526000848152606a83522082518051919261087f92849290910190611060565b5060208281015180516108989260018501920190611060565b505060658054600101905550606c846040516108b49190611382565b9081526040519081900360200190205460ff1615610943576000606c856040516108de9190611382565b90815260405160209181900382019020805460ff191692151592909217909155606d80546001810182556000919091528551610941927f5006b838207c6a9ae9b84d68f467dd4bb5c305fbfb6b04eab8faaabeec1e18d890920191870190611060565b505b60675461095190600161143f565b60675560405181907fa927ac04d4d3734fe8f2c6d7e10171f210b004d3f2d2a4449bbc6a5f2e5427e39061098890879087906113b1565b60405180910390a29392505050565b6060606980546102ea90611521565b606d81815481106109b657600080fd5b9060005260206000200160009150905080546109d190611521565b80601f01602080910402602001604051908101604052809291908181526020018280546109fd90611521565b8015610a4a5780601f10610a1f57610100808354040283529160200191610a4a565b820191906000526020600020905b815481529060010190602001808311610a2d57829003601f168201915b505050505081565b610a5a610e76565b80610a995760405162461bcd60e51b815260206004820152600f60248201526e62756c6b4275726e2030204e46547360881b60448201526064016104a0565b60005b81811015610aeb576000838383818110610ac657634e487b7160e01b600052603260045260246000fd5b905060200201359050610ad88161043a565b5080610ae38161155c565b915050610a9c565b505050565b6000818152606a6020526040902060010180546060919061038a90611521565b600054610100900460ff1615808015610b305750600054600160ff909116105b80610b4a5750303b158015610b4a575060005460ff166001145b610bad5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104a0565b6000805460ff191660011790558015610bd0576000805461ff0019166101001790555b6001600160a01b038216610c215760405162461bcd60e51b815260206004820152601860248201527716995c9bc81859191c995cdcc81b9bdd08185b1b1bddd95960421b60448201526064016104a0565b610c29610f22565b610c746040518060400160405280600d81526020016c476f6c64656e20456e7469747960981b81525060405180604001604052806004815260200163474c444560e01b815250610f51565b606680546001600160a01b0319166001600160a01b0384161790558015610cd5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b610ce1610e76565b80610d205760405162461bcd60e51b815260206004820152600f60248201526e62756c6b4d696e742030204e46547360881b60448201526064016104a0565b60005b81811015610aeb576000838383818110610d4d57634e487b7160e01b600052603260045260246000fd5b9050602002810190610d5f919061142a565b610d689061146e565b8051602082015191925090610d7d8282610779565b505050508080610d8c9061155c565b915050610d23565b6060610d9f82610f82565b610de45760405162461bcd60e51b81526020600482015260166024820152751d1bdad95b925908191bd95cc81b9bdd08195e1a5cdd60521b60448201526064016104a0565b6000828152606a60205260409020805461038a90611521565b610e05610e76565b6001600160a01b038116610e6a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a0565b610e7381610ed0565b50565b6033546001600160a01b031633146107485760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a0565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610f495760405162461bcd60e51b81526004016104a0906113df565b610748610fa8565b600054610100900460ff16610f785760405162461bcd60e51b81526004016104a0906113df565b610cd58282610fd8565b6000818152606a602052604081208054829190610f9e90611521565b9050119050919050565b600054610100900460ff16610fcf5760405162461bcd60e51b81526004016104a0906113df565b61074833610ed0565b600054610100900460ff16610fff5760405162461bcd60e51b81526004016104a0906113df565b8151611012906068906020850190611060565b508051610aeb906069906020840190611060565b50805461103290611521565b6000825580601f10611042575050565b601f016020900490600052602060002090810190610e7391906110e4565b82805461106c90611521565b90600052602060002090601f01602090048101928261108e57600085556110d4565b82601f106110a757805160ff19168380011785556110d4565b828001600101855582156110d4579182015b828111156110d45782518255916020019190600101906110b9565b506110e09291506110e4565b5090565b5b808211156110e057600081556001016110e5565b60008083601f84011261110a578081fd5b50813567ffffffffffffffff811115611121578182fd5b6020830191508360208260051b850101111561113c57600080fd5b9250929050565b600082601f830112611153578081fd5b813567ffffffffffffffff8082111561116e5761116e61158d565b604051601f8301601f19908116603f011681019082821181831017156111965761119661158d565b816040528381528660208588010111156111ae578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156111db578081fd5b81356001600160a01b03811681146111f1578182fd5b9392505050565b6000806020838503121561120a578081fd5b823567ffffffffffffffff811115611220578182fd5b61122c858286016110f9565b90969095509350505050565b6000806020838503121561124a578182fd5b823567ffffffffffffffff811115611220578283fd5b60008060208385031215611272578182fd5b823567ffffffffffffffff80821115611289578384fd5b818501915085601f83011261129c578384fd5b8135818111156112aa578485fd5b8660208285010111156112bb578485fd5b60209290920196919550909350505050565b600080604083850312156112df578182fd5b823567ffffffffffffffff808211156112f6578384fd5b61130286838701611143565b93506020850135915080821115611317578283fd5b5061132485828601611143565b9150509250929050565b60006020828403121561133f578081fd5b5035919050565b6000815180845261135e8160208601602086016114f1565b601f01601f19169290920160200192915050565b8183823760009101908152919050565b600082516113948184602087016114f1565b9190910192915050565b6020815260006111f16020830184611346565b6040815260006113c46040830185611346565b82810360208401526113d68185611346565b95945050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008235603e19833603018112611394578182fd5b6000821982111561145257611452611577565b500190565b60008282101561146957611469611577565b500390565b60006040823603121561147f578081fd5b6040516040810167ffffffffffffffff82821081831117156114a3576114a361158d565b8160405284359150808211156114b7578384fd5b6114c336838701611143565b835260208501359150808211156114d8578384fd5b506114e536828601611143565b60208301525092915050565b60005b8381101561150c5781810151838201526020016114f4565b8381111561151b576000848401525b50505050565b600181811c9082168061153557607f821691505b6020821081141561155657634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561157057611570611577565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220827c3ce6d94a86d3e013092e3eb1853eee218f3771dc41f26e08fd8038c47fb564736f6c63430008040033";

type GoldenNFTv1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldenNFTv1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldenNFTv1__factory extends ContractFactory {
  constructor(...args: GoldenNFTv1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenNFTv1> {
    return super.deploy(overrides || {}) as Promise<GoldenNFTv1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GoldenNFTv1 {
    return super.attach(address) as GoldenNFTv1;
  }
  override connect(signer: Signer): GoldenNFTv1__factory {
    return super.connect(signer) as GoldenNFTv1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenNFTv1Interface {
    return new utils.Interface(_abi) as GoldenNFTv1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenNFTv1 {
    return new Contract(address, _abi, signerOrProvider) as GoldenNFTv1;
  }
}
