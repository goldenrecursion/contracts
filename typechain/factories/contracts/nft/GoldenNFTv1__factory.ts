/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldenNFTv1,
  GoldenNFTv1Interface,
} from "../../../contracts/nft/GoldenNFTv1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "goldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "GoldenTokenContractAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_ceramicIds",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_goldenTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "bulkBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "ceramicId",
            type: "string",
          },
          {
            internalType: "string",
            name: "entityId",
            type: "string",
          },
        ],
        internalType: "struct GoldenNFTv1.CeramicInfo[]",
        name: "infos",
        type: "tuple[]",
      },
    ],
    name: "bulkMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCeramicId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCeramicIdsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getEntityId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGoldenTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "getTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "goldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
      {
        internalType: "string",
        name: "entityId",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGoldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "setGoldenTokenContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061157b806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638da5cb5b116100ad578063c4d66de811610071578063c4d66de814610259578063c6d246ee1461026c578063c87b56dd1461027f578063d3544d8f14610292578063f2fde38b1461029a57600080fd5b80638da5cb5b1461020757806395d89b41146102185780639e1059b3146102205780639e124d6914610233578063ab55f1a01461024657600080fd5b806342966c68116100f457806342966c68146101b15780635f260332146101c6578063715018a6146101d957806389d94ff3146101e15780638aa0fdad146101f457600080fd5b806306fdde03146101315780630aebee271461014f5780631e7663bc146101625780632a63b292146101835780633eaaf86b146101a8575b600080fd5b6101396102ad565b6040516101469190611340565b60405180910390f35b61013961015d3660046112d0565b61033f565b610175610170366004611202565b6103e1565b604051908152602001610146565b6066546001600160a01b03165b6040516001600160a01b039091168152602001610146565b61017560675481565b6101c46101bf3660046112d0565b61040c565b005b6101c46101d436600461116c565b610665565b6101c4610708565b606654610190906001600160a01b031681565b61017561020236600461126f565b61071c565b6033546001600160a01b0316610190565b610139610939565b61013961022e3660046112d0565b610948565b6101c46102413660046111da565b6109f4565b6101396102543660046112d0565b610a92565b6101c461026736600461116c565b610ab2565b6101c461027a36600461119a565b610c7b565b61013961028d3660046112d0565b610d36565b606d54610175565b6101c46102a836600461116c565b610d9f565b6060606880546102bc906114c3565b80601f01602080910402602001604051908101604052809291908181526020018280546102e8906114c3565b80156103355780601f1061030a57610100808354040283529160200191610335565b820191906000526020600020905b81548152906001019060200180831161031857829003601f168201915b5050505050905090565b6000818152606a6020526040902080546060919061035c906114c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610388906114c3565b80156103d55780601f106103aa576101008083540402835291602001916103d5565b820191906000526020600020905b8154815290600101906020018083116103b857829003601f168201915b50505050509050919050565b6000606b83836040516103f5929190611314565b908152602001604051809103902054905092915050565b610414610e18565b6000818152606a60205260409020805461042d906114c3565b1515905061047b5760405162461bcd60e51b8152602060048201526016602482015275313ab937103737b732bc34b9ba32b73a103a37b5b2b760511b60448201526064015b60405180910390fd5b6000818152606a602052604080822081518083019092528054829082906104a1906114c3565b80601f01602080910402602001604051908101604052809291908181526020018280546104cd906114c3565b801561051a5780601f106104ef5761010080835404028352916020019161051a565b820191906000526020600020905b8154815290600101906020018083116104fd57829003601f168201915b50505050508152602001600182018054610533906114c3565b80601f016020809104026020016040519081016040528092919081815260200182805461055f906114c3565b80156105ac5780601f10610581576101008083540402835291602001916105ac565b820191906000526020600020905b81548152906001019060200180831161058f57829003601f168201915b505050919092525050815160208301516040519394509092909150606b906105d5908490611324565b9081526040805160209281900383019020600090819055868152606a9092528120906106018282610fc8565b61060f600183016000610fc8565b5050600160675461062091906113f9565b60675560405184907f0382b2fef14b477d7957cef64d9f6ec53433de024d4e3c319194c7a554355e32906106579085908590611353565b60405180910390a250505050565b61066d610e18565b6001600160a01b0381166106be5760405162461bcd60e51b815260206004820152601860248201527716995c9bc81859191c995cdcc81b9bdd08185b1b1bddd95960421b6044820152606401610472565b606680546001600160a01b0319166001600160a01b0383169081179091556040517fe2c34fba7a16caa93431a35c2f08f7f67264f0175978b111d35dbd9e014bb51690600090a250565b610710610e18565b61071a6000610e72565b565b6000610726610e18565b82516107745760405162461bcd60e51b815260206004820152601960248201527f636572616d696349642063616e6e6f7420626520656d707479000000000000006044820152606401610472565b81516107c25760405162461bcd60e51b815260206004820152601860248201527f656e7469747949642063616e6e6f7420626520656d70747900000000000000006044820152606401610472565b60006107cd60655490565b905080606b846040516107e09190611324565b90815260408051602092819003830181209390935582810181528683528183018690526000848152606a83522082518051919261082292849290910190611002565b50602082810151805161083b9260018501920190611002565b505060658054600101905550606c846040516108579190611324565b9081526040519081900360200190205460ff166108e5576001606c856040516108809190611324565b90815260405160209181900382019020805460ff191692151592909217909155606d805460018101825560009190915285516108e3927f5006b838207c6a9ae9b84d68f467dd4bb5c305fbfb6b04eab8faaabeec1e18d890920191870190611002565b505b6067546108f39060016113e1565b60675560405181907fa927ac04d4d3734fe8f2c6d7e10171f210b004d3f2d2a4449bbc6a5f2e5427e39061092a9087908790611353565b60405180910390a29392505050565b6060606980546102bc906114c3565b606d818154811061095857600080fd5b906000526020600020016000915090508054610973906114c3565b80601f016020809104026020016040519081016040528092919081815260200182805461099f906114c3565b80156109ec5780601f106109c1576101008083540402835291602001916109ec565b820191906000526020600020905b8154815290600101906020018083116109cf57829003601f168201915b505050505081565b6109fc610e18565b80610a3b5760405162461bcd60e51b815260206004820152600f60248201526e62756c6b4275726e2030204e46547360881b6044820152606401610472565b60005b81811015610a8d576000838383818110610a6857634e487b7160e01b600052603260045260246000fd5b905060200201359050610a7a8161040c565b5080610a85816114fe565b915050610a3e565b505050565b6000818152606a6020526040902060010180546060919061035c906114c3565b600054610100900460ff1615808015610ad25750600054600160ff909116105b80610aec5750303b158015610aec575060005460ff166001145b610b4f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610472565b6000805460ff191660011790558015610b72576000805461ff0019166101001790555b6001600160a01b038216610bc35760405162461bcd60e51b815260206004820152601860248201527716995c9bc81859191c995cdcc81b9bdd08185b1b1bddd95960421b6044820152606401610472565b610bcb610ec4565b610c166040518060400160405280600d81526020016c476f6c64656e20456e7469747960981b81525060405180604001604052806004815260200163474c444560e01b815250610ef3565b606680546001600160a01b0319166001600160a01b0384161790558015610c77576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b610c83610e18565b80610cc25760405162461bcd60e51b815260206004820152600f60248201526e62756c6b4d696e742030204e46547360881b6044820152606401610472565b60005b81811015610a8d576000838383818110610cef57634e487b7160e01b600052603260045260246000fd5b9050602002810190610d0191906113cc565b610d0a90611410565b8051602082015191925090610d1f828261071c565b505050508080610d2e906114fe565b915050610cc5565b6060610d4182610f24565b610d865760405162461bcd60e51b81526020600482015260166024820152751d1bdad95b925908191bd95cc81b9bdd08195e1a5cdd60521b6044820152606401610472565b6000828152606a60205260409020805461035c906114c3565b610da7610e18565b6001600160a01b038116610e0c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610472565b610e1581610e72565b50565b6033546001600160a01b0316331461071a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610472565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610eeb5760405162461bcd60e51b815260040161047290611381565b61071a610f4a565b600054610100900460ff16610f1a5760405162461bcd60e51b815260040161047290611381565b610c778282610f7a565b6000818152606a602052604081208054829190610f40906114c3565b9050119050919050565b600054610100900460ff16610f715760405162461bcd60e51b815260040161047290611381565b61071a33610e72565b600054610100900460ff16610fa15760405162461bcd60e51b815260040161047290611381565b8151610fb4906068906020850190611002565b508051610a8d906069906020840190611002565b508054610fd4906114c3565b6000825580601f10610fe4575050565b601f016020900490600052602060002090810190610e159190611086565b82805461100e906114c3565b90600052602060002090601f0160209004810192826110305760008555611076565b82601f1061104957805160ff1916838001178555611076565b82800160010185558215611076579182015b8281111561107657825182559160200191906001019061105b565b50611082929150611086565b5090565b5b808211156110825760008155600101611087565b60008083601f8401126110ac578081fd5b50813567ffffffffffffffff8111156110c3578182fd5b6020830191508360208260051b85010111156110de57600080fd5b9250929050565b600082601f8301126110f5578081fd5b813567ffffffffffffffff808211156111105761111061152f565b604051601f8301601f19908116603f011681019082821181831017156111385761113861152f565b81604052838152866020858801011115611150578485fd5b8360208701602083013792830160200193909352509392505050565b60006020828403121561117d578081fd5b81356001600160a01b0381168114611193578182fd5b9392505050565b600080602083850312156111ac578081fd5b823567ffffffffffffffff8111156111c2578182fd5b6111ce8582860161109b565b90969095509350505050565b600080602083850312156111ec578182fd5b823567ffffffffffffffff8111156111c2578283fd5b60008060208385031215611214578182fd5b823567ffffffffffffffff8082111561122b578384fd5b818501915085601f83011261123e578384fd5b81358181111561124c578485fd5b86602082850101111561125d578485fd5b60209290920196919550909350505050565b60008060408385031215611281578182fd5b823567ffffffffffffffff80821115611298578384fd5b6112a4868387016110e5565b935060208501359150808211156112b9578283fd5b506112c6858286016110e5565b9150509250929050565b6000602082840312156112e1578081fd5b5035919050565b60008151808452611300816020860160208601611493565b601f01601f19169290920160200192915050565b8183823760009101908152919050565b60008251611336818460208701611493565b9190910192915050565b60208152600061119360208301846112e8565b60408152600061136660408301856112e8565b828103602084015261137881856112e8565b95945050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008235603e19833603018112611336578182fd5b600082198211156113f4576113f4611519565b500190565b60008282101561140b5761140b611519565b500390565b600060408236031215611421578081fd5b6040516040810167ffffffffffffffff82821081831117156114455761144561152f565b816040528435915080821115611459578384fd5b611465368387016110e5565b8352602085013591508082111561147a578384fd5b50611487368286016110e5565b60208301525092915050565b60005b838110156114ae578181015183820152602001611496565b838111156114bd576000848401525b50505050565b600181811c908216806114d757607f821691505b602082108114156114f857634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561151257611512611519565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e486c394c08176c0e7ea6eb345bd30adfaf862c785430359b0f12705d1043fc064736f6c63430008040033";

type GoldenNFTv1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldenNFTv1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldenNFTv1__factory extends ContractFactory {
  constructor(...args: GoldenNFTv1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenNFTv1> {
    return super.deploy(overrides || {}) as Promise<GoldenNFTv1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GoldenNFTv1 {
    return super.attach(address) as GoldenNFTv1;
  }
  override connect(signer: Signer): GoldenNFTv1__factory {
    return super.connect(signer) as GoldenNFTv1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenNFTv1Interface {
    return new utils.Interface(_abi) as GoldenNFTv1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenNFTv1 {
    return new Contract(address, _abi, signerOrProvider) as GoldenNFTv1;
  }
}
