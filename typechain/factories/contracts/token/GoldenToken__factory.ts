/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldenToken,
  GoldenTokenInterface,
} from "../../../contracts/token/GoldenToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addedBurner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addedBy",
        type: "address",
      },
    ],
    name: "BurnerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "removedBurner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "removedBy",
        type: "address",
      },
    ],
    name: "BurnerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addedMinter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addedBy",
        type: "address",
      },
    ],
    name: "MinterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "removedMinter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "removedBy",
        type: "address",
      },
    ],
    name: "MinterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addedOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addedBy",
        type: "address",
      },
    ],
    name: "OwnerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "removedOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "removedBy",
        type: "address",
      },
    ],
    name: "OwnerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "grantedAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addedBy",
        type: "address",
      },
    ],
    name: "TransferGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "revokedAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "revokedBy",
        type: "address",
      },
    ],
    name: "TransferRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addBurner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20VotesUpgradeable.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasGrantsToTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isBurner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isMinter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeBurner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612a82806100206000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80637065cb4811610130578063a8ae9c29116100b8578063d505accf1161007c578063d505accf14610508578063dd62ed3e1461051b578063f1127ed81461052e578063f44637ba1461056b578063fe4b84df1461057e57600080fd5b8063a8ae9c29146104a9578063a9059cbb146104bc578063aa271e1a146104cf578063c3cda520146104e2578063d4d89996146104f557600080fd5b80638e539e8c116100ff5780638e539e8c1461045557806395d89b4114610468578063983b2d56146104705780639ab24eb014610483578063a457c2d71461049657600080fd5b80637065cb48146103f357806370a082311461040657806379cc67901461042f5780637ecebe001461044257600080fd5b80633644e515116101be5780634334614a116101825780634334614a1461034e578063587cde1e146103615780635bd7c8b2146103a55780635c19a95c146103b85780636fcfff45146103cb57600080fd5b80633644e515146102fa57806339509351146103025780633a46b1a81461031557806340c10f191461032857806342966c681461033b57600080fd5b806318160ddd1161020557806318160ddd146102a057806323b872dd146102b25780632f54bf6e146102c55780633092afd5146102d8578063313ce567146102eb57600080fd5b8063028468581461023757806306fdde031461024c578063095ea7b31461026a578063173825d91461028d575b600080fd5b61024a6102453660046125a3565b610591565b005b6102546105cb565b60405161026191906125be565b60405180910390f35b61027d61027836600461260c565b61065d565b6040519015158152602001610261565b61024a61029b3660046125a3565b610677565b6035545b604051908152602001610261565b61027d6102c0366004612636565b6106a5565b61027d6102d33660046125a3565b6106c9565b61024a6102e63660046125a3565b6106d7565b60405160128152602001610261565b6102a4610705565b61027d61031036600461260c565b610714565b6102a461032336600461260c565b610736565b61024a61033636600461260c565b6107b0565b61024a610349366004612672565b61082c565b61027d61035c3660046125a3565b6108a4565b61038d61036f3660046125a3565b6001600160a01b03908116600090815260fe60205260409020541690565b6040516001600160a01b039091168152602001610261565b61027d6103b33660046125a3565b6108b2565b61024a6103c63660046125a3565b6108c0565b6103de6103d93660046125a3565b6108ca565b60405163ffffffff9091168152602001610261565b61024a6104013660046125a3565b6108ec565b6102a46104143660046125a3565b6001600160a01b031660009081526033602052604090205490565b61024a61043d36600461260c565b61091a565b6102a46104503660046125a3565b61092f565b6102a4610463366004612672565b61094d565b6102546109aa565b61024a61047e3660046125a3565b6109b9565b6102a46104913660046125a3565b6109e7565b61027d6104a436600461260c565b610a6e565b61024a6104b73660046125a3565b610ae9565b61027d6104ca36600461260c565b610b17565b61027d6104dd3660046125a3565b610b25565b61024a6104f036600461269c565b610b33565b61024a6105033660046125a3565b610c69565b61024a6105163660046126f4565b610c97565b6102a461052936600461275e565b610dfb565b61054161053c366004612791565b610e26565b60408051825163ffffffff1681526020928301516001600160e01b03169281019290925201610261565b61024a6105793660046125a3565b610eaa565b61024a61058c366004612672565b610ed8565b61059a336106c9565b6105bf5760405162461bcd60e51b81526004016105b6906127d1565b60405180910390fd5b6105c881611081565b50565b6060603680546105da9061281f565b80601f01602080910402602001604051908101604052809291908181526020018280546106069061281f565b80156106535780601f1061062857610100808354040283529160200191610653565b820191906000526020600020905b81548152906001019060200180831161063657829003601f168201915b5050505050905090565b60003361066b8185856110c6565b60019150505b92915050565b610680336106c9565b61069c5760405162461bcd60e51b81526004016105b6906127d1565b6105c8816111ea565b6000336106b385828561122f565b6106be8585856112a9565b506001949350505050565b600061067161013083611488565b6106e0336106c9565b6106fc5760405162461bcd60e51b81526004016105b6906127d1565b6105c88161150b565b600061070f611550565b905090565b60003361066b8185856107278383610dfb565b6107319190612869565b6110c6565b60004382106107875760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016105b6565b6001600160a01b038316600090815260ff602052604090206107a990836115cb565b9392505050565b6107b933610b25565b61081e5760405162461bcd60e51b815260206004820152603060248201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560448201526f20746865204d696e74657220726f6c6560801b60648201526084016105b6565b6108288282611688565b5050565b610835336108a4565b61089a5760405162461bcd60e51b815260206004820152603060248201527f4275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766560448201526f20746865204275726e657220726f6c6560801b60648201526084016105b6565b6105c83382611692565b600061067161019483611488565b60006106716101c683611488565b6105c8338261169c565b6001600160a01b038116600090815260ff602052604081205461067190611716565b6108f5336106c9565b6109115760405162461bcd60e51b81526004016105b6906127d1565b6105c88161177f565b61092582338361122f565b6108288282611692565b6001600160a01b038116600090815260cb6020526040812054610671565b600043821061099e5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016105b6565b610671610100836115cb565b6060603780546105da9061281f565b6109c2336106c9565b6109de5760405162461bcd60e51b81526004016105b6906127d1565b6105c8816117c4565b6001600160a01b038116600090815260ff60205260408120548015610a5b576001600160a01b038316600090815260ff60205260409020610a2960018361287c565b81548110610a3957610a3961288f565b60009182526020909120015464010000000090046001600160e01b0316610a5e565b60005b6001600160e01b03169392505050565b60003381610a7c8286610dfb565b905083811015610adc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105b6565b6106be82868684036110c6565b610af2336106c9565b610b0e5760405162461bcd60e51b81526004016105b6906127d1565b6105c881611809565b60003361066b8185856112a9565b600061067161016283611488565b83421115610b835760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016105b6565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610bfd90610bf59060a0016040516020818303038152906040528051906020012061184e565b85858561189c565b9050610c08816118c4565b8614610c565760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016105b6565b610c60818861169c565b50505050505050565b610c72336106c9565b610c8e5760405162461bcd60e51b81526004016105b6906127d1565b6105c8816118ec565b83421115610ce75760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105b6565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d168c6118c4565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610d718261184e565b90506000610d818287878761189c565b9050896001600160a01b0316816001600160a01b031614610de45760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105b6565b610def8a8a8a6110c6565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b038316600090815260ff60205260409020805463ffffffff8416908110610e6a57610e6a61288f565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610eb3336106c9565b610ecf5760405162461bcd60e51b81526004016105b6906127d1565b6105c881611931565b600054610100900460ff1615808015610ef85750600054600160ff909116105b80610f125750303b158015610f12575060005460ff166001145b610f755760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105b6565b6000805460ff191660011790558015610f98576000805461ff0019166101001790555b610fe06040518060400160405280600b81526020016a23b7b63232b72a37b5b2b760a91b8152506040518060400160405280600381526020016211d31160ea1b815250611976565b610fe86119a7565b6110146040518060400160405280600b81526020016a23b7b63232b72a37b5b2b760a91b8152506119d0565b61101c6119a7565b6110253361177f565b61102e33611809565b6110383383611688565b8015610828576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b61108d61019482611a1a565b60405133906001600160a01b038316907f85222465e0d438163a28671b59fc9ebeb03bf39f880ddd36c8315da7512b31c090600090a350565b6001600160a01b0383166111285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105b6565b6001600160a01b0382166111895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105b6565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6111f661013082611a1a565b60405133906001600160a01b038316907fe594d081b4382713733fe631966432c9cea5199afb2db5c3c1931f9f9300367990600090a350565b600061123b8484610dfb565b905060001981146112a357818110156112965760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105b6565b6112a384848484036110c6565b50505050565b6001600160a01b03831661130d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105b6565b6001600160a01b03821661136f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105b6565b61137a838383611a9c565b6001600160a01b038316600090815260336020526040902054818110156113f25760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105b6565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611429908490612869565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161147591815260200190565b60405180910390a36112a3848484611b14565b60006001600160a01b0382166114eb5760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016105b6565b506001600160a01b03166000908152602091909152604090205460ff1690565b61151761016282611a1a565b60405133906001600160a01b038316907f4b5ef9a786cf64a7d82ebcf2d5132667edc9faef4ac36260d9a9e52c526b623290600090a350565b600061070f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61157f60975490565b6098546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b8154600090815b8181101561162f5760006115e68284611b1f565b9050848682815481106115fb576115fb61288f565b60009182526020909120015463ffffffff16111561161b57809250611629565b611626816001612869565b91505b506115d2565b8115611673578461164160018461287c565b815481106116515761165161288f565b60009182526020909120015464010000000090046001600160e01b0316611676565b60005b6001600160e01b031695945050505050565b6108288282611b3a565b6108288282611bc5565b6001600160a01b03828116600081815260fe6020818152604080842080546033845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46112a3828483611bde565b600063ffffffff82111561177b5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016105b6565b5090565b61178b61013082611d1b565b60405133906001600160a01b038316907fc82bdbbf677a2462f2a7e22e4ba9abd209496b69cd7b868b3b1d28f76e09a40a90600090a350565b6117d061016282611d1b565b60405133906001600160a01b038316907f3c091dafb1d99e4a4c333024492eac3b2cd8bf921a3dd547c937db33be307bb890600090a350565b6118156101c682611d1b565b60405133906001600160a01b038316907fc5ecb31c4cf1ecd92f82b40e8d8707c3deea1c9516185362b3c30323d9d2e56390600090a350565b600061067161185b611550565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006118ad87878787611de3565b915091506118ba81611ed0565b5095945050505050565b6001600160a01b038116600090815260cb602052604090208054600181018255905b50919050565b6118f86101c682611a1a565b60405133906001600160a01b038316907f8079a27d98a8640821a88f155aa8baafe4195b71015d5a2e82deaabe20be902690600090a350565b61193d61019482611d1b565b60405133906001600160a01b038316907f86515ebaad527298e98929c064c075f5a2604cc80afc0db29e73c01a36f8e98c90600090a350565b600054610100900460ff1661199d5760405162461bcd60e51b81526004016105b6906128a5565b6108288282612086565b600054610100900460ff166119ce5760405162461bcd60e51b81526004016105b6906128a5565b565b600054610100900460ff166119f75760405162461bcd60e51b81526004016105b6906128a5565b6105c881604051806040016040528060018152602001603160f81b8152506120c6565b611a248282611488565b611a7a5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b60648201526084016105b6565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b611aa5336108b2565b611b0f5760405162461bcd60e51b815260206004820152603560248201527f5472616e736665723a2063616c6c657220646f6573206e6f742068617665207460448201527434329033b930b73a39903a37903a3930b739b332b960591b60648201526084016105b6565b505050565b611b0f838383612107565b6000611b2e60028484186128f0565b6107a990848416612869565b611b448282612139565b6035546001600160e01b031015611bb65760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016105b6565b6112a361010061222c83612238565b611bcf82826123b1565b6112a361010061251283612238565b816001600160a01b0316836001600160a01b031614158015611c005750600081115b15611b0f576001600160a01b03831615611c8e576001600160a01b038316600090815260ff602052604081208190611c3b9061251285612238565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611c83929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611b0f576001600160a01b038216600090815260ff602052604081208190611cc49061222c85612238565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611d0c929190918252602082015260400190565b60405180910390a25050505050565b6001600160a01b038116611d675760405162461bcd60e51b8152602060048201526013602482015272496e76616c696420307830206164647265737360681b60448201526064016105b6565b611d718282611488565b15611dbe5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064016105b6565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611e1a5750600090506003611ec7565b8460ff16601b14158015611e3257508460ff16601c14155b15611e435750600090506004611ec7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611e97573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611ec057600060019250925050611ec7565b9150600090505b94509492505050565b6000816004811115611ee457611ee4612912565b03611eec5750565b6001816004811115611f0057611f00612912565b03611f4d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105b6565b6002816004811115611f6157611f61612912565b03611fae5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105b6565b6003816004811115611fc257611fc2612912565b0361201a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105b6565b600481600481111561202e5761202e612912565b036105c85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105b6565b600054610100900460ff166120ad5760405162461bcd60e51b81526004016105b6906128a5565b60366120b9838261298c565b506037611b0f828261298c565b600054610100900460ff166120ed5760405162461bcd60e51b81526004016105b6906128a5565b815160209283012081519190920120609791909155609855565b6001600160a01b03838116600090815260fe6020526040808220548584168352912054611b0f92918216911683611bde565b6001600160a01b03821661218f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105b6565b61219b60008383611a9c565b80603560008282546121ad9190612869565b90915550506001600160a01b038216600090815260336020526040812080548392906121da908490612869565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a361082860008383611b14565b60006107a98284612869565b825460009081908015612283578561225160018361287c565b815481106122615761226161288f565b60009182526020909120015464010000000090046001600160e01b0316612286565b60005b6001600160e01b0316925061229f83858763ffffffff16565b91506000811180156122dd575043866122b960018461287c565b815481106122c9576122c961288f565b60009182526020909120015463ffffffff16145b1561233d576122eb8261251e565b866122f760018461287c565b815481106123075761230761288f565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506123a8565b85604051806040016040528061235243611716565b63ffffffff1681526020016123668561251e565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b6001600160a01b0382166124115760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105b6565b61241d82600083611a9c565b6001600160a01b038216600090815260336020526040902054818110156124915760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105b6565b6001600160a01b03831660009081526033602052604081208383039055603580548492906124c090849061287c565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3611b0f83600084611b14565b60006107a9828461287c565b60006001600160e01b0382111561177b5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016105b6565b80356001600160a01b038116811461259e57600080fd5b919050565b6000602082840312156125b557600080fd5b6107a982612587565b600060208083528351808285015260005b818110156125eb578581018301518582016040015282016125cf565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806040838503121561261f57600080fd5b61262883612587565b946020939093013593505050565b60008060006060848603121561264b57600080fd5b61265484612587565b925061266260208501612587565b9150604084013590509250925092565b60006020828403121561268457600080fd5b5035919050565b803560ff8116811461259e57600080fd5b60008060008060008060c087890312156126b557600080fd5b6126be87612587565b955060208701359450604087013593506126da6060880161268b565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561270f57600080fd5b61271888612587565b965061272660208901612587565b955060408801359450606088013593506127426080890161268b565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561277157600080fd5b61277a83612587565b915061278860208401612587565b90509250929050565b600080604083850312156127a457600080fd5b6127ad83612587565b9150602083013563ffffffff811681146127c657600080fd5b809150509250929050565b6020808252602e908201527f4f776e6572526f6c653a2063616c6c657220646f6573206e6f7420686176652060408201526d746865204f776e657220726f6c6560901b606082015260800190565b600181811c9082168061283357607f821691505b6020821081036118e657634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561067157610671612853565b8181038181111561067157610671612853565b634e487b7160e01b600052603260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008261290d57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f821115611b0f57600081815260208120601f850160051c810160208610156129655750805b601f850160051c820191505b8181101561298457828155600101612971565b505050505050565b815167ffffffffffffffff8111156129a6576129a6612928565b6129ba816129b4845461281f565b8461293e565b602080601f8311600181146129ef57600084156129d75750858301515b600019600386901b1c1916600185901b178555612984565b600085815260208120601f198616915b82811015612a1e578886015182559484019460019091019084016129ff565b5085821015612a3c5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212202d45516b3d1dd12cb916bd238865509f18b3b587fc3a3136ae02a2906697387164736f6c63430008100033";

type GoldenTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldenTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldenToken__factory extends ContractFactory {
  constructor(...args: GoldenTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenToken> {
    return super.deploy(overrides || {}) as Promise<GoldenToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GoldenToken {
    return super.attach(address) as GoldenToken;
  }
  override connect(signer: Signer): GoldenToken__factory {
    return super.connect(signer) as GoldenToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenTokenInterface {
    return new utils.Interface(_abi) as GoldenTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenToken {
    return new Contract(address, _abi, signerOrProvider) as GoldenToken;
  }
}
