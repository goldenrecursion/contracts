/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldenToken,
  GoldenTokenInterface,
} from "../../../contracts/token/GoldenToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addedBurner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addedBy",
        type: "address",
      },
    ],
    name: "BurnerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "removedBurner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "removedBy",
        type: "address",
      },
    ],
    name: "BurnerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addedMinter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addedBy",
        type: "address",
      },
    ],
    name: "MinterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "removedMinter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "removedBy",
        type: "address",
      },
    ],
    name: "MinterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addedOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addedBy",
        type: "address",
      },
    ],
    name: "OwnerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "removedOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "removedBy",
        type: "address",
      },
    ],
    name: "OwnerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addBurner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20VotesUpgradeable.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isBurner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isMinter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeBurner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612962806100206000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c80636fcfff4511610125578063a457c2d7116100ad578063d505accf1161007c578063d505accf146104ae578063dd62ed3e146104c1578063f1127ed8146104d4578063f44637ba14610511578063fe4b84df1461052457600080fd5b8063a457c2d714610462578063a9059cbb14610475578063aa271e1a14610488578063c3cda5201461049b57600080fd5b80637ecebe00116100f45780637ecebe001461040e5780638e539e8c1461042157806395d89b4114610434578063983b2d561461043c5780639ab24eb01461044f57600080fd5b80636fcfff45146103975780637065cb48146103bf57806370a08231146103d257806379cc6790146103fb57600080fd5b8063313ce567116101a857806340c10f191161017757806340c10f191461030757806342966c681461031a5780634334614a1461032d578063587cde1e146103405780635c19a95c1461038457600080fd5b8063313ce567146102ca5780633644e515146102d957806339509351146102e15780633a46b1a8146102f457600080fd5b806318160ddd116101e457806318160ddd1461027f57806323b872dd146102915780632f54bf6e146102a45780633092afd5146102b757600080fd5b8063028468581461021657806306fdde031461022b578063095ea7b314610249578063173825d91461026c575b600080fd5b61022961022436600461246d565b610537565b005b610233610571565b6040516102409190612488565b60405180910390f35b61025c6102573660046124d6565b610603565b6040519015158152602001610240565b61022961027a36600461246d565b61061d565b6035545b604051908152602001610240565b61025c61029f366004612500565b61064b565b61025c6102b236600461246d565b61066f565b6102296102c536600461246d565b61067d565b60405160128152602001610240565b6102836106ab565b61025c6102ef3660046124d6565b6106ba565b6102836103023660046124d6565b6106dc565b6102296103153660046124d6565b610756565b61022961032836600461253c565b6107d2565b61025c61033b36600461246d565b61084a565b61036c61034e36600461246d565b6001600160a01b03908116600090815260fe60205260409020541690565b6040516001600160a01b039091168152602001610240565b61022961039236600461246d565b610858565b6103aa6103a536600461246d565b610862565b60405163ffffffff9091168152602001610240565b6102296103cd36600461246d565b610884565b6102836103e036600461246d565b6001600160a01b031660009081526033602052604090205490565b6102296104093660046124d6565b6108b2565b61028361041c36600461246d565b6108c7565b61028361042f36600461253c565b6108e5565b610233610942565b61022961044a36600461246d565b610951565b61028361045d36600461246d565b61097f565b61025c6104703660046124d6565b610a06565b61025c6104833660046124d6565b610a81565b61025c61049636600461246d565b610a8f565b6102296104a9366004612566565b610a9d565b6102296104bc3660046125be565b610bd3565b6102836104cf366004612628565b610d37565b6104e76104e236600461265b565b610d62565b60408051825163ffffffff1681526020928301516001600160e01b03169281019290925201610240565b61022961051f36600461246d565b610de6565b61022961053236600461253c565b610e14565b6105403361066f565b6105655760405162461bcd60e51b815260040161055c9061269b565b60405180910390fd5b61056e81610fb4565b50565b606060368054610580906126e9565b80601f01602080910402602001604051908101604052809291908181526020018280546105ac906126e9565b80156105f95780601f106105ce576101008083540402835291602001916105f9565b820191906000526020600020905b8154815290600101906020018083116105dc57829003601f168201915b5050505050905090565b600033610611818585610ff9565b60019150505b92915050565b6106263361066f565b6106425760405162461bcd60e51b815260040161055c9061269b565b61056e8161111d565b600033610659858285611162565b6106648585856111dc565b506001949350505050565b60006106176101308361138d565b6106863361066f565b6106a25760405162461bcd60e51b815260040161055c9061269b565b61056e81611410565b60006106b5611455565b905090565b6000336106118185856106cd8383610d37565b6106d79190612733565b610ff9565b600043821061072d5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161055c565b6001600160a01b038316600090815260ff6020526040902061074f90836114d0565b9392505050565b61075f33610a8f565b6107c45760405162461bcd60e51b815260206004820152603060248201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560448201526f20746865204d696e74657220726f6c6560801b606482015260840161055c565b6107ce82826115c7565b5050565b6107db3361084a565b6108405760405162461bcd60e51b815260206004820152603060248201527f4275726e6572526f6c653a2063616c6c657220646f6573206e6f74206861766560448201526f20746865204275726e657220726f6c6560801b606482015260840161055c565b61056e33826115d1565b60006106176101948361138d565b61056e33826115db565b6001600160a01b038116600090815260ff602052604081205461061790611655565b61088d3361066f565b6108a95760405162461bcd60e51b815260040161055c9061269b565b61056e816116be565b6108bd823383611162565b6107ce82826115d1565b6001600160a01b038116600090815260cb6020526040812054610617565b60004382106109365760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161055c565b610617610100836114d0565b606060378054610580906126e9565b61095a3361066f565b6109765760405162461bcd60e51b815260040161055c9061269b565b61056e81611703565b6001600160a01b038116600090815260ff602052604081205480156109f3576001600160a01b038316600090815260ff602052604090206109c1600183612746565b815481106109d1576109d1612759565b60009182526020909120015464010000000090046001600160e01b03166109f6565b60005b6001600160e01b03169392505050565b60003381610a148286610d37565b905083811015610a745760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161055c565b6106648286868403610ff9565b6000336106118185856111dc565b60006106176101628361138d565b83421115610aed5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e61747572652065787069726564000000604482015260640161055c565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610b6790610b5f9060a00160405160208183030381529060405280519060200120611748565b858585611796565b9050610b72816117be565b8614610bc05760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000604482015260640161055c565b610bca81886115db565b50505050505050565b83421115610c235760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161055c565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610c528c6117be565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610cad82611748565b90506000610cbd82878787611796565b9050896001600160a01b0316816001600160a01b031614610d205760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161055c565b610d2b8a8a8a610ff9565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b038316600090815260ff60205260409020805463ffffffff8416908110610da657610da6612759565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610def3361066f565b610e0b5760405162461bcd60e51b815260040161055c9061269b565b61056e816117e6565b600054610100900460ff1615808015610e345750600054600160ff909116105b80610e4e5750303b158015610e4e575060005460ff166001145b610eb15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161055c565b6000805460ff191660011790558015610ed4576000805461ff0019166101001790555b610f1c6040518060400160405280600b81526020016a23b7b63232b72a37b5b2b760a91b8152506040518060400160405280600381526020016211d31160ea1b81525061182b565b610f2461185c565b610f506040518060400160405280600b81526020016a23b7b63232b72a37b5b2b760a91b815250611885565b610f5861185c565b610f61336116be565b610f6b33836115c7565b80156107ce576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b610fc0610194826118cf565b60405133906001600160a01b038316907f85222465e0d438163a28671b59fc9ebeb03bf39f880ddd36c8315da7512b31c090600090a350565b6001600160a01b03831661105b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161055c565b6001600160a01b0382166110bc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161055c565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b611129610130826118cf565b60405133906001600160a01b038316907fe594d081b4382713733fe631966432c9cea5199afb2db5c3c1931f9f9300367990600090a350565b600061116e8484610d37565b905060001981146111d657818110156111c95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161055c565b6111d68484848403610ff9565b50505050565b6001600160a01b0383166112405760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161055c565b6001600160a01b0382166112a25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161055c565b6001600160a01b0383166000908152603360205260409020548181101561131a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161055c565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061137a9086815260200190565b60405180910390a36111d6848484611956565b60006001600160a01b0382166113f05760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840161055c565b506001600160a01b03166000908152602091909152604090205460ff1690565b61141c610162826118cf565b60405133906001600160a01b038316907f4b5ef9a786cf64a7d82ebcf2d5132667edc9faef4ac36260d9a9e52c526b623290600090a350565b60006106b57f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61148460975490565b6098546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b81546000908181600581111561152a5760006114eb84611961565b6114f59085612746565b600088815260209020909150869082015463ffffffff16111561151a57809150611528565b611525816001612733565b92505b505b8082101561157757600061153e8383611a49565b600088815260209020909150869082015463ffffffff16111561156357809150611571565b61156e816001612733565b92505b5061152a565b80156115b15761159a8661158c600184612746565b600091825260209091200190565b5464010000000090046001600160e01b03166115b4565b60005b6001600160e01b03169695505050505050565b6107ce8282611a64565b6107ce8282611aef565b6001600160a01b03828116600081815260fe6020818152604080842080546033845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46111d6828483611b08565b600063ffffffff8211156116ba5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161055c565b5090565b6116ca61013082611c45565b60405133906001600160a01b038316907fc82bdbbf677a2462f2a7e22e4ba9abd209496b69cd7b868b3b1d28f76e09a40a90600090a350565b61170f61016282611c45565b60405133906001600160a01b038316907f3c091dafb1d99e4a4c333024492eac3b2cd8bf921a3dd547c937db33be307bb890600090a350565b6000610617611755611455565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006117a787878787611d0d565b915091506117b481611dd1565b5095945050505050565b6001600160a01b038116600090815260cb602052604090208054600181018255905b50919050565b6117f261019482611c45565b60405133906001600160a01b038316907f86515ebaad527298e98929c064c075f5a2604cc80afc0db29e73c01a36f8e98c90600090a350565b600054610100900460ff166118525760405162461bcd60e51b815260040161055c9061276f565b6107ce8282611f1b565b600054610100900460ff166118835760405162461bcd60e51b815260040161055c9061276f565b565b600054610100900460ff166118ac5760405162461bcd60e51b815260040161055c9061276f565b61056e81604051806040016040528060018152602001603160f81b815250611f5b565b6118d9828261138d565b61192f5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b606482015260840161055c565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b505050565b611951838383611f9c565b60008160000361197357506000919050565b6000600161198084611fce565b901c6001901b90506001818481611999576119996127ba565b048201901c905060018184816119b1576119b16127ba565b048201901c905060018184816119c9576119c96127ba565b048201901c905060018184816119e1576119e16127ba565b048201901c905060018184816119f9576119f96127ba565b048201901c90506001818481611a1157611a116127ba565b048201901c90506001818481611a2957611a296127ba565b048201901c905061074f81828581611a4357611a436127ba565b04612062565b6000611a5860028484186127d0565b61074f90848416612733565b611a6e8282612078565b6035546001600160e01b031015611ae05760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b606482015260840161055c565b6111d66101006121418361214d565b611af982826122a1565b6111d66101006123dc8361214d565b816001600160a01b0316836001600160a01b031614158015611b2a5750600081115b15611951576001600160a01b03831615611bb8576001600160a01b038316600090815260ff602052604081208190611b65906123dc8561214d565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611bad929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611951576001600160a01b038216600090815260ff602052604081208190611bee906121418561214d565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611c36929190918252602082015260400190565b60405180910390a25050505050565b6001600160a01b038116611c915760405162461bcd60e51b8152602060048201526013602482015272496e76616c696420307830206164647265737360681b604482015260640161055c565b611c9b828261138d565b15611ce85760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015260640161055c565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611d445750600090506003611dc8565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611d98573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611dc157600060019250925050611dc8565b9150600090505b94509492505050565b6000816004811115611de557611de56127f2565b03611ded5750565b6001816004811115611e0157611e016127f2565b03611e4e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161055c565b6002816004811115611e6257611e626127f2565b03611eaf5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161055c565b6003816004811115611ec357611ec36127f2565b0361056e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161055c565b600054610100900460ff16611f425760405162461bcd60e51b815260040161055c9061276f565b6036611f4e838261286c565b506037611951828261286c565b600054610100900460ff16611f825760405162461bcd60e51b815260040161055c9061276f565b815160209283012081519190920120609791909155609855565b6001600160a01b03838116600090815260fe602052604080822054858416835291205461195192918216911683611b08565b600080608083901c15611fe357608092831c92015b604083901c15611ff557604092831c92015b602083901c1561200757602092831c92015b601083901c1561201957601092831c92015b600883901c1561202b57600892831c92015b600483901c1561203d57600492831c92015b600283901c1561204f57600292831c92015b600183901c156106175760010192915050565b6000818310612071578161074f565b5090919050565b6001600160a01b0382166120ce5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161055c565b80603560008282546120e09190612733565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107ce60008383611956565b600061074f8284612733565b8254600090819081811561219a5761216a8761158c600185612746565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b031660208201526121af565b60408051808201909152600080825260208201525b905080602001516001600160e01b031693506121cf84868863ffffffff16565b92506000821180156121e75750805163ffffffff1643145b1561222c576121f5836123e8565b6122048861158c600186612746565b80546001600160e01b03929092166401000000000263ffffffff909216919091179055612297565b86604051806040016040528061224143611655565b63ffffffff168152602001612255866123e8565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b6001600160a01b0382166123015760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161055c565b6001600160a01b038216600090815260336020526040902054818110156123755760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161055c565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361195183600084611956565b600061074f8284612746565b60006001600160e01b038211156116ba5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161055c565b80356001600160a01b038116811461246857600080fd5b919050565b60006020828403121561247f57600080fd5b61074f82612451565b600060208083528351808285015260005b818110156124b557858101830151858201604001528201612499565b506000604082860101526040601f19601f8301168501019250505092915050565b600080604083850312156124e957600080fd5b6124f283612451565b946020939093013593505050565b60008060006060848603121561251557600080fd5b61251e84612451565b925061252c60208501612451565b9150604084013590509250925092565b60006020828403121561254e57600080fd5b5035919050565b803560ff8116811461246857600080fd5b60008060008060008060c0878903121561257f57600080fd5b61258887612451565b955060208701359450604087013593506125a460608801612555565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a0312156125d957600080fd5b6125e288612451565b96506125f060208901612451565b9550604088013594506060880135935061260c60808901612555565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561263b57600080fd5b61264483612451565b915061265260208401612451565b90509250929050565b6000806040838503121561266e57600080fd5b61267783612451565b9150602083013563ffffffff8116811461269057600080fd5b809150509250929050565b6020808252602e908201527f4f776e6572526f6c653a2063616c6c657220646f6573206e6f7420686176652060408201526d746865204f776e657220726f6c6560901b606082015260800190565b600181811c908216806126fd57607f821691505b6020821081036117e057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156106175761061761271d565b818103818111156106175761061761271d565b634e487b7160e01b600052603260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826127ed57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f82111561195157600081815260208120601f850160051c810160208610156128455750805b601f850160051c820191505b8181101561286457828155600101612851565b505050505050565b815167ffffffffffffffff81111561288657612886612808565b61289a8161289484546126e9565b8461281e565b602080601f8311600181146128cf57600084156128b75750858301515b600019600386901b1c1916600185901b178555612864565b600085815260208120601f198616915b828110156128fe578886015182559484019460019091019084016128df565b508582101561291c5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220301c01570cdcc7d1b99f84764c703a278fea47c7474ad2dfbb848131527b03cc64736f6c63430008100033";

type GoldenTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldenTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldenToken__factory extends ContractFactory {
  constructor(...args: GoldenTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenToken> {
    return super.deploy(overrides || {}) as Promise<GoldenToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GoldenToken {
    return super.attach(address) as GoldenToken;
  }
  override connect(signer: Signer): GoldenToken__factory {
    return super.connect(signer) as GoldenToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenTokenInterface {
    return new utils.Interface(_abi) as GoldenTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenToken {
    return new Contract(address, _abi, signerOrProvider) as GoldenToken;
  }
}
