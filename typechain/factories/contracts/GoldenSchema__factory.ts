/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldenSchema,
  GoldenSchemaInterface,
} from "../../contracts/GoldenSchema";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "EntityTypeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "EntityTypeRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "EntityTypeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "entityTypeCID",
        type: "bytes32",
      },
    ],
    name: "addEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "predicateCID",
        type: "bytes32",
      },
    ],
    name: "addPredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "entityTypeID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.EntityType[]",
        name: "types",
        type: "tuple[]",
      },
    ],
    name: "bulkAddEntityTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "predcts",
        type: "tuple[]",
      },
    ],
    name: "bulkAddPredicates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16[]",
        name: "ids",
        type: "bytes16[]",
      },
    ],
    name: "bulkRemoveEntityTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16[]",
        name: "ids",
        type: "bytes16[]",
      },
    ],
    name: "bulkRemovePredicates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    name: "entityTypeIDToLatestCID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entityTypes",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "entityTypeID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.EntityType[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "initialPredicates",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes16",
            name: "entityTypeID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.EntityType[]",
        name: "initialEntityTypes",
        type: "tuple[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    name: "predicateIDToLatestCID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "predicates",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
    ],
    name: "removeEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
    ],
    name: "removePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "entityTypeCID",
        type: "bytes32",
      },
    ],
    name: "updateEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "predicateCID",
        type: "bytes32",
      },
    ],
    name: "updatePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506114f0806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063c99f941c11610071578063c99f941c14610246578063ce52e81514610259578063d6b763631461026c578063dbb8aa771461027f578063f2fde38b1461029257600080fd5b8063715018a6146101f05780638da5cb5b146101f8578063b4112e4014610213578063b988eb121461023357600080fd5b80633c3efab4116100e95780633c3efab4146101745780634253797814610189578063457401d31461019c5780634c019d21146101ca578063702f1f5d146101dd57600080fd5b80632514704c1461011b5780632562e43b1461013057806333e1e9821461014e57806338b7a7d514610161575b600080fd5b61012e61012936600461102c565b6102a5565b005b6101386102fe565b604051610145919061104e565b60405180910390f35b61012e61015c3660046110fb565b610413565b61012e61016f36600461113d565b6104ce565b61017c61051e565b6040516101459190611167565b61012e6101973660046110fb565b61062d565b6101bc6101aa36600461102c565b606a6020526000908152604090205481565b604051908152602001610145565b61012e6101d836600461113d565b6106d6565b61012e6101eb36600461113d565b610731565b61012e61078c565b6033546040516001600160a01b039091168152602001610145565b6101bc61022136600461102c565b60676020526000908152604090205481565b61012e61024136600461113d565b6107a0565b61012e6102543660046112b8565b6107f0565b61012e610267366004611347565b6109cc565b61012e61027a36600461102c565b610a68565b61012e61028d366004611347565b610ac1565b61012e6102a03660046113bc565b610b5d565b6102ad610bd6565b6102b8606882610c30565b6001600160801b031981166000818152606a60205260408082205490519092917f5529e55acb20a6fcca4dbfdd33eeecebc71fbf8f6eeb050ba1a50b66511c48a891a350565b60695460609060009067ffffffffffffffff81111561031f5761031f6111bb565b60405190808252806020026020018201604052801561036457816020015b604080518082019091526000808252602082015281526020019060019003908161033d5790505b50905060005b815181101561040d5761037e606882610dd9565b828281518110610390576103906113e5565b60209081029190910101516001600160801b03199091169052606a60006103b8606884610dd9565b6001600160801b0319166001600160801b0319168152602001908152602001600020548282815181106103ed576103ed6113e5565b60209081029190910181015101528061040581611411565b91505061036a565b50919050565b61041b610bd6565b8061046d5760405162461bcd60e51b815260206004820152601760248201527f62756c6b20616464203020656e7469747920547970657300000000000000000060448201526064015b60405180910390fd5b60005b818110156104c957600083838381811061048c5761048c6113e5565b9050604002018036038101906104a2919061142a565b90506104b6816000015182602001516106d6565b50806104c181611411565b915050610470565b505050565b6104d6610bd6565b6001600160801b03198216600081815260676020526040808220849055518392917f115c3e1d5164e8f7d3fc558e8a290f058c709114555eed7426c3c3b9d7d7318591a35050565b60665460609060009067ffffffffffffffff81111561053f5761053f6111bb565b60405190808252806020026020018201604052801561058457816020015b604080518082019091526000808252602082015281526020019060019003908161055d5790505b50905060005b815181101561040d5761059e606582610dd9565b8282815181106105b0576105b06113e5565b60209081029190910101516001600160801b03199091169052606760006105d8606584610dd9565b6001600160801b0319166001600160801b03191681526020019081526020016000205482828151811061060d5761060d6113e5565b60209081029190910181015101528061062581611411565b91505061058a565b610635610bd6565b8061067a5760405162461bcd60e51b815260206004820152601560248201527462756c6b206164642030207072656469636174657360581b6044820152606401610464565b60005b818110156104c9576000838383818110610699576106996113e5565b9050604002018036038101906106af919061142a565b90506106c381600001518260200151610731565b50806106ce81611411565b91505061067d565b6106de610bd6565b6106e9606883610e1c565b6001600160801b031982166000818152606a6020526040808220849055518392917f2f872f7622fa2463de842fdb296dcd8b04e8d9a4c74f9d1bd7fc394e9bbbbc5d91a35050565b610739610bd6565b610744606583610e1c565b6001600160801b03198216600081815260676020526040808220849055518392917fddbd9c69ad18561fc7cf11ff7be612fea0c255ddacedce5a41dd21a65a24ae8591a35050565b610794610bd6565b61079e6000610ee4565b565b6107a8610bd6565b6001600160801b031982166000818152606a6020526040808220849055518392917fbeabbc887e1b032117e8c1eb4816b60ee38c9678b75138255a0fb0c505badb5891a35050565b600054610100900460ff16158080156108105750600054600160ff909116105b8061082a5750303b15801561082a575060005460ff166001145b61088d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610464565b6000805460ff1916600117905580156108b0576000805461ff0019166101001790555b6108b8610f36565b825160005b8181101561091b576109098582815181106108da576108da6113e5565b6020026020010151600001518683815181106108f8576108f86113e5565b602002602001015160200151610731565b8061091381611411565b9150506108bd565b50825160005b8181101561097f5761096d85828151811061093e5761093e6113e5565b60200260200101516000015186838151811061095c5761095c6113e5565b6020026020010151602001516106d6565b8061097781611411565b915050610921565b50505080156104c9576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6109d4610bd6565b80610a215760405162461bcd60e51b815260206004820152601860248201527f62756c6b2072656d6f76652030207072656469636174657300000000000000006044820152606401610464565b60005b818110156104c957610a56838383818110610a4157610a416113e5565b905060200201602081019061027a919061102c565b80610a6081611411565b915050610a24565b610a70610bd6565b610a7b606582610c30565b6001600160801b031981166000818152606760205260408082205490519092917f0792080f73e0f4bd6ee184076e9f0924507e65f2aa6517aef7b6abd9bc45b96291a350565b610ac9610bd6565b80610b165760405162461bcd60e51b815260206004820152601a60248201527f62756c6b2072656d6f7665203020656e746974792054797065730000000000006044820152606401610464565b60005b818110156104c957610b4b838383818110610b3657610b366113e5565b9050602002016020810190610129919061102c565b80610b5581611411565b915050610b19565b610b65610bd6565b6001600160a01b038116610bca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610464565b610bd381610ee4565b50565b6033546001600160a01b0316331461079e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610464565b610c3a8282610f65565b610c995760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920646f6573206e6f74206578697374206960448201526937103a34329039b2ba1760b11b6064820152608401610464565b60006001610ca8846001015490565b610cb29190611446565b6001600160801b03198316600090815260208590526040902054909150808214610d75576000846001018381548110610ced57610ced6113e5565b6000918252602080832060028304015460019283166010026101000a900460801b6001600160801b03198116845290889052604090922084905586018054919250829184908110610d4057610d406113e5565b90600052602060002090600291828204019190066010026101000a8154816001600160801b03021916908360801c0217905550505b6001600160801b0319831660009081526020859052604081205560018401805480610da257610da2611459565b60008281526020902060026000199092019182040180546001600160801b03601060018516026101000a0219169055905550505050565b6000826001018281548110610df057610df06113e5565b90600052602060002090600291828204019190066010029054906101000a900460801b90505b92915050565b610e268282610f65565b15610e865760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b6064820152608401610464565b600182810180546001600160801b0319841660009081526020958652604081208290558184018355918252939020600284040180546001600160801b03949092166010026101000a9384021990911660809290921c92909202179055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610f5d5760405162461bcd60e51b81526004016104649061146f565b61079e610fdf565b60018201546000908103610f7b57506000610e16565b6001600160801b031982166000818152602085905260409020546001850180549091908110610fac57610fac6113e5565b6000918252602090912060028204015460019091166010026101000a900460801b6001600160801b031916149392505050565b600054610100900460ff166110065760405162461bcd60e51b81526004016104649061146f565b61079e33610ee4565b80356001600160801b03198116811461102757600080fd5b919050565b60006020828403121561103e57600080fd5b6110478261100f565b9392505050565b602080825282518282018190526000919060409081850190868401855b828110156110a25761109284835180516001600160801b0319168252602090810151910152565b928401929085019060010161106b565b5091979650505050505050565b60008083601f8401126110c157600080fd5b50813567ffffffffffffffff8111156110d957600080fd5b6020830191508360208260061b85010111156110f457600080fd5b9250929050565b6000806020838503121561110e57600080fd5b823567ffffffffffffffff81111561112557600080fd5b611131858286016110af565b90969095509350505050565b6000806040838503121561115057600080fd5b6111598361100f565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b828110156110a2576111ab84835180516001600160801b0319168252602090810151910152565b9284019290850190600101611184565b634e487b7160e01b600052604160045260246000fd5b6000604082840312156111e357600080fd5b6040516040810181811067ffffffffffffffff82111715611206576112066111bb565b6040529050806112158361100f565b8152602083013560208201525092915050565b600067ffffffffffffffff80841115611243576112436111bb565b60408051601f19603f8760051b011681018181108482111715611268576112686111bb565b8252858152925060208084019250600686901b8501908782111561128b57600080fd5b855b828110156112ac5761129f89826111d1565b855293810193830161128d565b50505050509392505050565b600080604083850312156112cb57600080fd5b823567ffffffffffffffff808211156112e357600080fd5b818501915085601f8301126112f757600080fd5b61130686833560208501611228565b9350602085013591508082111561131c57600080fd5b508301601f8101851361132e57600080fd5b61133d85823560208401611228565b9150509250929050565b6000806020838503121561135a57600080fd5b823567ffffffffffffffff8082111561137257600080fd5b818501915085601f83011261138657600080fd5b81358181111561139557600080fd5b8660208260051b85010111156113aa57600080fd5b60209290920196919550909350505050565b6000602082840312156113ce57600080fd5b81356001600160a01b038116811461104757600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611423576114236113fb565b5060010190565b60006040828403121561143c57600080fd5b61104783836111d1565b81810381811115610e1657610e166113fb565b634e487b7160e01b600052603160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220e041132829db6233c331c31c757cb26d9d4daac820aebbf39713b5ce05f3960064736f6c63430008100033";

type GoldenSchemaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldenSchemaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldenSchema__factory extends ContractFactory {
  constructor(...args: GoldenSchemaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenSchema> {
    return super.deploy(overrides || {}) as Promise<GoldenSchema>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GoldenSchema {
    return super.attach(address) as GoldenSchema;
  }
  override connect(signer: Signer): GoldenSchema__factory {
    return super.connect(signer) as GoldenSchema__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenSchemaInterface {
    return new utils.Interface(_abi) as GoldenSchemaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenSchema {
    return new Contract(address, _abi, signerOrProvider) as GoldenSchema;
  }
}
