/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldenSchema,
  GoldenSchemaInterface,
} from "../../contracts/GoldenSchema";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "initialPredicates",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "predicateCID",
        type: "bytes32",
      },
    ],
    name: "addPredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    name: "predicateIDToLatestCID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "predicates",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
    ],
    name: "removePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "predicateCID",
        type: "bytes32",
      },
    ],
    name: "updatePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e5138038062000e5183398101604081905262000034916200039f565b6200003f33620000bd565b805160005b81811015620000b4576200009f83828151811062000066576200006662000491565b60200260200101516000015184838151811062000087576200008762000491565b6020026020010151602001516200010d60201b60201c565b80620000ab81620004a7565b91505062000044565b505050620004cf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001176200017a565b62000132826001620001dc60201b620003f51790919060201c565b6001600160801b03198216600081815260036020526040808220849055518392917fddbd9c69ad18561fc7cf11ff7be612fea0c255ddacedce5a41dd21a65a24ae8591a35050565b6000546001600160a01b03163314620001da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b565b620001e88282620002a8565b156200024a5760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b6064820152608401620001d1565b600182810180546001600160801b0319841660009081526020958652604081208290558184018355918252939020600284040180546001600160801b03949092166010026101000a9384021990911660809290921c92909202179055565b60018201546000908103620002c05750600062000325565b6001600160801b031982166000818152602085905260409020546001850180549091908110620002f457620002f462000491565b90600052602060002090600291828204019190066010029054906101000a900460801b6001600160801b0319161490505b92915050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156200036657620003666200032b565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200039757620003976200032b565b604052919050565b60006020808385031215620003b357600080fd5b82516001600160401b0380821115620003cb57600080fd5b818501915085601f830112620003e057600080fd5b815181811115620003f557620003f56200032b565b62000405848260051b016200036c565b818152848101925060069190911b8301840190878211156200042657600080fd5b928401925b81841015620004865760408489031215620004465760008081fd5b6200045062000341565b84516001600160801b0319811681146200046a5760008081fd5b815284860151868201528352604090930192918401916200042b565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004c857634e487b7160e01b600052601160045260246000fd5b5060010190565b61097280620004df6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100db578063b4112e40146100f6578063d6b7636314610124578063f2fde38b1461013757600080fd5b806338b7a7d51461008d5780633c3efab4146100a2578063702f1f5d146100c0578063715018a6146100d3575b600080fd5b6100a061009b3660046107ea565b61014a565b005b6100aa61019a565b6040516100b79190610814565b60405180910390f35b6100a06100ce3660046107ea565b6102af565b6100a061030a565b6000546040516001600160a01b0390911681526020016100b7565b61011661010436600461086d565b60036020526000908152604090205481565b6040519081526020016100b7565b6100a061013236600461086d565b61031e565b6100a061014536600461088f565b610377565b6101526104bd565b6001600160801b03198216600081815260036020526040808220849055518392917f115c3e1d5164e8f7d3fc558e8a290f058c709114555eed7426c3c3b9d7d7318591a35050565b60025460609060009067ffffffffffffffff8111156101bb576101bb6108b8565b60405190808252806020026020018201604052801561020057816020015b60408051808201909152600080825260208201528152602001906001900390816101d95790505b50905060005b81518110156102a95761021a600182610517565b82828151811061022c5761022c6108ce565b60209081029190910101516001600160801b0319909116905260036000610254600184610517565b6001600160801b0319166001600160801b031916815260200190815260200160002054828281518110610289576102896108ce565b6020908102919091018101510152806102a1816108fa565b915050610206565b50919050565b6102b76104bd565b6102c26001836103f5565b6001600160801b03198216600081815260036020526040808220849055518392917fddbd9c69ad18561fc7cf11ff7be612fea0c255ddacedce5a41dd21a65a24ae8591a35050565b6103126104bd565b61031c600061055a565b565b6103266104bd565b6103316001826105aa565b6001600160801b031981166000818152600360205260408082205490519092917f0792080f73e0f4bd6ee184076e9f0924507e65f2aa6517aef7b6abd9bc45b96291a350565b61037f6104bd565b6001600160a01b0381166103e95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6103f28161055a565b50565b6103ff8282610753565b1561045f5760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b60648201526084016103e0565b600182810180546001600160801b0319841660009081526020958652604081208290558184018355918252939020600284040180546001600160801b03949092166010026101000a9384021990911660809290921c92909202179055565b6000546001600160a01b0316331461031c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e0565b600082600101828154811061052e5761052e6108ce565b90600052602060002090600291828204019190066010029054906101000a900460801b90505b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b48282610753565b6106135760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920646f6573206e6f74206578697374206960448201526937103a34329039b2ba1760b11b60648201526084016103e0565b60006001610622846001015490565b61062c9190610913565b6001600160801b031983166000908152602085905260409020549091508082146106ef576000846001018381548110610667576106676108ce565b6000918252602080832060028304015460019283166010026101000a900460801b6001600160801b031981168452908890526040909220849055860180549192508291849081106106ba576106ba6108ce565b90600052602060002090600291828204019190066010026101000a8154816001600160801b03021916908360801c0217905550505b6001600160801b031983166000908152602085905260408120556001840180548061071c5761071c610926565b60008281526020902060026000199092019182040180546001600160801b03601060018516026101000a0219169055905550505050565b6001820154600090810361076957506000610554565b6001600160801b03198216600081815260208590526040902054600185018054909190811061079a5761079a6108ce565b6000918252602090912060028204015460019091166010026101000a900460801b6001600160801b031916149392505050565b80356001600160801b0319811681146107e557600080fd5b919050565b600080604083850312156107fd57600080fd5b610806836107cd565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b8281101561086057815180516001600160801b0319168552860151868501529284019290850190600101610831565b5091979650505050505050565b60006020828403121561087f57600080fd5b610888826107cd565b9392505050565b6000602082840312156108a157600080fd5b81356001600160a01b038116811461088857600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161090c5761090c6108e4565b5060010190565b81810381811115610554576105546108e4565b634e487b7160e01b600052603160045260246000fdfea264697066735822122089e043d850c8bfd05a6a93b36f2ca92b09a685d82429788d5e8ec40cfdb1696b64736f6c63430008100033";

type GoldenSchemaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldenSchemaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldenSchema__factory extends ContractFactory {
  constructor(...args: GoldenSchemaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialPredicates: GoldenSchema.PredicateStruct[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenSchema> {
    return super.deploy(
      initialPredicates,
      overrides || {}
    ) as Promise<GoldenSchema>;
  }
  override getDeployTransaction(
    initialPredicates: GoldenSchema.PredicateStruct[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialPredicates, overrides || {});
  }
  override attach(address: string): GoldenSchema {
    return super.attach(address) as GoldenSchema;
  }
  override connect(signer: Signer): GoldenSchema__factory {
    return super.connect(signer) as GoldenSchema__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenSchemaInterface {
    return new utils.Interface(_abi) as GoldenSchemaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenSchema {
    return new Contract(address, _abi, signerOrProvider) as GoldenSchema;
  }
}
