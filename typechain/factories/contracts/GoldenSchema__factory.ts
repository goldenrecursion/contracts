/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldenSchema,
  GoldenSchemaInterface,
} from "../../contracts/GoldenSchema";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "EntityTypeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "EntityTypeRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "EntityTypeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "entityTypeCID",
        type: "bytes32",
      },
    ],
    name: "addEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "predicateCID",
        type: "bytes32",
      },
    ],
    name: "addPredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    name: "entityTypeIDToLatestCID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entityTypes",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "entityTypeID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.EntityType[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "initialPredicates",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes16",
            name: "entityTypeID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.EntityType[]",
        name: "initialEntityTypes",
        type: "tuple[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    name: "predicateIDToLatestCID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "predicates",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
    ],
    name: "removeEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
    ],
    name: "removePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "entityTypeCID",
        type: "bytes32",
      },
    ],
    name: "updateEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "predicateCID",
        type: "bytes32",
      },
    ],
    name: "updatePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type GoldenSchemaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldenSchemaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldenSchema__factory extends ContractFactory {
  constructor(...args: GoldenSchemaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenSchema> {
    return super.deploy(overrides || {}) as Promise<GoldenSchema>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GoldenSchema {
    return super.attach(address) as GoldenSchema;
  }
  override connect(signer: Signer): GoldenSchema__factory {
    return super.connect(signer) as GoldenSchema__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenSchemaInterface {
    return new utils.Interface(_abi) as GoldenSchemaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenSchema {
    return new Contract(address, _abi, signerOrProvider) as GoldenSchema;
  }
}
