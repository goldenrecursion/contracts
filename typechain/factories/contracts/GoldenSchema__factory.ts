/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldenSchema,
  GoldenSchemaInterface,
} from "../../contracts/GoldenSchema";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "EntityTypeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "EntityTypeRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "EntityTypeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "latestCID",
        type: "bytes32",
      },
    ],
    name: "PredicateUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "entityTypeCID",
        type: "bytes32",
      },
    ],
    name: "addEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "predicateCID",
        type: "bytes32",
      },
    ],
    name: "addPredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "entityTypeID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.EntityType[]",
        name: "types",
        type: "tuple[]",
      },
    ],
    name: "bulkAddEntityTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "predcts",
        type: "tuple[]",
      },
    ],
    name: "bulkAddPredicates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16[]",
        name: "ids",
        type: "bytes16[]",
      },
    ],
    name: "bulkRemoveEntityTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16[]",
        name: "ids",
        type: "bytes16[]",
      },
    ],
    name: "bulkRemovePredicates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    name: "entityTypeIDToLatestCID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entityTypes",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "entityTypeID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.EntityType[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "initialPredicates",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes16",
            name: "entityTypeID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.EntityType[]",
        name: "initialEntityTypes",
        type: "tuple[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    name: "predicateIDToLatestCID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "predicates",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "predicateID",
            type: "bytes16",
          },
          {
            internalType: "bytes32",
            name: "latestCID",
            type: "bytes32",
          },
        ],
        internalType: "struct GoldenSchema.Predicate[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
    ],
    name: "removeEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
    ],
    name: "removePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "entityTypeID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "entityTypeCID",
        type: "bytes32",
      },
    ],
    name: "updateEntityType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "predicateID",
        type: "bytes16",
      },
      {
        internalType: "bytes32",
        name: "predicateCID",
        type: "bytes32",
      },
    ],
    name: "updatePredicate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506114e9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063c99f941c11610071578063c99f941c14610246578063ce52e81514610259578063d6b763631461026c578063dbb8aa771461027f578063f2fde38b1461029257600080fd5b8063715018a6146101f05780638da5cb5b146101f8578063b4112e4014610213578063b988eb121461023357600080fd5b80633c3efab4116100e95780633c3efab4146101745780634253797814610189578063457401d31461019c5780634c019d21146101ca578063702f1f5d146101dd57600080fd5b80632514704c1461011b5780632562e43b1461013057806333e1e9821461014e57806338b7a7d514610161575b600080fd5b61012e610129366004611025565b6102a5565b005b6101386102fe565b6040516101459190611047565b60405180910390f35b61012e61015c3660046110f4565b610413565b61012e61016f366004611136565b6104c7565b61017c610517565b6040516101459190611160565b61012e6101973660046110f4565b610626565b6101bc6101aa366004611025565b606a6020526000908152604090205481565b604051908152602001610145565b61012e6101d8366004611136565b6106cf565b61012e6101eb366004611136565b61072a565b61012e610785565b6033546040516001600160a01b039091168152602001610145565b6101bc610221366004611025565b60676020526000908152604090205481565b61012e610241366004611136565b610799565b61012e6102543660046112b1565b6107e9565b61012e610267366004611340565b6109c5565b61012e61027a366004611025565b610a61565b61012e61028d366004611340565b610aba565b61012e6102a03660046113b5565b610b56565b6102ad610bcf565b6102b8606882610c29565b6001600160801b031981166000818152606a60205260408082205490519092917f5529e55acb20a6fcca4dbfdd33eeecebc71fbf8f6eeb050ba1a50b66511c48a891a350565b60695460609060009067ffffffffffffffff81111561031f5761031f6111b4565b60405190808252806020026020018201604052801561036457816020015b604080518082019091526000808252602082015281526020019060019003908161033d5790505b50905060005b815181101561040d5761037e606882610dd2565b828281518110610390576103906113de565b60209081029190910101516001600160801b03199091169052606a60006103b8606884610dd2565b6001600160801b0319166001600160801b0319168152602001908152602001600020548282815181106103ed576103ed6113de565b6020908102919091018101510152806104058161140a565b91505061036a565b50919050565b61041b610bcf565b806104665760405162461bcd60e51b815260206004820152601660248201527562756c6b20616464203020656e74697479547970657360501b60448201526064015b60405180910390fd5b60005b818110156104c2576000838383818110610485576104856113de565b90506040020180360381019061049b9190611423565b90506104af816000015182602001516106cf565b50806104ba8161140a565b915050610469565b505050565b6104cf610bcf565b6001600160801b03198216600081815260676020526040808220849055518392917f115c3e1d5164e8f7d3fc558e8a290f058c709114555eed7426c3c3b9d7d7318591a35050565b60665460609060009067ffffffffffffffff811115610538576105386111b4565b60405190808252806020026020018201604052801561057d57816020015b60408051808201909152600080825260208201528152602001906001900390816105565790505b50905060005b815181101561040d57610597606582610dd2565b8282815181106105a9576105a96113de565b60209081029190910101516001600160801b03199091169052606760006105d1606584610dd2565b6001600160801b0319166001600160801b031916815260200190815260200160002054828281518110610606576106066113de565b60209081029190910181015101528061061e8161140a565b915050610583565b61062e610bcf565b806106735760405162461bcd60e51b815260206004820152601560248201527462756c6b206164642030207072656469636174657360581b604482015260640161045d565b60005b818110156104c2576000838383818110610692576106926113de565b9050604002018036038101906106a89190611423565b90506106bc8160000151826020015161072a565b50806106c78161140a565b915050610676565b6106d7610bcf565b6106e2606883610e15565b6001600160801b031982166000818152606a6020526040808220849055518392917f2f872f7622fa2463de842fdb296dcd8b04e8d9a4c74f9d1bd7fc394e9bbbbc5d91a35050565b610732610bcf565b61073d606583610e15565b6001600160801b03198216600081815260676020526040808220849055518392917fddbd9c69ad18561fc7cf11ff7be612fea0c255ddacedce5a41dd21a65a24ae8591a35050565b61078d610bcf565b6107976000610edd565b565b6107a1610bcf565b6001600160801b031982166000818152606a6020526040808220849055518392917fbeabbc887e1b032117e8c1eb4816b60ee38c9678b75138255a0fb0c505badb5891a35050565b600054610100900460ff16158080156108095750600054600160ff909116105b806108235750303b158015610823575060005460ff166001145b6108865760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161045d565b6000805460ff1916600117905580156108a9576000805461ff0019166101001790555b6108b1610f2f565b825160005b81811015610914576109028582815181106108d3576108d36113de565b6020026020010151600001518683815181106108f1576108f16113de565b60200260200101516020015161072a565b8061090c8161140a565b9150506108b6565b50825160005b8181101561097857610966858281518110610937576109376113de565b602002602001015160000151868381518110610955576109556113de565b6020026020010151602001516106cf565b806109708161140a565b91505061091a565b50505080156104c2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6109cd610bcf565b80610a1a5760405162461bcd60e51b815260206004820152601860248201527f62756c6b2072656d6f7665203020707265646963617465730000000000000000604482015260640161045d565b60005b818110156104c257610a4f838383818110610a3a57610a3a6113de565b905060200201602081019061027a9190611025565b80610a598161140a565b915050610a1d565b610a69610bcf565b610a74606582610c29565b6001600160801b031981166000818152606760205260408082205490519092917f0792080f73e0f4bd6ee184076e9f0924507e65f2aa6517aef7b6abd9bc45b96291a350565b610ac2610bcf565b80610b0f5760405162461bcd60e51b815260206004820152601a60248201527f62756c6b2072656d6f7665203020656e74697479205479706573000000000000604482015260640161045d565b60005b818110156104c257610b44838383818110610b2f57610b2f6113de565b90506020020160208101906101299190611025565b80610b4e8161140a565b915050610b12565b610b5e610bcf565b6001600160a01b038116610bc35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161045d565b610bcc81610edd565b50565b6033546001600160a01b031633146107975760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161045d565b610c338282610f5e565b610c925760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920646f6573206e6f74206578697374206960448201526937103a34329039b2ba1760b11b606482015260840161045d565b60006001610ca1846001015490565b610cab919061143f565b6001600160801b03198316600090815260208590526040902054909150808214610d6e576000846001018381548110610ce657610ce66113de565b6000918252602080832060028304015460019283166010026101000a900460801b6001600160801b03198116845290889052604090922084905586018054919250829184908110610d3957610d396113de565b90600052602060002090600291828204019190066010026101000a8154816001600160801b03021916908360801c0217905550505b6001600160801b0319831660009081526020859052604081205560018401805480610d9b57610d9b611452565b60008281526020902060026000199092019182040180546001600160801b03601060018516026101000a0219169055905550505050565b6000826001018281548110610de957610de96113de565b90600052602060002090600291828204019190066010029054906101000a900460801b90505b92915050565b610e1f8282610f5e565b15610e7f5760405162461bcd60e51b815260206004820152602a60248201527f427974657331365365743a206b657920616c726561647920657869737473206960448201526937103a34329039b2ba1760b11b606482015260840161045d565b600182810180546001600160801b0319841660009081526020958652604081208290558184018355918252939020600284040180546001600160801b03949092166010026101000a9384021990911660809290921c92909202179055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610f565760405162461bcd60e51b815260040161045d90611468565b610797610fd8565b60018201546000908103610f7457506000610e0f565b6001600160801b031982166000818152602085905260409020546001850180549091908110610fa557610fa56113de565b6000918252602090912060028204015460019091166010026101000a900460801b6001600160801b031916149392505050565b600054610100900460ff16610fff5760405162461bcd60e51b815260040161045d90611468565b61079733610edd565b80356001600160801b03198116811461102057600080fd5b919050565b60006020828403121561103757600080fd5b61104082611008565b9392505050565b602080825282518282018190526000919060409081850190868401855b8281101561109b5761108b84835180516001600160801b0319168252602090810151910152565b9284019290850190600101611064565b5091979650505050505050565b60008083601f8401126110ba57600080fd5b50813567ffffffffffffffff8111156110d257600080fd5b6020830191508360208260061b85010111156110ed57600080fd5b9250929050565b6000806020838503121561110757600080fd5b823567ffffffffffffffff81111561111e57600080fd5b61112a858286016110a8565b90969095509350505050565b6000806040838503121561114957600080fd5b61115283611008565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b8281101561109b576111a484835180516001600160801b0319168252602090810151910152565b928401929085019060010161117d565b634e487b7160e01b600052604160045260246000fd5b6000604082840312156111dc57600080fd5b6040516040810181811067ffffffffffffffff821117156111ff576111ff6111b4565b60405290508061120e83611008565b8152602083013560208201525092915050565b600067ffffffffffffffff8084111561123c5761123c6111b4565b60408051601f19603f8760051b011681018181108482111715611261576112616111b4565b8252858152925060208084019250600686901b8501908782111561128457600080fd5b855b828110156112a55761129889826111ca565b8552938101938301611286565b50505050509392505050565b600080604083850312156112c457600080fd5b823567ffffffffffffffff808211156112dc57600080fd5b818501915085601f8301126112f057600080fd5b6112ff86833560208501611221565b9350602085013591508082111561131557600080fd5b508301601f8101851361132757600080fd5b61133685823560208401611221565b9150509250929050565b6000806020838503121561135357600080fd5b823567ffffffffffffffff8082111561136b57600080fd5b818501915085601f83011261137f57600080fd5b81358181111561138e57600080fd5b8660208260051b85010111156113a357600080fd5b60209290920196919550909350505050565b6000602082840312156113c757600080fd5b81356001600160a01b038116811461104057600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161141c5761141c6113f4565b5060010190565b60006040828403121561143557600080fd5b61104083836111ca565b81810381811115610e0f57610e0f6113f4565b634e487b7160e01b600052603160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220f8effef25b0e44be4b26e2e0d9d72352d66d7f8c9f96f8c802c62f668f45927f64736f6c63430008100033";

type GoldenSchemaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldenSchemaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldenSchema__factory extends ContractFactory {
  constructor(...args: GoldenSchemaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenSchema> {
    return super.deploy(overrides || {}) as Promise<GoldenSchema>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GoldenSchema {
    return super.attach(address) as GoldenSchema;
  }
  override connect(signer: Signer): GoldenSchema__factory {
    return super.connect(signer) as GoldenSchema__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenSchemaInterface {
    return new utils.Interface(_abi) as GoldenSchemaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenSchema {
    return new Contract(address, _abi, signerOrProvider) as GoldenSchema;
  }
}
