/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Reputation,
  ReputationInterface,
} from "../../../contracts/reputation/Reputation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxReputation",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addedOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addedBy",
        type: "address",
      },
    ],
    name: "OwnerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "removedOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "removedBy",
        type: "address",
      },
    ],
    name: "OwnerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_reputationAmount",
        type: "uint256",
      },
    ],
    name: "ReputationChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxReputation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getReputation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxReputation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setReputation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161078f38038061078f83398101604081905261002f916101df565b61003882610041565b60335550610219565b61004c600082610085565b60405133906001600160a01b038316907fc82bdbbf677a2462f2a7e22e4ba9abd209496b69cd7b868b3b1d28f76e09a40a90600090a350565b6001600160a01b0381166100e05760405162461bcd60e51b815260206004820152601360248201527f496e76616c69642030783020616464726573730000000000000000000000000060448201526064015b60405180910390fd5b6100ea828261015c565b156101375760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064016100d7565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166101bf5760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016100d7565b506001600160a01b03166000908152602091909152604090205460ff1690565b600080604083850312156101f257600080fd5b82516001600160a01b038116811461020957600080fd5b6020939093015192949293505050565b610567806102286000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806339066bf51161005b57806339066bf5146100d65780637065cb48146100de5780639c89a0e2146100f1578063b120c16a1461011a57600080fd5b8063173825d9146100825780631d22899b146100975780632f54bf6e146100b3575b600080fd5b610095610090366004610497565b61012d565b005b6100a060335481565b6040519081526020015b60405180910390f35b6100c66100c1366004610497565b610167565b60405190151581526020016100aa565b6033546100a0565b6100956100ec366004610497565b61017a565b6100a06100ff366004610497565b6001600160a01b031660009081526032602052604090205490565b6100956101283660046104b9565b6101a8565b61013633610167565b61015b5760405162461bcd60e51b8152600401610152906104e3565b60405180910390fd5b61016481610226565b50565b600061017460008361026a565b92915050565b61018333610167565b61019f5760405162461bcd60e51b8152600401610152906104e3565b610164816102ed565b6101b133610167565b6101cd5760405162461bcd60e51b8152600401610152906104e3565b6001600160a01b03821660008181526032602052604090819020839055517f02346ddcf76c3b1b394a4bdae70f10059e1b203aa11e9c1b0313e4a94db673229061021a9084815260200190565b60405180910390a25050565b610231600082610331565b60405133906001600160a01b038316907fe594d081b4382713733fe631966432c9cea5199afb2db5c3c1931f9f9300367990600090a350565b60006001600160a01b0382166102cd5760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401610152565b506001600160a01b03166000908152602091909152604090205460ff1690565b6102f86000826103b3565b60405133906001600160a01b038316907fc82bdbbf677a2462f2a7e22e4ba9abd209496b69cd7b868b3b1d28f76e09a40a90600090a350565b61033b828261026a565b6103915760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b6064820152608401610152565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166103ff5760405162461bcd60e51b8152602060048201526013602482015272496e76616c696420307830206164647265737360681b6044820152606401610152565b610409828261026a565b156104565760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401610152565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b80356001600160a01b038116811461049257600080fd5b919050565b6000602082840312156104a957600080fd5b6104b28261047b565b9392505050565b600080604083850312156104cc57600080fd5b6104d58361047b565b946020939093013593505050565b6020808252602e908201527f4f776e6572526f6c653a2063616c6c657220646f6573206e6f7420686176652060408201526d746865204f776e657220726f6c6560901b60608201526080019056fea264697066735822122087a290dd48d5037ea89a1a550421fad0d4737cb910e0207eaa796b09cd6e607164736f6c63430008100033";

type ReputationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReputationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Reputation__factory extends ContractFactory {
  constructor(...args: ReputationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: string,
    _maxReputation: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Reputation> {
    return super.deploy(
      _owner,
      _maxReputation,
      overrides || {}
    ) as Promise<Reputation>;
  }
  override getDeployTransaction(
    _owner: string,
    _maxReputation: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _maxReputation, overrides || {});
  }
  override attach(address: string): Reputation {
    return super.attach(address) as Reputation;
  }
  override connect(signer: Signer): Reputation__factory {
    return super.connect(signer) as Reputation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReputationInterface {
    return new utils.Interface(_abi) as ReputationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Reputation {
    return new Contract(address, _abi, signerOrProvider) as Reputation;
  }
}
