/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldenBountyQuestion,
  GoldenBountyQuestionInterface,
} from "../../../contracts/GoldenBounty.sol/GoldenBountyQuestion";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "goldenTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_asker",
        type: "address",
      },
      {
        internalType: "bytes16",
        name: "_subjectUUID",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "_predicateUUID",
        type: "bytes16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes16",
        name: "subjectUUID",
        type: "bytes16",
      },
      {
        indexed: false,
        internalType: "bytes16",
        name: "predicateUUID",
        type: "bytes16",
      },
      {
        indexed: false,
        internalType: "string",
        name: "answer",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "AnswerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptedAnswers",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "answer",
            type: "string",
          },
          {
            internalType: "address",
            name: "answerer",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "yesVoters",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "noVoters",
            type: "address[]",
          },
        ],
        internalType: "struct GoldenBountyQuestion.AnswerPublic[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_answer",
        type: "string",
      },
    ],
    name: "addAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum GoldenBountyQuestion.AnswerStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "answers",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "answer",
            type: "string",
          },
          {
            internalType: "address",
            name: "answerer",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "yesVoters",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "noVoters",
            type: "address[]",
          },
        ],
        internalType: "struct GoldenBountyQuestion.AnswerPublic[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "answers",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "answer",
            type: "string",
          },
          {
            internalType: "address",
            name: "answerer",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "yesVoters",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "noVoters",
            type: "address[]",
          },
        ],
        internalType: "struct GoldenBountyQuestion.AnswerPublic[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "asker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bounty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAnswers",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "answer",
            type: "string",
          },
          {
            internalType: "address",
            name: "answerer",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "yesVoters",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "noVoters",
            type: "address[]",
          },
        ],
        internalType: "struct GoldenBountyQuestion.AnswerPublic[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "predicateUUID",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rejectedAnswers",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "answer",
            type: "string",
          },
          {
            internalType: "address",
            name: "answerer",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "yesVoters",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "noVoters",
            type: "address[]",
          },
        ],
        internalType: "struct GoldenBountyQuestion.AnswerPublic[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subjectUUID",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "topAnswer",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "answer",
            type: "string",
          },
          {
            internalType: "address",
            name: "answerer",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "yesVoters",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "noVoters",
            type: "address[]",
          },
        ],
        internalType: "struct GoldenBountyQuestion.AnswerPublic",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isCorrect",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type GoldenBountyQuestionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldenBountyQuestionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldenBountyQuestion__factory extends ContractFactory {
  constructor(...args: GoldenBountyQuestionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    goldenTokenAddress: string,
    _asker: string,
    _subjectUUID: BytesLike,
    _predicateUUID: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenBountyQuestion> {
    return super.deploy(
      goldenTokenAddress,
      _asker,
      _subjectUUID,
      _predicateUUID,
      overrides || {}
    ) as Promise<GoldenBountyQuestion>;
  }
  override getDeployTransaction(
    goldenTokenAddress: string,
    _asker: string,
    _subjectUUID: BytesLike,
    _predicateUUID: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      goldenTokenAddress,
      _asker,
      _subjectUUID,
      _predicateUUID,
      overrides || {}
    );
  }
  override attach(address: string): GoldenBountyQuestion {
    return super.attach(address) as GoldenBountyQuestion;
  }
  override connect(signer: Signer): GoldenBountyQuestion__factory {
    return super.connect(signer) as GoldenBountyQuestion__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenBountyQuestionInterface {
    return new utils.Interface(_abi) as GoldenBountyQuestionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenBountyQuestion {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GoldenBountyQuestion;
  }
}
