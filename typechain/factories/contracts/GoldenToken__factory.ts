/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldenToken,
  GoldenTokenInterface,
} from "../../contracts/GoldenToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Slashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnStaked",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "_stakeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct StakeableUpgradeable.User[]",
        name: "users",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "bulkSlash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct StakeableUpgradeable.User[]",
        name: "users",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "bulkStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20VotesUpgradeable.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "stakeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612a79806100206000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c8063715018a611610125578063a694fc3a116100ad578063dd62ed3e1161007c578063dd62ed3e146104b8578063eb36854e146104cb578063f1127ed8146104de578063f2fde38b1461051b578063fe4b84df1461052e57600080fd5b8063a694fc3a1461046c578063a9059cbb1461047f578063c3cda52014610492578063d505accf146104a557600080fd5b80638da5cb5b116100f45780638da5cb5b1461041a5780638e539e8c1461042b57806395d89b411461043e5780639ab24eb014610446578063a457c2d71461045957600080fd5b8063715018a6146103d95780637cb569de146103e15780637ecebe00146103f457806384144dcf1461040757600080fd5b80633644e515116101a8578063587cde1e11610177578063587cde1e1461031e5780635c19a95c146103625780636c8848c2146103755780636fcfff451461038857806370a08231146103b057600080fd5b80633644e515146102dd57806339509351146102e55780633a46b1a8146102f8578063426233601461030b57600080fd5b806323b62302116101e457806323b623021461027e57806323b872dd146102a85780632e17de78146102bb578063313ce567146102ce57600080fd5b806302fb4d851461021657806306fdde031461022b578063095ea7b31461024957806318160ddd1461026c575b600080fd5b610229610224366004612554565b610541565b005b610233610573565b604051610240919061257e565b60405180910390f35b61025c610257366004612554565b610605565b6040519015158152602001610240565b6035545b604051908152602001610240565b61027061028c3660046125cc565b6001600160a01b03166000908152610130602052604090205490565b61025c6102b63660046125e7565b61061f565b6102296102c9366004612623565b610643565b60405160128152602001610240565b610270610659565b61025c6102f3366004612554565b610668565b610270610306366004612554565b61068a565b6102706103193660046125cc565b610709565b61034a61032c3660046125cc565b6001600160a01b03908116600090815260cc60205260409020541690565b6040516001600160a01b039091168152602001610240565b6102296103703660046125cc565b610728565b61022961038336600461263c565b610732565b61039b6103963660046125cc565b610755565b60405163ffffffff9091168152602001610240565b6102706103be3660046125cc565b6001600160a01b031660009081526033602052604090205490565b610229610777565b6102296103ef366004612554565b61078b565b6102706104023660046125cc565b61086c565b61022961041536600461263c565b61088a565b60fe546001600160a01b031661034a565b610270610439366004612623565b6108b7565b610233610913565b6102706104543660046125cc565b610922565b61025c610467366004612554565b61094f565b61022961047a366004612623565b6109ca565b61025c61048d366004612554565b6109d9565b6102296104a03660046126c8565b6109e7565b6102296104b3366004612720565b610b1d565b6102706104c636600461278a565b610c81565b6102296104d9366004612623565b610cac565b6104f16104ec3660046127bd565b610d6a565b60408051825163ffffffff1681526020928301516001600160e01b03169281019290925201610240565b6102296105293660046125cc565b610dee565b61022961053c366004612623565b610e64565b610549610ff3565b610553828261078b565b61056f3061056960fe546001600160a01b031690565b8361104d565b5050565b606060368054610582906127fd565b80601f01602080910402602001604051908101604052809291908181526020018280546105ae906127fd565b80156105fb5780601f106105d0576101008083540402835291602001916105fb565b820191906000526020600020905b8154815290600101906020018083116105de57829003601f168201915b5050505050905090565b600033610613818585611221565b60019150505b92915050565b60003361062d858285611345565b61063885858561104d565b506001949350505050565b61064c81610cac565b6106563033610569565b50565b60006106636113b9565b905090565b60003361061381858561067b8383610c81565b6106859190612847565b611221565b60004382106106e05760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b038316600090815260cd602052604090206107029083611434565b9392505050565b6001600160a01b03811660009081526101306020526040812054610619565b61065633826114f1565b61073a610ff3565b61074583838361156b565b61074f30826109d9565b50505050565b6001600160a01b038116600090815260cd602052604081205461061990611764565b61077f610ff3565b61078960006117cd565b565b610793610ff3565b6001600160a01b038216600090815261013060205260409020548111156107fc5760405162461bcd60e51b815260206004820152601760248201527f5f736c6173683a20657863656564732062616c616e636500000000000000000060448201526064016106d7565b6001600160a01b038216600090815261013060205260408120805483929061082590849061285a565b90915550506040518181526001600160a01b038316907f4ed05e9673c26d2ed44f7ef6a7f2942df0ee3b5e1e17db4b99f9dcd261a339cd9060200160405180910390a25050565b6001600160a01b038116600090815260996020526040812054610619565b610892610ff3565b600061089f84848461181f565b905061074f3061056960fe546001600160a01b031690565b60004382106109085760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016106d7565b61061960ce83611434565b606060378054610582906127fd565b6001600160a01b0381166000908152610130602052604081205461094583611a68565b6106199190612847565b6000338161095d8286610c81565b9050838110156109bd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106d7565b6106388286868403611221565b6109d381611aef565b61056f30825b60003361061381858561104d565b83421115610a375760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016106d7565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610ab190610aa99060a00160405160208183030381529060405280519060200120611b8d565b858585611bdb565b9050610abc81611c03565b8614610b0a5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016106d7565b610b1481886114f1565b50505050505050565b83421115610b6d5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016106d7565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b9c8c611c03565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610bf782611b8d565b90506000610c0782878787611bdb565b9050896001600160a01b0316816001600160a01b031614610c6a5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016106d7565b610c758a8a8a611221565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3360009081526101306020526040902054811115610d0c5760405162461bcd60e51b815260206004820152601960248201527f5f756e7374616b653a20657863656564732062616c616e63650000000000000060448201526064016106d7565b336000908152610130602052604081208054839290610d2c90849061285a565b909155505060405181815233907f79d3df6837cc49ff0e09fd3258e6e45594e0703445bb06825e9d75156eaee8f0906020015b60405180910390a250565b60408051808201909152600080825260208201526001600160a01b038316600090815260cd60205260409020805463ffffffff8416908110610dae57610dae61286d565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610df6610ff3565b6001600160a01b038116610e5b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106d7565b610656816117cd565b600054610100900460ff1615808015610e845750600054600160ff909116105b80610e9e5750303b158015610e9e575060005460ff166001145b610f015760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106d7565b6000805460ff191660011790558015610f24576000805461ff0019166101001790555b610f2c611c2b565b610f746040518060400160405280600b81526020016a23b7b63232b72a37b5b2b760a91b8152506040518060400160405280600381526020016211d31160ea1b815250611c5a565b610fa06040518060400160405280600b81526020016a23b7b63232b72a37b5b2b760a91b815250611c8b565b610faa3383611cd5565b801561056f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60fe546001600160a01b031633146107895760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d7565b6001600160a01b0383166110b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106d7565b6001600160a01b0382166111135760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106d7565b6001600160a01b0383166000908152603360205260409020548181101561118b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106d7565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906111c2908490612847565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161120e91815260200190565b60405180910390a361074f848484611ce4565b6001600160a01b0383166112835760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106d7565b6001600160a01b0382166112e45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106d7565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006113518484610c81565b9050600019811461074f57818110156113ac5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106d7565b61074f8484848403611221565b60006106637f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6113e860655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b8154600090815b8181101561149857600061144f8284611cef565b9050848682815481106114645761146461286d565b60009182526020909120015463ffffffff16111561148457809250611492565b61148f816001612847565b91505b5061143b565b81156114dc57846114aa60018461285a565b815481106114ba576114ba61286d565b60009182526020909120015464010000000090046001600160e01b03166114df565b60005b6001600160e01b031695945050505050565b6001600160a01b03828116600081815260cc6020818152604080842080546033845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461074f828483611d0a565b611573610ff3565b816115b45760405162461bcd60e51b815260206004820152601160248201527062756c6b5374616b65203020757365727360781b60448201526064016106d7565b600081116116045760405162461bcd60e51b815260206004820152601760248201527f62756c6b5374616b65203020746f74616c416d6f756e7400000000000000000060448201526064016106d7565b6000805b8381101561171c5760008585838181106116245761162461286d565b9050604002016020013590508061013060008888868181106116485761164861286d565b61165e92602060409092020190810191506125cc565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461168d9190612847565b9091555061169d90508184612847565b92508585838181106116b1576116b161286d565b6116c792602060409092020190810191506125cc565b6001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161170191815260200190565b60405180910390a2508061171481612883565b915050611608565b5081811461074f5760405162461bcd60e51b81526020600482015260156024820152741a5b98dbdc9c9958dd081d1bdd185b105b5bdd5b9d605a1b60448201526064016106d7565b600063ffffffff8211156117c95760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016106d7565b5090565b60fe80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611829610ff3565b8261186b5760405162461bcd60e51b81526020600482015260126024820152715f62756c6b536c617368203020757365727360701b60448201526064016106d7565b600082116118bb5760405162461bcd60e51b815260206004820152601860248201527f5f62756c6b536c617368203020746f74616c416d6f756e74000000000000000060448201526064016106d7565b60008060005b85811015611a175760008787838181106118dd576118dd61286d565b905060400201602001359050600061013060008a8a868181106119025761190261286d565b61191892602060409092020190810191506125cc565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050600081831161194a578261194c565b815b905061197f8a8a868181106119635761196361286d565b61197992602060409092020190810191506125cc565b8261078b565b6119898387612847565b95506119958186612847565b94508989858181106119a9576119a961286d565b6119bf92602060409092020190810191506125cc565b6001600160a01b03167f4ed05e9673c26d2ed44f7ef6a7f2942df0ee3b5e1e17db4b99f9dcd261a339cd826040516119f991815260200190565b60405180910390a25050508080611a0f90612883565b9150506118c1565b50838214611a5f5760405162461bcd60e51b81526020600482015260156024820152741a5b98dbdc9c9958dd081d1bdd185b105b5bdd5b9d605a1b60448201526064016106d7565b95945050505050565b6001600160a01b038116600090815260cd60205260408120548015611adc576001600160a01b038316600090815260cd60205260409020611aaa60018361285a565b81548110611aba57611aba61286d565b60009182526020909120015464010000000090046001600160e01b0316611adf565b60005b6001600160e01b03169392505050565b60008111611b365760405162461bcd60e51b815260206004820152601460248201527343616e6e6f74207374616b65206e6f7468696e6760601b60448201526064016106d7565b336000908152610130602052604081208054839290611b56908490612847565b909155505060405181815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610d5f565b6000610619611b9a6113b9565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611bec87878787611e47565b91509150611bf981611f34565b5095945050505050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b600054610100900460ff16611c525760405162461bcd60e51b81526004016106d79061289c565b6107896120ea565b600054610100900460ff16611c815760405162461bcd60e51b81526004016106d79061289c565b61056f828261211a565b600054610100900460ff16611cb25760405162461bcd60e51b81526004016106d79061289c565b61065681604051806040016040528060018152602001603160f81b81525061215a565b61056f828261219b565b505050565b611cdf838383612225565b6000611cfe60028484186128e7565b61070290848416612847565b816001600160a01b0316836001600160a01b031614158015611d2c5750600081115b15611cdf576001600160a01b03831615611dba576001600160a01b038316600090815260cd602052604081208190611d679061225785612263565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611daf929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611cdf576001600160a01b038216600090815260cd602052604081208190611df0906123dc85612263565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611e38929190918252602082015260400190565b60405180910390a25050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611e7e5750600090506003611f2b565b8460ff16601b14158015611e9657508460ff16601c14155b15611ea75750600090506004611f2b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611efb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611f2457600060019250925050611f2b565b9150600090505b94509492505050565b6000816004811115611f4857611f48612909565b03611f505750565b6001816004811115611f6457611f64612909565b03611fb15760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106d7565b6002816004811115611fc557611fc5612909565b036120125760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106d7565b600381600481111561202657612026612909565b0361207e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106d7565b600481600481111561209257612092612909565b036106565760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106d7565b600054610100900460ff166121115760405162461bcd60e51b81526004016106d79061289c565b610789336117cd565b600054610100900460ff166121415760405162461bcd60e51b81526004016106d79061289c565b603661214d8382612983565b506037611cdf8282612983565b600054610100900460ff166121815760405162461bcd60e51b81526004016106d79061289c565b815160209283012081519190920120606591909155606655565b6121a582826123e8565b6035546001600160e01b0310156122175760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016106d7565b61074f60ce6123dc83612263565b6001600160a01b03838116600090815260cc6020526040808220548584168352912054611cdf92918216911683611d0a565b6000610702828461285a565b8254600090819080156122ae578561227c60018361285a565b8154811061228c5761228c61286d565b60009182526020909120015464010000000090046001600160e01b03166122b1565b60005b6001600160e01b031692506122ca83858763ffffffff16565b9150600081118015612308575043866122e460018461285a565b815481106122f4576122f461286d565b60009182526020909120015463ffffffff16145b1561236857612316826124cf565b8661232260018461285a565b815481106123325761233261286d565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506123d3565b85604051806040016040528061237d43611764565b63ffffffff168152602001612391856124cf565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b60006107028284612847565b6001600160a01b03821661243e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106d7565b80603560008282546124509190612847565b90915550506001600160a01b0382166000908152603360205260408120805483929061247d908490612847565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a361056f60008383611ce4565b60006001600160e01b038211156117c95760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016106d7565b80356001600160a01b038116811461254f57600080fd5b919050565b6000806040838503121561256757600080fd5b61257083612538565b946020939093013593505050565b600060208083528351808285015260005b818110156125ab5785810183015185820160400152820161258f565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156125de57600080fd5b61070282612538565b6000806000606084860312156125fc57600080fd5b61260584612538565b925061261360208501612538565b9150604084013590509250925092565b60006020828403121561263557600080fd5b5035919050565b60008060006040848603121561265157600080fd5b833567ffffffffffffffff8082111561266957600080fd5b818601915086601f83011261267d57600080fd5b81358181111561268c57600080fd5b8760208260061b85010111156126a157600080fd5b6020928301989097509590910135949350505050565b803560ff8116811461254f57600080fd5b60008060008060008060c087890312156126e157600080fd5b6126ea87612538565b95506020870135945060408701359350612706606088016126b7565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561273b57600080fd5b61274488612538565b965061275260208901612538565b9550604088013594506060880135935061276e608089016126b7565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561279d57600080fd5b6127a683612538565b91506127b460208401612538565b90509250929050565b600080604083850312156127d057600080fd5b6127d983612538565b9150602083013563ffffffff811681146127f257600080fd5b809150509250929050565b600181811c9082168061281157607f821691505b602082108103611c2557634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561061957610619612831565b8181038181111561061957610619612831565b634e487b7160e01b600052603260045260246000fd5b60006001820161289557612895612831565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008261290457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f821115611cdf57600081815260208120601f850160051c8101602086101561295c5750805b601f850160051c820191505b8181101561297b57828155600101612968565b505050505050565b815167ffffffffffffffff81111561299d5761299d61291f565b6129b1816129ab84546127fd565b84612935565b602080601f8311600181146129e657600084156129ce5750858301515b600019600386901b1c1916600185901b17855561297b565b600085815260208120601f198616915b82811015612a15578886015182559484019460019091019084016129f6565b5085821015612a335787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220cfc17cc526fee7249ae6cb48777b0417d1be7aa7a88ff9f6cf8e7df03b449eb864736f6c63430008100033";

type GoldenTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldenTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldenToken__factory extends ContractFactory {
  constructor(...args: GoldenTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenToken> {
    return super.deploy(overrides || {}) as Promise<GoldenToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GoldenToken {
    return super.attach(address) as GoldenToken;
  }
  override connect(signer: Signer): GoldenToken__factory {
    return super.connect(signer) as GoldenToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenTokenInterface {
    return new utils.Interface(_abi) as GoldenTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenToken {
    return new Contract(address, _abi, signerOrProvider) as GoldenToken;
  }
}
