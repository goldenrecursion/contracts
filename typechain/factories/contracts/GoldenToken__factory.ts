/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldenToken,
  GoldenTokenInterface,
} from "../../contracts/GoldenToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Slashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnStaked",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "_stakeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct StakeableUpgradeable.User[]",
        name: "users",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "bulkSlash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct StakeableUpgradeable.User[]",
        name: "users",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "bulkStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20VotesUpgradeable.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "stakeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612b25806100206000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c8063715018a611610125578063a694fc3a116100ad578063dd62ed3e1161007c578063dd62ed3e146104b8578063eb36854e146104cb578063f1127ed8146104de578063f2fde38b1461051b578063fe4b84df1461052e57600080fd5b8063a694fc3a1461046c578063a9059cbb1461047f578063c3cda52014610492578063d505accf146104a557600080fd5b80638da5cb5b116100f45780638da5cb5b1461041a5780638e539e8c1461042b57806395d89b411461043e5780639ab24eb014610446578063a457c2d71461045957600080fd5b8063715018a6146103d95780637cb569de146103e15780637ecebe00146103f457806384144dcf1461040757600080fd5b80633644e515116101a8578063587cde1e11610177578063587cde1e1461031e5780635c19a95c146103625780636c8848c2146103755780636fcfff451461038857806370a08231146103b057600080fd5b80633644e515146102dd57806339509351146102e55780633a46b1a8146102f8578063426233601461030b57600080fd5b806323b62302116101e457806323b623021461027e57806323b872dd146102a85780632e17de78146102bb578063313ce567146102ce57600080fd5b806302fb4d851461021657806306fdde031461022b578063095ea7b31461024957806318160ddd1461026c575b600080fd5b610229610224366004612600565b610541565b005b610233610573565b604051610240919061262a565b60405180910390f35b61025c610257366004612600565b610605565b6040519015158152602001610240565b6035545b604051908152602001610240565b61027061028c366004612678565b6001600160a01b03166000908152610130602052604090205490565b61025c6102b6366004612693565b61061f565b6102296102c93660046126cf565b610643565b60405160128152602001610240565b610270610659565b61025c6102f3366004612600565b610668565b610270610306366004612600565b61068a565b610270610319366004612678565b610709565b61034a61032c366004612678565b6001600160a01b03908116600090815260cc60205260409020541690565b6040516001600160a01b039091168152602001610240565b610229610370366004612678565b610728565b6102296103833660046126e8565b610732565b61039b610396366004612678565b610755565b60405163ffffffff9091168152602001610240565b6102706103be366004612678565b6001600160a01b031660009081526033602052604090205490565b610229610777565b6102296103ef366004612600565b61078b565b610270610402366004612678565b61086c565b6102296104153660046126e8565b61088a565b60fe546001600160a01b031661034a565b6102706104393660046126cf565b6108b7565b610233610913565b610270610454366004612678565b610922565b61025c610467366004612600565b61094f565b61022961047a3660046126cf565b6109ca565b61025c61048d366004612600565b6109d9565b6102296104a0366004612774565b6109e7565b6102296104b33660046127cc565b610b1d565b6102706104c6366004612836565b610c81565b6102296104d93660046126cf565b610cac565b6104f16104ec366004612869565b610d6a565b60408051825163ffffffff1681526020928301516001600160e01b03169281019290925201610240565b610229610529366004612678565b610dee565b61022961053c3660046126cf565b610e64565b610549610ff3565b610553828261078b565b61056f3061056960fe546001600160a01b031690565b8361104d565b5050565b606060368054610582906128a9565b80601f01602080910402602001604051908101604052809291908181526020018280546105ae906128a9565b80156105fb5780601f106105d0576101008083540402835291602001916105fb565b820191906000526020600020905b8154815290600101906020018083116105de57829003601f168201915b5050505050905090565b60003361061381858561122c565b60019150505b92915050565b60003361062d858285611350565b61063885858561104d565b506001949350505050565b61064c81610cac565b6106563033610569565b50565b60006106636113c4565b905090565b60003361061381858561067b8383610c81565b61068591906128f3565b61122c565b60004382106106e05760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b038316600090815260cd60205260409020610702908361143f565b9392505050565b6001600160a01b03811660009081526101306020526040812054610619565b61065633826114fc565b61073a610ff3565b610745838383611576565b61074f30826109d9565b50505050565b6001600160a01b038116600090815260cd60205260408120546106199061176f565b61077f610ff3565b61078960006117d8565b565b610793610ff3565b6001600160a01b038216600090815261013060205260409020548111156107fc5760405162461bcd60e51b815260206004820152601760248201527f5f736c6173683a20657863656564732062616c616e636500000000000000000060448201526064016106d7565b6001600160a01b0382166000908152610130602052604081208054839290610825908490612906565b90915550506040518181526001600160a01b038316907f4ed05e9673c26d2ed44f7ef6a7f2942df0ee3b5e1e17db4b99f9dcd261a339cd9060200160405180910390a25050565b6001600160a01b038116600090815260996020526040812054610619565b610892610ff3565b600061089f84848461182a565b905061074f3061056960fe546001600160a01b031690565b60004382106109085760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016106d7565b61061960ce8361143f565b606060378054610582906128a9565b6001600160a01b0381166000908152610130602052604081205461094583611a73565b61061991906128f3565b6000338161095d8286610c81565b9050838110156109bd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106d7565b610638828686840361122c565b6109d381611afa565b61056f30825b60003361061381858561104d565b83421115610a375760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016106d7565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610ab190610aa99060a00160405160208183030381529060405280519060200120611b98565b858585611be6565b9050610abc81611c0e565b8614610b0a5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016106d7565b610b1481886114fc565b50505050505050565b83421115610b6d5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016106d7565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b9c8c611c0e565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610bf782611b98565b90506000610c0782878787611be6565b9050896001600160a01b0316816001600160a01b031614610c6a5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016106d7565b610c758a8a8a61122c565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3360009081526101306020526040902054811115610d0c5760405162461bcd60e51b815260206004820152601960248201527f5f756e7374616b653a20657863656564732062616c616e63650000000000000060448201526064016106d7565b336000908152610130602052604081208054839290610d2c908490612906565b909155505060405181815233907f79d3df6837cc49ff0e09fd3258e6e45594e0703445bb06825e9d75156eaee8f0906020015b60405180910390a250565b60408051808201909152600080825260208201526001600160a01b038316600090815260cd60205260409020805463ffffffff8416908110610dae57610dae612919565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610df6610ff3565b6001600160a01b038116610e5b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106d7565b610656816117d8565b600054610100900460ff1615808015610e845750600054600160ff909116105b80610e9e5750303b158015610e9e575060005460ff166001145b610f015760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106d7565b6000805460ff191660011790558015610f24576000805461ff0019166101001790555b610f2c611c36565b610f746040518060400160405280600b81526020016a23b7b63232b72a37b5b2b760a91b8152506040518060400160405280600381526020016211d31160ea1b815250611c65565b610fa06040518060400160405280600b81526020016a23b7b63232b72a37b5b2b760a91b815250611c96565b610faa3383611ce0565b801561056f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60fe546001600160a01b031633146107895760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d7565b6001600160a01b0383166110b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106d7565b6001600160a01b0382166111135760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106d7565b61111e838383611cea565b6001600160a01b038316600090815260336020526040902054818110156111965760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106d7565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906111cd9084906128f3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161121991815260200190565b60405180910390a361074f848484611d84565b6001600160a01b03831661128e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106d7565b6001600160a01b0382166112ef5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106d7565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061135c8484610c81565b9050600019811461074f57818110156113b75760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106d7565b61074f848484840361122c565b60006106637f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6113f360655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b8154600090815b818110156114a357600061145a8284611d8f565b90508486828154811061146f5761146f612919565b60009182526020909120015463ffffffff16111561148f5780925061149d565b61149a8160016128f3565b91505b50611446565b81156114e757846114b5600184612906565b815481106114c5576114c5612919565b60009182526020909120015464010000000090046001600160e01b03166114ea565b60005b6001600160e01b031695945050505050565b6001600160a01b03828116600081815260cc6020818152604080842080546033845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461074f828483611daa565b61157e610ff3565b816115bf5760405162461bcd60e51b815260206004820152601160248201527062756c6b5374616b65203020757365727360781b60448201526064016106d7565b6000811161160f5760405162461bcd60e51b815260206004820152601760248201527f62756c6b5374616b65203020746f74616c416d6f756e7400000000000000000060448201526064016106d7565b6000805b8381101561172757600085858381811061162f5761162f612919565b90506040020160200135905080610130600088888681811061165357611653612919565b6116699260206040909202019081019150612678565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461169891906128f3565b909155506116a8905081846128f3565b92508585838181106116bc576116bc612919565b6116d29260206040909202019081019150612678565b6001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161170c91815260200190565b60405180910390a2508061171f8161292f565b915050611613565b5081811461074f5760405162461bcd60e51b81526020600482015260156024820152741a5b98dbdc9c9958dd081d1bdd185b105b5bdd5b9d605a1b60448201526064016106d7565b600063ffffffff8211156117d45760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016106d7565b5090565b60fe80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611834610ff3565b826118765760405162461bcd60e51b81526020600482015260126024820152715f62756c6b536c617368203020757365727360701b60448201526064016106d7565b600082116118c65760405162461bcd60e51b815260206004820152601860248201527f5f62756c6b536c617368203020746f74616c416d6f756e74000000000000000060448201526064016106d7565b60008060005b85811015611a225760008787838181106118e8576118e8612919565b905060400201602001359050600061013060008a8a8681811061190d5761190d612919565b6119239260206040909202019081019150612678565b6001600160a01b03166001600160a01b0316815260200190815260200160002054905060008183116119555782611957565b815b905061198a8a8a8681811061196e5761196e612919565b6119849260206040909202019081019150612678565b8261078b565b61199483876128f3565b95506119a081866128f3565b94508989858181106119b4576119b4612919565b6119ca9260206040909202019081019150612678565b6001600160a01b03167f4ed05e9673c26d2ed44f7ef6a7f2942df0ee3b5e1e17db4b99f9dcd261a339cd82604051611a0491815260200190565b60405180910390a25050508080611a1a9061292f565b9150506118cc565b50838214611a6a5760405162461bcd60e51b81526020600482015260156024820152741a5b98dbdc9c9958dd081d1bdd185b105b5bdd5b9d605a1b60448201526064016106d7565b95945050505050565b6001600160a01b038116600090815260cd60205260408120548015611ae7576001600160a01b038316600090815260cd60205260409020611ab5600183612906565b81548110611ac557611ac5612919565b60009182526020909120015464010000000090046001600160e01b0316611aea565b60005b6001600160e01b03169392505050565b60008111611b415760405162461bcd60e51b815260206004820152601460248201527343616e6e6f74207374616b65206e6f7468696e6760601b60448201526064016106d7565b336000908152610130602052604081208054839290611b619084906128f3565b909155505060405181815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610d5f565b6000610619611ba56113c4565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611bf787878787611ee7565b91509150611c0481611fd4565b5095945050505050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b600054610100900460ff16611c5d5760405162461bcd60e51b81526004016106d790612948565b61078961218a565b600054610100900460ff16611c8c5760405162461bcd60e51b81526004016106d790612948565b61056f82826121ba565b600054610100900460ff16611cbd5760405162461bcd60e51b81526004016106d790612948565b61065681604051806040016040528060018152602001603160f81b8152506121fa565b61056f828261223b565b6001600160a01b0383161580611d0d575060fe546001600160a01b038481169116145b80611d2057506001600160a01b03831630145b80611d3357506001600160a01b03821630145b611d7f5760405162461bcd60e51b815260206004820152601e60248201527f45524332303a204e6f7420616c6c6f77656420746f207472616e73666572000060448201526064016106d7565b505050565b611d7f8383836122c5565b6000611d9e6002848418612993565b610702908484166128f3565b816001600160a01b0316836001600160a01b031614158015611dcc5750600081115b15611d7f576001600160a01b03831615611e5a576001600160a01b038316600090815260cd602052604081208190611e07906122f785612303565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611e4f929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611d7f576001600160a01b038216600090815260cd602052604081208190611e909061247c85612303565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611ed8929190918252602082015260400190565b60405180910390a25050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611f1e5750600090506003611fcb565b8460ff16601b14158015611f3657508460ff16601c14155b15611f475750600090506004611fcb565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611f9b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611fc457600060019250925050611fcb565b9150600090505b94509492505050565b6000816004811115611fe857611fe86129b5565b03611ff05750565b6001816004811115612004576120046129b5565b036120515760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106d7565b6002816004811115612065576120656129b5565b036120b25760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106d7565b60038160048111156120c6576120c66129b5565b0361211e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106d7565b6004816004811115612132576121326129b5565b036106565760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106d7565b600054610100900460ff166121b15760405162461bcd60e51b81526004016106d790612948565b610789336117d8565b600054610100900460ff166121e15760405162461bcd60e51b81526004016106d790612948565b60366121ed8382612a2f565b506037611d7f8282612a2f565b600054610100900460ff166122215760405162461bcd60e51b81526004016106d790612948565b815160209283012081519190920120606591909155606655565b6122458282612488565b6035546001600160e01b0310156122b75760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016106d7565b61074f60ce61247c83612303565b6001600160a01b03838116600090815260cc6020526040808220548584168352912054611d7f92918216911683611daa565b60006107028284612906565b82546000908190801561234e578561231c600183612906565b8154811061232c5761232c612919565b60009182526020909120015464010000000090046001600160e01b0316612351565b60005b6001600160e01b0316925061236a83858763ffffffff16565b91506000811180156123a857504386612384600184612906565b8154811061239457612394612919565b60009182526020909120015463ffffffff16145b15612408576123b68261257b565b866123c2600184612906565b815481106123d2576123d2612919565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550612473565b85604051806040016040528061241d4361176f565b63ffffffff1681526020016124318561257b565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b600061070282846128f3565b6001600160a01b0382166124de5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106d7565b6124ea60008383611cea565b80603560008282546124fc91906128f3565b90915550506001600160a01b038216600090815260336020526040812080548392906125299084906128f3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a361056f60008383611d84565b60006001600160e01b038211156117d45760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016106d7565b80356001600160a01b03811681146125fb57600080fd5b919050565b6000806040838503121561261357600080fd5b61261c836125e4565b946020939093013593505050565b600060208083528351808285015260005b818110156126575785810183015185820160400152820161263b565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561268a57600080fd5b610702826125e4565b6000806000606084860312156126a857600080fd5b6126b1846125e4565b92506126bf602085016125e4565b9150604084013590509250925092565b6000602082840312156126e157600080fd5b5035919050565b6000806000604084860312156126fd57600080fd5b833567ffffffffffffffff8082111561271557600080fd5b818601915086601f83011261272957600080fd5b81358181111561273857600080fd5b8760208260061b850101111561274d57600080fd5b6020928301989097509590910135949350505050565b803560ff811681146125fb57600080fd5b60008060008060008060c0878903121561278d57600080fd5b612796876125e4565b955060208701359450604087013593506127b260608801612763565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a0312156127e757600080fd5b6127f0886125e4565b96506127fe602089016125e4565b9550604088013594506060880135935061281a60808901612763565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561284957600080fd5b612852836125e4565b9150612860602084016125e4565b90509250929050565b6000806040838503121561287c57600080fd5b612885836125e4565b9150602083013563ffffffff8116811461289e57600080fd5b809150509250929050565b600181811c908216806128bd57607f821691505b602082108103611c3057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610619576106196128dd565b81810381811115610619576106196128dd565b634e487b7160e01b600052603260045260246000fd5b600060018201612941576129416128dd565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000826129b057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f821115611d7f57600081815260208120601f850160051c81016020861015612a085750805b601f850160051c820191505b81811015612a2757828155600101612a14565b505050505050565b815167ffffffffffffffff811115612a4957612a496129cb565b612a5d81612a5784546128a9565b846129e1565b602080601f831160018114612a925760008415612a7a5750858301515b600019600386901b1c1916600185901b178555612a27565b600085815260208120601f198616915b82811015612ac157888601518255948401946001909101908401612aa2565b5085821015612adf5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212204725be90e92630144e300a9621f84fa4ef1548d1d54f4af3edff15ff96dace3564736f6c63430008100033";

type GoldenTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldenTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldenToken__factory extends ContractFactory {
  constructor(...args: GoldenTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenToken> {
    return super.deploy(overrides || {}) as Promise<GoldenToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GoldenToken {
    return super.attach(address) as GoldenToken;
  }
  override connect(signer: Signer): GoldenToken__factory {
    return super.connect(signer) as GoldenToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenTokenInterface {
    return new utils.Interface(_abi) as GoldenTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenToken {
    return new Contract(address, _abi, signerOrProvider) as GoldenToken;
  }
}
