/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GoldenTokenV2,
  GoldenTokenV2Interface,
} from "../../contracts/GoldenTokenV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Slashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnStaked",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "_stakeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct StakeableUpgradeableV2.User[]",
        name: "users",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "bulkSlash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct StakeableUpgradeableV2.User[]",
        name: "users",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "bulkStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20VotesUpgradeable.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "stakeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612bb5806100206000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c8063715018a611610125578063a694fc3a116100ad578063dd62ed3e1161007c578063dd62ed3e146104b8578063eb36854e146104cb578063f1127ed8146104de578063f2fde38b1461051b578063fe4b84df1461052e57600080fd5b8063a694fc3a1461046c578063a9059cbb1461047f578063c3cda52014610492578063d505accf146104a557600080fd5b80638da5cb5b116100f45780638da5cb5b1461041a5780638e539e8c1461042b57806395d89b411461043e5780639ab24eb014610446578063a457c2d71461045957600080fd5b8063715018a6146103d95780637cb569de146103e15780637ecebe00146103f457806384144dcf1461040757600080fd5b80633644e515116101a8578063587cde1e11610177578063587cde1e1461031e5780635c19a95c146103625780636c8848c2146103755780636fcfff451461038857806370a08231146103b057600080fd5b80633644e515146102dd57806339509351146102e55780633a46b1a8146102f8578063426233601461030b57600080fd5b806323b62302116101e457806323b623021461027e57806323b872dd146102a85780632e17de78146102bb578063313ce567146102ce57600080fd5b806302fb4d851461021657806306fdde031461022b578063095ea7b31461024957806318160ddd1461026c575b600080fd5b6102296102243660046128e0565b610541565b005b610233610573565b6040516102409190612a2c565b60405180910390f35b61025c6102573660046128e0565b610605565b6040519015158152602001610240565b6035545b604051908152602001610240565b61027061028c3660046127f0565b6001600160a01b03166000908152610130602052604090205490565b61025c6102b636600461283c565b61061d565b6102296102c9366004612a14565b610641565b60405160128152602001610240565b610270610657565b61025c6102f33660046128e0565b610666565b6102706103063660046128e0565b610688565b6102706103193660046127f0565b610707565b61034a61032c3660046127f0565b6001600160a01b03908116600090815260cc60205260409020541690565b6040516001600160a01b039091168152602001610240565b6102296103703660046127f0565b610728565b61022961038336600461299e565b610732565b61039b6103963660046127f0565b610755565b60405163ffffffff9091168152602001610240565b6102706103be3660046127f0565b6001600160a01b031660009081526033602052604090205490565b610229610777565b6102296103ef3660046128e0565b61078b565b6102706104023660046127f0565b61086c565b61022961041536600461299e565b61088a565b60fe546001600160a01b031661034a565b610270610439366004612a14565b6108b7565b610233610913565b6102706104543660046127f0565b610922565b61025c6104673660046128e0565b61094f565b61022961047a366004612a14565b6109ca565b61025c61048d3660046128e0565b6109d9565b6102296104a0366004612909565b6109e7565b6102296104b3366004612877565b610b1d565b6102706104c636600461280a565b610c81565b6102296104d9366004612a14565b610cac565b6104f16104ec366004612960565b610d6a565b60408051825163ffffffff1681526020928301516001600160e01b03169281019290925201610240565b6102296105293660046127f0565b610dfc565b61022961053c366004612a14565b610e72565b610549611001565b610553828261078b565b61056f3061056960fe546001600160a01b031690565b8361105b565b5050565b60606036805461058290612b19565b80601f01602080910402602001604051908101604052809291908181526020018280546105ae90612b19565b80156105fb5780601f106105d0576101008083540402835291602001916105fb565b820191906000526020600020905b8154815290600101906020018083116105de57829003601f168201915b5050505050905090565b60003361061381858561123a565b5060019392505050565b60003361062b85828561135e565b61063685858561105b565b506001949350505050565b61064a81610cac565b6106543033610569565b50565b60006106616113d2565b905090565b6000336106138185856106798383610c81565b6106839190612aca565b61123a565b60004382106106de5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b038316600090815260cd60205260409020610700908361144d565b9392505050565b6001600160a01b038116600090815261013060205260408120545b92915050565b6106543382611526565b61073a611001565b6107458383836115a0565b61074f30826109d9565b50505050565b6001600160a01b038116600090815260cd6020526040812054610722906117c3565b61077f611001565b610789600061182c565b565b610793611001565b6001600160a01b038216600090815261013060205260409020548111156107fc5760405162461bcd60e51b815260206004820152601760248201527f5f736c6173683a20657863656564732062616c616e636500000000000000000060448201526064016106d5565b6001600160a01b0382166000908152610130602052604081208054839290610825908490612b02565b90915550506040518181526001600160a01b038316907f4ed05e9673c26d2ed44f7ef6a7f2942df0ee3b5e1e17db4b99f9dcd261a339cd9060200160405180910390a25050565b6001600160a01b038116600090815260996020526040812054610722565b610892611001565b600061089f84848461187e565b905061074f3061056960fe546001600160a01b031690565b60004382106109085760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016106d5565b61072260ce8361144d565b60606037805461058290612b19565b6001600160a01b0381166000908152610130602052604081205461094583611b31565b6107229190612aca565b6000338161095d8286610c81565b9050838110156109bd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106d5565b610636828686840361123a565b6109d381611bc6565b61056f30825b60003361061381858561105b565b83421115610a375760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016106d5565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610ab190610aa99060a00160405160208183030381529060405280519060200120611c64565b858585611cb2565b9050610abc81611cda565b8614610b0a5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016106d5565b610b148188611526565b50505050505050565b83421115610b6d5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016106d5565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b9c8c611cda565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610bf782611c64565b90506000610c0782878787611cb2565b9050896001600160a01b0316816001600160a01b031614610c6a5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016106d5565b610c758a8a8a61123a565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3360009081526101306020526040902054811115610d0c5760405162461bcd60e51b815260206004820152601960248201527f5f756e7374616b653a20657863656564732062616c616e63650000000000000060448201526064016106d5565b336000908152610130602052604081208054839290610d2c908490612b02565b909155505060405181815233907f79d3df6837cc49ff0e09fd3258e6e45594e0703445bb06825e9d75156eaee8f0906020015b60405180910390a250565b60408051808201909152600080825260208201526001600160a01b038316600090815260cd60205260409020805463ffffffff8416908110610dbc57634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610e04611001565b6001600160a01b038116610e695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106d5565b6106548161182c565b600054610100900460ff1615808015610e925750600054600160ff909116105b80610eac5750303b158015610eac575060005460ff166001145b610f0f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106d5565b6000805460ff191660011790558015610f32576000805461ff0019166101001790555b610f3a611d02565b610f826040518060400160405280600b81526020016a23b7b63232b72a37b5b2b760a91b8152506040518060400160405280600381526020016211d31160ea1b815250611d31565b610fae6040518060400160405280600b81526020016a23b7b63232b72a37b5b2b760a91b815250611d62565b610fb83383611dac565b801561056f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60fe546001600160a01b031633146107895760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d5565b6001600160a01b0383166110bf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106d5565b6001600160a01b0382166111215760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106d5565b61112c838383611db6565b6001600160a01b038316600090815260336020526040902054818110156111a45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106d5565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906111db908490612aca565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161122791815260200190565b60405180910390a361074f848484611e50565b6001600160a01b03831661129c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106d5565b6001600160a01b0382166112fd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106d5565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061136a8484610c81565b9050600019811461074f57818110156113c55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106d5565b61074f848484840361123a565b60006106617f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61140160655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b8154600090815b818110156114bf5760006114688284611e5b565b90508486828154811061148b57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015463ffffffff1611156114ab578092506114b9565b6114b6816001612aca565b91505b50611454565b811561151157846114d1600184612b02565b815481106114ef57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015464010000000090046001600160e01b0316611514565b60005b6001600160e01b031695945050505050565b6001600160a01b03828116600081815260cc6020818152604080842080546033845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461074f828483611e76565b6115a8611001565b816115e95760405162461bcd60e51b815260206004820152601160248201527062756c6b5374616b65203020757365727360781b60448201526064016106d5565b600081116116395760405162461bcd60e51b815260206004820152601760248201527f62756c6b5374616b65203020746f74616c416d6f756e7400000000000000000060448201526064016106d5565b6000805b8381101561177b57600085858381811061166757634e487b7160e01b600052603260045260246000fd5b90506040020160200135905080610130600088888681811061169957634e487b7160e01b600052603260045260246000fd5b6116af92602060409092020190810191506127f0565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546116de9190612aca565b909155506116ee90508184612aca565b925085858381811061171057634e487b7160e01b600052603260045260246000fd5b61172692602060409092020190810191506127f0565b6001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161176091815260200190565b60405180910390a2508061177381612b4e565b91505061163d565b5081811461074f5760405162461bcd60e51b81526020600482015260156024820152741a5b98dbdc9c9958dd081d1bdd185b105b5bdd5b9d605a1b60448201526064016106d5565b600063ffffffff8211156118285760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016106d5565b5090565b60fe80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611888611001565b826118ca5760405162461bcd60e51b81526020600482015260126024820152715f62756c6b536c617368203020757365727360701b60448201526064016106d5565b6000821161191a5760405162461bcd60e51b815260206004820152601860248201527f5f62756c6b536c617368203020746f74616c416d6f756e74000000000000000060448201526064016106d5565b60008060005b85811015611ae057600087878381811061194a57634e487b7160e01b600052603260045260246000fd5b905060400201602001359050600061013060008a8a8681811061197d57634e487b7160e01b600052603260045260246000fd5b61199392602060409092020190810191506127f0565b6001600160a01b03166001600160a01b0316815260200190815260200160002054905060008183116119c557826119c7565b815b90508061013060008c8c888181106119ef57634e487b7160e01b600052603260045260246000fd5b611a0592602060409092020190810191506127f0565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611a349190612b02565b90915550611a4490508387612aca565b9550611a508186612aca565b9450898985818110611a7257634e487b7160e01b600052603260045260246000fd5b611a8892602060409092020190810191506127f0565b6001600160a01b03167f4ed05e9673c26d2ed44f7ef6a7f2942df0ee3b5e1e17db4b99f9dcd261a339cd82604051611ac291815260200190565b60405180910390a25050508080611ad890612b4e565b915050611920565b50838214611b285760405162461bcd60e51b81526020600482015260156024820152741a5b98dbdc9c9958dd081d1bdd185b105b5bdd5b9d605a1b60448201526064016106d5565b95945050505050565b6001600160a01b038116600090815260cd60205260408120548015611bb3576001600160a01b038316600090815260cd60205260409020611b73600183612b02565b81548110611b9157634e487b7160e01b600052603260045260246000fd5b60009182526020909120015464010000000090046001600160e01b0316611bb6565b60005b6001600160e01b03169392505050565b60008111611c0d5760405162461bcd60e51b815260206004820152601460248201527343616e6e6f74207374616b65206e6f7468696e6760601b60448201526064016106d5565b336000908152610130602052604081208054839290611c2d908490612aca565b909155505060405181815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610d5f565b6000610722611c716113d2565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611cc387878787611fb3565b91509150611cd0816120a0565b5095945050505050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b600054610100900460ff16611d295760405162461bcd60e51b81526004016106d590612a7f565b6107896122a1565b600054610100900460ff16611d585760405162461bcd60e51b81526004016106d590612a7f565b61056f82826122d1565b600054610100900460ff16611d895760405162461bcd60e51b81526004016106d590612a7f565b61065481604051806040016040528060018152602001603160f81b81525061231f565b61056f8282612360565b6001600160a01b0383161580611dd9575060fe546001600160a01b038481169116145b80611dec57506001600160a01b03831630145b80611dff57506001600160a01b03821630145b611e4b5760405162461bcd60e51b815260206004820152601e60248201527f45524332303a204e6f7420616c6c6f77656420746f207472616e73666572000060448201526064016106d5565b505050565b611e4b8383836123ea565b6000611e6a6002848418612ae2565b61070090848416612aca565b816001600160a01b0316836001600160a01b031614158015611e985750600081115b15611e4b576001600160a01b03831615611f26576001600160a01b038316600090815260cd602052604081208190611ed39061241c85612428565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611f1b929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611e4b576001600160a01b038216600090815260cd602052604081208190611f5c906125cb85612428565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611fa4929190918252602082015260400190565b60405180910390a25050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611fea5750600090506003612097565b8460ff16601b1415801561200257508460ff16601c14155b156120135750600090506004612097565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612067573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661209057600060019250925050612097565b9150600090505b94509492505050565b60008160048111156120c257634e487b7160e01b600052602160045260246000fd5b14156120cb5750565b60018160048111156120ed57634e487b7160e01b600052602160045260246000fd5b141561213b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106d5565b600281600481111561215d57634e487b7160e01b600052602160045260246000fd5b14156121ab5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106d5565b60038160048111156121cd57634e487b7160e01b600052602160045260246000fd5b14156122265760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106d5565b600481600481111561224857634e487b7160e01b600052602160045260246000fd5b14156106545760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106d5565b600054610100900460ff166122c85760405162461bcd60e51b81526004016106d590612a7f565b6107893361182c565b600054610100900460ff166122f85760405162461bcd60e51b81526004016106d590612a7f565b815161230b906036906020850190612733565b508051611e4b906037906020840190612733565b600054610100900460ff166123465760405162461bcd60e51b81526004016106d590612a7f565b815160209283012081519190920120606591909155606655565b61236a82826125d7565b6035546001600160e01b0310156123dc5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016106d5565b61074f60ce6125cb83612428565b6001600160a01b03838116600090815260cc6020526040808220548584168352912054611e4b92918216911683611e76565b60006107008284612b02565b8254600090819080156124815785612441600183612b02565b8154811061245f57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015464010000000090046001600160e01b0316612484565b60005b6001600160e01b0316925061249d83858763ffffffff16565b91506000811180156124e9575043866124b7600184612b02565b815481106124d557634e487b7160e01b600052603260045260246000fd5b60009182526020909120015463ffffffff16145b15612557576124f7826126ca565b86612503600184612b02565b8154811061252157634e487b7160e01b600052603260045260246000fd5b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506125c2565b85604051806040016040528061256c436117c3565b63ffffffff168152602001612580856126ca565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b60006107008284612aca565b6001600160a01b03821661262d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106d5565b61263960008383611db6565b806035600082825461264b9190612aca565b90915550506001600160a01b03821660009081526033602052604081208054839290612678908490612aca565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a361056f60008383611e50565b60006001600160e01b038211156118285760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016106d5565b82805461273f90612b19565b90600052602060002090601f01602090048101928261276157600085556127a7565b82601f1061277a57805160ff19168380011785556127a7565b828001600101855582156127a7579182015b828111156127a757825182559160200191906001019061278c565b506118289291505b8082111561182857600081556001016127af565b80356001600160a01b03811681146127da57600080fd5b919050565b803560ff811681146127da57600080fd5b600060208284031215612801578081fd5b610700826127c3565b6000806040838503121561281c578081fd5b612825836127c3565b9150612833602084016127c3565b90509250929050565b600080600060608486031215612850578081fd5b612859846127c3565b9250612867602085016127c3565b9150604084013590509250925092565b600080600080600080600060e0888a031215612891578283fd5b61289a886127c3565b96506128a8602089016127c3565b955060408801359450606088013593506128c4608089016127df565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156128f2578182fd5b6128fb836127c3565b946020939093013593505050565b60008060008060008060c08789031215612921578182fd5b61292a876127c3565b95506020870135945060408701359350612946606088016127df565b92506080870135915060a087013590509295509295509295565b60008060408385031215612972578182fd5b61297b836127c3565b9150602083013563ffffffff81168114612993578182fd5b809150509250929050565b6000806000604084860312156129b2578283fd5b833567ffffffffffffffff808211156129c9578485fd5b818601915086601f8301126129dc578485fd5b8135818111156129ea578586fd5b8760208260061b85010111156129fe578586fd5b6020928301989097509590910135949350505050565b600060208284031215612a25578081fd5b5035919050565b6000602080835283518082850152825b81811015612a5857858101830151858201604001528201612a3c565b81811115612a695783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115612add57612add612b69565b500190565b600082612afd57634e487b7160e01b81526012600452602481fd5b500490565b600082821015612b1457612b14612b69565b500390565b600181811c90821680612b2d57607f821691505b60208210811415611cfc57634e487b7160e01b600052602260045260246000fd5b6000600019821415612b6257612b62612b69565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220132bb6fb37b2f0676fbaaed0a968dd389e547b7aa4ed943f927b4999a17256dc64736f6c63430008040033";

type GoldenTokenV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GoldenTokenV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GoldenTokenV2__factory extends ContractFactory {
  constructor(...args: GoldenTokenV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenTokenV2> {
    return super.deploy(overrides || {}) as Promise<GoldenTokenV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GoldenTokenV2 {
    return super.attach(address) as GoldenTokenV2;
  }
  override connect(signer: Signer): GoldenTokenV2__factory {
    return super.connect(signer) as GoldenTokenV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenTokenV2Interface {
    return new utils.Interface(_abi) as GoldenTokenV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenTokenV2 {
    return new Contract(address, _abi, signerOrProvider) as GoldenTokenV2;
  }
}
