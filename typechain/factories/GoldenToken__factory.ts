/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GoldenToken, GoldenTokenInterface } from "../GoldenToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct StakeableUpgradeable.User[]",
        name: "users",
        type: "tuple[]",
      },
    ],
    name: "_bulkStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "_stakeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20VotesUpgradeable.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506126c8806100206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637cb569de1161011a578063a694fc3a116100ad578063dd62ed3e1161007c578063dd62ed3e1461047c578063eb36854e1461048f578063f1127ed8146104a2578063f2fde38b146104df578063fe4b84df146104f257600080fd5b8063a694fc3a14610430578063a9059cbb14610443578063c3cda52014610456578063d505accf1461046957600080fd5b806395d89b41116100e957806395d89b41146103ef5780639a32cfa9146103f75780639ab24eb01461040a578063a457c2d71461041d57600080fd5b80637cb569de146103a55780637ecebe00146103b85780638da5cb5b146103cb5780638e539e8c146103dc57600080fd5b80633644e515116101925780635c19a95c116101615780635c19a95c146103395780636fcfff451461034c57806370a0823114610374578063715018a61461039d57600080fd5b80633644e515146102c757806339509351146102cf5780633a46b1a8146102e2578063587cde1e146102f557600080fd5b806323b62302116101ce57806323b623021461026857806323b872dd146102925780632e17de78146102a5578063313ce567146102b857600080fd5b806302fb4d851461020057806306fdde0314610215578063095ea7b31461023357806318160ddd14610256575b600080fd5b61021361020e366004612237565b610505565b005b61021d610562565b60405161022a9190612261565b60405180910390f35b610246610241366004612237565b6105f4565b604051901515815260200161022a565b6035545b60405190815260200161022a565b61025a6102763660046122b6565b6001600160a01b03166000908152610130602052604090205490565b6102466102a03660046122d1565b61060c565b6102136102b336600461230d565b610630565b6040516012815260200161022a565b61025a610649565b6102466102dd366004612237565b610658565b61025a6102f0366004612237565b61067a565b6103216103033660046122b6565b6001600160a01b03908116600090815260cc60205260409020541690565b6040516001600160a01b03909116815260200161022a565b6102136103473660046122b6565b6106f4565b61035f61035a3660046122b6565b610701565b60405163ffffffff909116815260200161022a565b61025a6103823660046122b6565b6001600160a01b031660009081526033602052604090205490565b610213610729565b6102136103b3366004612237565b61075f565b61025a6103c63660046122b6565b610824565b60fe546001600160a01b0316610321565b61025a6103ea36600461230d565b610842565b61021d61089e565b610213610405366004612326565b6108ad565b61025a6104183660046122b6565b610972565b61024661042b366004612237565b61099f565b61021361043e36600461230d565b610a1a565b610246610451366004612237565b610a29565b6102136104643660046123ac565b610a37565b610213610477366004612404565b610b6d565b61025a61048a36600461246e565b610cd1565b61021361049d36600461230d565b610cfc565b6104b56104b03660046124a1565b610d85565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161022a565b6102136104ed3660046122b6565b610e09565b61021361050036600461230d565b610ea1565b60fe546001600160a01b031633146105385760405162461bcd60e51b815260040161052f906124e1565b60405180910390fd5b610542828261075f565b61055d61055760fe546001600160a01b031690565b82610a29565b505050565b60606036805461057190612516565b80601f016020809104026020016040519081016040528092919081815260200182805461059d90612516565b80156105ea5780601f106105bf576101008083540402835291602001916105ea565b820191906000526020600020905b8154815290600101906020018083116105cd57829003601f168201915b5050505050905090565b600033610602818585610f94565b5060019392505050565b60003361061a8582856110b8565b610625858585611132565b506001949350505050565b61063981610cfc565b33610645308284611132565b5050565b6000610653611311565b905090565b60003361060281858561066b8383610cd1565b6106759190612561565b610f94565b60004382106106cb5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161052f565b6001600160a01b038316600090815260cd602052604090206106ed908361138c565b9392505050565b6106fe3382611449565b50565b6001600160a01b038116600090815260cd6020526040812054610723906114c3565b92915050565b60fe546001600160a01b031633146107535760405162461bcd60e51b815260040161052f906124e1565b61075d600061152c565b565b60fe546001600160a01b031633146107895760405162461bcd60e51b815260040161052f906124e1565b6001600160a01b038216600090815261013060205260409020548111156107f25760405162461bcd60e51b815260206004820152601760248201527f5f736c6173683a20657863656564732062616c616e6365000000000000000000604482015260640161052f565b6001600160a01b038216600090815261013060205260408120805483929061081b908490612579565b90915550505050565b6001600160a01b038116600090815260996020526040812054610723565b60004382106108935760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161052f565b61072360ce8361138c565b60606037805461057190612516565b60fe546001600160a01b031633146108d75760405162461bcd60e51b815260040161052f906124e1565b60005b8181101561055d578282828181106108f4576108f4612590565b90506040020160200135610130600085858581811061091557610915612590565b61092b92602060409092020190810191506122b6565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461095a9190612561565b9091555081905061096a816125a6565b9150506108da565b6001600160a01b038116600090815261013060205260408120546109958361157e565b6107239190612561565b600033816109ad8286610cd1565b905083811015610a0d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161052f565b6106258286868403610f94565b610a2381611605565b61064530825b600033610602818585611132565b83421115610a875760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e61747572652065787069726564000000604482015260640161052f565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610b0190610af99060a001604051602081830303815290604052805190602001206116a9565b8585856116f7565b9050610b0c8161171f565b8614610b5a5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000604482015260640161052f565b610b648188611449565b50505050505050565b83421115610bbd5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161052f565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610bec8c61171f565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610c47826116a9565b90506000610c57828787876116f7565b9050896001600160a01b0316816001600160a01b031614610cba5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161052f565b610cc58a8a8a610f94565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3360008181526101306020526040902054821115610d5c5760405162461bcd60e51b815260206004820152601960248201527f5f756e7374616b653a20657863656564732062616c616e636500000000000000604482015260640161052f565b6001600160a01b038116600090815261013060205260408120805484929061081b908490612579565b60408051808201909152600080825260208201526001600160a01b038316600090815260cd60205260409020805463ffffffff8416908110610dc957610dc9612590565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b60fe546001600160a01b03163314610e335760405162461bcd60e51b815260040161052f906124e1565b6001600160a01b038116610e985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161052f565b6106fe8161152c565b6000610ead6001611747565b90508015610ec5576000805461ff0019166101001790555b610f0d6040518060400160405280600b81526020016a23b7b63232b72a37b5b2b760a91b8152506040518060400160405280600381526020016211d31160ea1b8152506117d4565b610f396040518060400160405280600b81526020016a23b7b63232b72a37b5b2b760a91b815250611805565b610f4161184f565b610f4b338361187e565b8015610645576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6001600160a01b038316610ff65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161052f565b6001600160a01b0382166110575760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161052f565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006110c48484610cd1565b9050600019811461112c578181101561111f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161052f565b61112c8484848403610f94565b50505050565b6001600160a01b0383166111965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161052f565b6001600160a01b0382166111f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161052f565b611203838383611888565b6001600160a01b0383166000908152603360205260409020548181101561127b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161052f565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906112b2908490612561565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112fe91815260200190565b60405180910390a361112c84848461191d565b60006106537f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61134060655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b8154600090815b818110156113f05760006113a78284611928565b9050848682815481106113bc576113bc612590565b60009182526020909120015463ffffffff1611156113dc578092506113ea565b6113e7816001612561565b91505b50611393565b81156114345784611402600184612579565b8154811061141257611412612590565b60009182526020909120015464010000000090046001600160e01b0316611437565b60005b6001600160e01b031695945050505050565b6001600160a01b03828116600081815260cc6020818152604080842080546033845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461112c828483611943565b600063ffffffff8211156115285760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161052f565b5090565b60fe80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260cd602052604081205480156115f2576001600160a01b038316600090815260cd602052604090206115c0600183612579565b815481106115d0576115d0612590565b60009182526020909120015464010000000090046001600160e01b03166115f5565b60005b6001600160e01b03169392505050565b6000811161164c5760405162461bcd60e51b815260206004820152601460248201527343616e6e6f74207374616b65206e6f7468696e6760601b604482015260640161052f565b33600090815261013060205260408120805483929061166c908490612561565b909155505060405181815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200160405180910390a250565b60006107236116b6611311565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061170887878787611a80565b9150915061171581611b6d565b5095945050505050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b60008054610100900460ff161561178e578160ff16600114801561176a5750303b155b6117865760405162461bcd60e51b815260040161052f906125c1565b506000919050565b60005460ff8084169116106117b55760405162461bcd60e51b815260040161052f906125c1565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166117fb5760405162461bcd60e51b815260040161052f9061260f565b6106458282611d28565b600054610100900460ff1661182c5760405162461bcd60e51b815260040161052f9061260f565b6106fe81604051806040016040528060018152602001603160f81b815250611d76565b600054610100900460ff166118765760405162461bcd60e51b815260040161052f9061260f565b61075d611db7565b6106458282611de7565b6001600160a01b03831615806118ab575060fe546001600160a01b038481169116145b806118be57506001600160a01b03831630145b806118d157506001600160a01b03821630145b61055d5760405162461bcd60e51b815260206004820152601e60248201527f45524332303a204e6f7420616c6c6f77656420746f207472616e736665720000604482015260640161052f565b61055d838383611e71565b6000611937600284841861265a565b6106ed90848416612561565b816001600160a01b0316836001600160a01b0316141580156119655750600081115b1561055d576001600160a01b038316156119f3576001600160a01b038316600090815260cd6020526040812081906119a090611ea385611eaf565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516119e8929190918252602082015260400190565b60405180910390a250505b6001600160a01b0382161561055d576001600160a01b038216600090815260cd602052604081208190611a299061202885611eaf565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611a71929190918252602082015260400190565b60405180910390a25050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611ab75750600090506003611b64565b8460ff16601b14158015611acf57508460ff16601c14155b15611ae05750600090506004611b64565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b34573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b5d57600060019250925050611b64565b9150600090505b94509492505050565b6000816004811115611b8157611b8161267c565b1415611b8a5750565b6001816004811115611b9e57611b9e61267c565b1415611bec5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161052f565b6002816004811115611c0057611c0061267c565b1415611c4e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161052f565b6003816004811115611c6257611c6261267c565b1415611cbb5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161052f565b6004816004811115611ccf57611ccf61267c565b14156106fe5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161052f565b600054610100900460ff16611d4f5760405162461bcd60e51b815260040161052f9061260f565b8151611d62906036906020850190612190565b50805161055d906037906020840190612190565b600054610100900460ff16611d9d5760405162461bcd60e51b815260040161052f9061260f565b815160209283012081519190920120606591909155606655565b600054610100900460ff16611dde5760405162461bcd60e51b815260040161052f9061260f565b61075d3361152c565b611df18282612034565b6035546001600160e01b031015611e635760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b606482015260840161052f565b61112c60ce61202883611eaf565b6001600160a01b03838116600090815260cc602052604080822054858416835291205461055d92918216911683611943565b60006106ed8284612579565b825460009081908015611efa5785611ec8600183612579565b81548110611ed857611ed8612590565b60009182526020909120015464010000000090046001600160e01b0316611efd565b60005b6001600160e01b03169250611f1683858763ffffffff16565b9150600081118015611f5457504386611f30600184612579565b81548110611f4057611f40612590565b60009182526020909120015463ffffffff16145b15611fb457611f6282612127565b86611f6e600184612579565b81548110611f7e57611f7e612590565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b0316021790555061201f565b856040518060400160405280611fc9436114c3565b63ffffffff168152602001611fdd85612127565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b60006106ed8284612561565b6001600160a01b03821661208a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161052f565b61209660008383611888565b80603560008282546120a89190612561565b90915550506001600160a01b038216600090815260336020526040812080548392906120d5908490612561565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36106456000838361191d565b60006001600160e01b038211156115285760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161052f565b82805461219c90612516565b90600052602060002090601f0160209004810192826121be5760008555612204565b82601f106121d757805160ff1916838001178555612204565b82800160010185558215612204579182015b828111156122045782518255916020019190600101906121e9565b506115289291505b80821115611528576000815560010161220c565b80356001600160a01b03811681146117cf57600080fd5b6000806040838503121561224a57600080fd5b61225383612220565b946020939093013593505050565b600060208083528351808285015260005b8181101561228e57858101830151858201604001528201612272565b818111156122a0576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156122c857600080fd5b6106ed82612220565b6000806000606084860312156122e657600080fd5b6122ef84612220565b92506122fd60208501612220565b9150604084013590509250925092565b60006020828403121561231f57600080fd5b5035919050565b6000806020838503121561233957600080fd5b823567ffffffffffffffff8082111561235157600080fd5b818501915085601f83011261236557600080fd5b81358181111561237457600080fd5b8660208260061b850101111561238957600080fd5b60209290920196919550909350505050565b803560ff811681146117cf57600080fd5b60008060008060008060c087890312156123c557600080fd5b6123ce87612220565b955060208701359450604087013593506123ea6060880161239b565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561241f57600080fd5b61242888612220565b965061243660208901612220565b955060408801359450606088013593506124526080890161239b565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561248157600080fd5b61248a83612220565b915061249860208401612220565b90509250929050565b600080604083850312156124b457600080fd5b6124bd83612220565b9150602083013563ffffffff811681146124d657600080fd5b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061252a57607f821691505b6020821081141561174157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156125745761257461254b565b500190565b60008282101561258b5761258b61254b565b500390565b634e487b7160e01b600052603260045260246000fd5b60006000198214156125ba576125ba61254b565b5060010190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008261267757634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea26469706673582212205cf9cd8ab90dac1a8aa1189bd0de6b7c0dba18ea038c95f335cc3243ed46b27264736f6c634300080b0033";

export class GoldenToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenToken> {
    return super.deploy(overrides || {}) as Promise<GoldenToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GoldenToken {
    return super.attach(address) as GoldenToken;
  }
  connect(signer: Signer): GoldenToken__factory {
    return super.connect(signer) as GoldenToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenTokenInterface {
    return new utils.Interface(_abi) as GoldenTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenToken {
    return new Contract(address, _abi, signerOrProvider) as GoldenToken;
  }
}
