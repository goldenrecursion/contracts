/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GoldenToken, GoldenTokenInterface } from "../GoldenToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Slashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnStaked",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "_stakeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct StakeableUpgradeable.User[]",
        name: "users",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "bulkStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20VotesUpgradeable.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061286a806100206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c8063715018a61161011a578063a694fc3a116100ad578063dd62ed3e1161007c578063dd62ed3e1461047c578063eb36854e1461048f578063f1127ed8146104a2578063f2fde38b146104df578063fe4b84df146104f257600080fd5b8063a694fc3a14610430578063a9059cbb14610443578063c3cda52014610456578063d505accf1461046957600080fd5b80638e539e8c116100e95780638e539e8c146103ef57806395d89b41146104025780639ab24eb01461040a578063a457c2d71461041d57600080fd5b8063715018a6146103b05780637cb569de146103b85780637ecebe00146103cb5780638da5cb5b146103de57600080fd5b80633644e515116101925780635c19a95c116101615780635c19a95c146103395780636c8848c21461034c5780636fcfff451461035f57806370a082311461038757600080fd5b80633644e515146102c757806339509351146102cf5780633a46b1a8146102e2578063587cde1e146102f557600080fd5b806323b62302116101ce57806323b623021461026857806323b872dd146102925780632e17de78146102a5578063313ce567146102b857600080fd5b806302fb4d851461020057806306fdde0314610215578063095ea7b31461023357806318160ddd14610256575b600080fd5b61021361020e3660046123d3565b610505565b005b61021d610562565b60405161022a91906123fd565b60405180910390f35b6102466102413660046123d3565b6105f4565b604051901515815260200161022a565b6035545b60405190815260200161022a565b61025a610276366004612452565b6001600160a01b03166000908152610130602052604090205490565b6102466102a036600461246d565b61060c565b6102136102b33660046124a9565b610630565b6040516012815260200161022a565b61025a610647565b6102466102dd3660046123d3565b610656565b61025a6102f03660046123d3565b610678565b610321610303366004612452565b6001600160a01b03908116600090815260cc60205260409020541690565b6040516001600160a01b03909116815260200161022a565b610213610347366004612452565b6106f2565b61021361035a3660046124c2565b6106fc565b61037261036d366004612452565b610741565b60405163ffffffff909116815260200161022a565b61025a610395366004612452565b6001600160a01b031660009081526033602052604090205490565b610213610769565b6102136103c63660046123d3565b61079f565b61025a6103d9366004612452565b6108a2565b60fe546001600160a01b0316610321565b61025a6103fd3660046124a9565b6108c0565b61021d61091c565b61025a610418366004612452565b61092b565b61024661042b3660046123d3565b610958565b61021361043e3660046124a9565b6109d3565b6102466104513660046123d3565b6109ea565b61021361046436600461254e565b6109f8565b6102136104773660046125a6565b610b2e565b61025a61048a366004612610565b610c92565b61021361049d3660046124a9565b610cbd565b6104b56104b0366004612643565b610d7b565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161022a565b6102136104ed366004612452565b610dff565b6102136105003660046124a9565b610e97565b60fe546001600160a01b031633146105385760405162461bcd60e51b815260040161052f90612683565b60405180910390fd5b610542828261079f565b61055d61055760fe546001600160a01b031690565b826109ea565b505050565b606060368054610571906126b8565b80601f016020809104026020016040519081016040528092919081815260200182805461059d906126b8565b80156105ea5780601f106105bf576101008083540402835291602001916105ea565b820191906000526020600020905b8154815290600101906020018083116105cd57829003601f168201915b5050505050905090565b600033610602818585610f8a565b5060019392505050565b60003361061a8582856110ae565b610625858585611122565b506001949350505050565b61063981610cbd565b610644303383611122565b50565b6000610651611301565b905090565b6000336106028185856106698383610c92565b6106739190612703565b610f8a565b60004382106106c95760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161052f565b6001600160a01b038316600090815260cd602052604090206106eb908361137c565b9392505050565b6106443382611439565b60fe546001600160a01b031633146107265760405162461bcd60e51b815260040161052f90612683565b6107318383836114b3565b61073b30826109ea565b50505050565b6001600160a01b038116600090815260cd602052604081205461076390611665565b92915050565b60fe546001600160a01b031633146107935760405162461bcd60e51b815260040161052f90612683565b61079d60006116ce565b565b60fe546001600160a01b031633146107c95760405162461bcd60e51b815260040161052f90612683565b6001600160a01b038216600090815261013060205260409020548111156108325760405162461bcd60e51b815260206004820152601760248201527f5f736c6173683a20657863656564732062616c616e6365000000000000000000604482015260640161052f565b6001600160a01b038216600090815261013060205260408120805483929061085b90849061271b565b90915550506040518181526001600160a01b038316907f4ed05e9673c26d2ed44f7ef6a7f2942df0ee3b5e1e17db4b99f9dcd261a339cd9060200160405180910390a25050565b6001600160a01b038116600090815260996020526040812054610763565b60004382106109115760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161052f565b61076360ce8361137c565b606060378054610571906126b8565b6001600160a01b0381166000908152610130602052604081205461094e83611720565b6107639190612703565b600033816109668286610c92565b9050838110156109c65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161052f565b6106258286868403610f8a565b6109dc816117a7565b6109e630826109ea565b5050565b600033610602818585611122565b83421115610a485760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e61747572652065787069726564000000604482015260640161052f565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610ac290610aba9060a00160405160208183030381529060405280519060200120611845565b858585611893565b9050610acd816118bb565b8614610b1b5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000604482015260640161052f565b610b258188611439565b50505050505050565b83421115610b7e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161052f565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610bad8c6118bb565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610c0882611845565b90506000610c1882878787611893565b9050896001600160a01b0316816001600160a01b031614610c7b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161052f565b610c868a8a8a610f8a565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3360009081526101306020526040902054811115610d1d5760405162461bcd60e51b815260206004820152601960248201527f5f756e7374616b653a20657863656564732062616c616e636500000000000000604482015260640161052f565b336000908152610130602052604081208054839290610d3d90849061271b565b909155505060405181815233907f79d3df6837cc49ff0e09fd3258e6e45594e0703445bb06825e9d75156eaee8f0906020015b60405180910390a250565b60408051808201909152600080825260208201526001600160a01b038316600090815260cd60205260409020805463ffffffff8416908110610dbf57610dbf612732565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b60fe546001600160a01b03163314610e295760405162461bcd60e51b815260040161052f90612683565b6001600160a01b038116610e8e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161052f565b610644816116ce565b6000610ea360016118e3565b90508015610ebb576000805461ff0019166101001790555b610ec3611970565b610f0b6040518060400160405280600b81526020016a23b7b63232b72a37b5b2b760a91b8152506040518060400160405280600381526020016211d31160ea1b81525061199f565b610f376040518060400160405280600b81526020016a23b7b63232b72a37b5b2b760a91b8152506119d0565b610f413383611a1a565b80156109e6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6001600160a01b038316610fec5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161052f565b6001600160a01b03821661104d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161052f565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006110ba8484610c92565b9050600019811461073b57818110156111155760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161052f565b61073b8484848403610f8a565b6001600160a01b0383166111865760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161052f565b6001600160a01b0382166111e85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161052f565b6111f3838383611a24565b6001600160a01b0383166000908152603360205260409020548181101561126b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161052f565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906112a2908490612703565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112ee91815260200190565b60405180910390a361073b848484611ab9565b60006106517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61133060655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b8154600090815b818110156113e05760006113978284611ac4565b9050848682815481106113ac576113ac612732565b60009182526020909120015463ffffffff1611156113cc578092506113da565b6113d7816001612703565b91505b50611383565b811561142457846113f260018461271b565b8154811061140257611402612732565b60009182526020909120015464010000000090046001600160e01b0316611427565b60005b6001600160e01b031695945050505050565b6001600160a01b03828116600081815260cc6020818152604080842080546033845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461073b828483611adf565b60fe546001600160a01b031633146114dd5760405162461bcd60e51b815260040161052f90612683565b8161151e5760405162461bcd60e51b815260206004820152601160248201527062756c6b5374616b65203020757365727360781b604482015260640161052f565b6000811161156e5760405162461bcd60e51b815260206004820152601760248201527f62756c6b5374616b65203020746f74616c416d6f756e74000000000000000000604482015260640161052f565b6000805b8381101561161d57600085858381811061158e5761158e612732565b9050604002016020013590508061013060008888868181106115b2576115b2612732565b6115c89260206040909202019081019150612452565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546115f79190612703565b9091555061160790508184612703565b925050808061161590612748565b915050611572565b5081811461073b5760405162461bcd60e51b81526020600482015260156024820152741a5b98dbdc9c9958dd081d1bdd185b105b5bdd5b9d605a1b604482015260640161052f565b600063ffffffff8211156116ca5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161052f565b5090565b60fe80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260cd60205260408120548015611794576001600160a01b038316600090815260cd6020526040902061176260018361271b565b8154811061177257611772612732565b60009182526020909120015464010000000090046001600160e01b0316611797565b60005b6001600160e01b03169392505050565b600081116117ee5760405162461bcd60e51b815260206004820152601460248201527343616e6e6f74207374616b65206e6f7468696e6760601b604482015260640161052f565b33600090815261013060205260408120805483929061180e908490612703565b909155505060405181815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610d70565b6000610763611852611301565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006118a487878787611c1c565b915091506118b181611d09565b5095945050505050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b60008054610100900460ff161561192a578160ff1660011480156119065750303b155b6119225760405162461bcd60e51b815260040161052f90612763565b506000919050565b60005460ff8084169116106119515760405162461bcd60e51b815260040161052f90612763565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166119975760405162461bcd60e51b815260040161052f906127b1565b61079d611ec4565b600054610100900460ff166119c65760405162461bcd60e51b815260040161052f906127b1565b6109e68282611ef4565b600054610100900460ff166119f75760405162461bcd60e51b815260040161052f906127b1565b61064481604051806040016040528060018152602001603160f81b815250611f42565b6109e68282611f83565b6001600160a01b0383161580611a47575060fe546001600160a01b038481169116145b80611a5a57506001600160a01b03831630145b80611a6d57506001600160a01b03821630145b61055d5760405162461bcd60e51b815260206004820152601e60248201527f45524332303a204e6f7420616c6c6f77656420746f207472616e736665720000604482015260640161052f565b61055d83838361200d565b6000611ad360028484186127fc565b6106eb90848416612703565b816001600160a01b0316836001600160a01b031614158015611b015750600081115b1561055d576001600160a01b03831615611b8f576001600160a01b038316600090815260cd602052604081208190611b3c9061203f8561204b565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611b84929190918252602082015260400190565b60405180910390a250505b6001600160a01b0382161561055d576001600160a01b038216600090815260cd602052604081208190611bc5906121c48561204b565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611c0d929190918252602082015260400190565b60405180910390a25050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611c535750600090506003611d00565b8460ff16601b14158015611c6b57508460ff16601c14155b15611c7c5750600090506004611d00565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611cd0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611cf957600060019250925050611d00565b9150600090505b94509492505050565b6000816004811115611d1d57611d1d61281e565b1415611d265750565b6001816004811115611d3a57611d3a61281e565b1415611d885760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161052f565b6002816004811115611d9c57611d9c61281e565b1415611dea5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161052f565b6003816004811115611dfe57611dfe61281e565b1415611e575760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161052f565b6004816004811115611e6b57611e6b61281e565b14156106445760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161052f565b600054610100900460ff16611eeb5760405162461bcd60e51b815260040161052f906127b1565b61079d336116ce565b600054610100900460ff16611f1b5760405162461bcd60e51b815260040161052f906127b1565b8151611f2e90603690602085019061232c565b50805161055d90603790602084019061232c565b600054610100900460ff16611f695760405162461bcd60e51b815260040161052f906127b1565b815160209283012081519190920120606591909155606655565b611f8d82826121d0565b6035546001600160e01b031015611fff5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b606482015260840161052f565b61073b60ce6121c48361204b565b6001600160a01b03838116600090815260cc602052604080822054858416835291205461055d92918216911683611adf565b60006106eb828461271b565b825460009081908015612096578561206460018361271b565b8154811061207457612074612732565b60009182526020909120015464010000000090046001600160e01b0316612099565b60005b6001600160e01b031692506120b283858763ffffffff16565b91506000811180156120f0575043866120cc60018461271b565b815481106120dc576120dc612732565b60009182526020909120015463ffffffff16145b15612150576120fe826122c3565b8661210a60018461271b565b8154811061211a5761211a612732565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506121bb565b85604051806040016040528061216543611665565b63ffffffff168152602001612179856122c3565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b60006106eb8284612703565b6001600160a01b0382166122265760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161052f565b61223260008383611a24565b80603560008282546122449190612703565b90915550506001600160a01b03821660009081526033602052604081208054839290612271908490612703565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36109e660008383611ab9565b60006001600160e01b038211156116ca5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161052f565b828054612338906126b8565b90600052602060002090601f01602090048101928261235a57600085556123a0565b82601f1061237357805160ff19168380011785556123a0565b828001600101855582156123a0579182015b828111156123a0578251825591602001919060010190612385565b506116ca9291505b808211156116ca57600081556001016123a8565b80356001600160a01b038116811461196b57600080fd5b600080604083850312156123e657600080fd5b6123ef836123bc565b946020939093013593505050565b600060208083528351808285015260005b8181101561242a5785810183015185820160400152820161240e565b8181111561243c576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561246457600080fd5b6106eb826123bc565b60008060006060848603121561248257600080fd5b61248b846123bc565b9250612499602085016123bc565b9150604084013590509250925092565b6000602082840312156124bb57600080fd5b5035919050565b6000806000604084860312156124d757600080fd5b833567ffffffffffffffff808211156124ef57600080fd5b818601915086601f83011261250357600080fd5b81358181111561251257600080fd5b8760208260061b850101111561252757600080fd5b6020928301989097509590910135949350505050565b803560ff8116811461196b57600080fd5b60008060008060008060c0878903121561256757600080fd5b612570876123bc565b9550602087013594506040870135935061258c6060880161253d565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a0312156125c157600080fd5b6125ca886123bc565b96506125d8602089016123bc565b955060408801359450606088013593506125f46080890161253d565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561262357600080fd5b61262c836123bc565b915061263a602084016123bc565b90509250929050565b6000806040838503121561265657600080fd5b61265f836123bc565b9150602083013563ffffffff8116811461267857600080fd5b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c908216806126cc57607f821691505b602082108114156118dd57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612716576127166126ed565b500190565b60008282101561272d5761272d6126ed565b500390565b634e487b7160e01b600052603260045260246000fd5b600060001982141561275c5761275c6126ed565b5060010190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008261281957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea264697066735822122067d902258b7b222eb1d22059d4f72f81d4d4d70d54e2a124f404f2bf17ce873964736f6c634300080b0033";

export class GoldenToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenToken> {
    return super.deploy(overrides || {}) as Promise<GoldenToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GoldenToken {
    return super.attach(address) as GoldenToken;
  }
  connect(signer: Signer): GoldenToken__factory {
    return super.connect(signer) as GoldenToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenTokenInterface {
    return new utils.Interface(_abi) as GoldenTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenToken {
    return new Contract(address, _abi, signerOrProvider) as GoldenToken;
  }
}
