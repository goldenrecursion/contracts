/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GoldenNFTv1, GoldenNFTv1Interface } from "../GoldenNFTv1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "goldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "GoldenTokenContractAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_goldenTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "bulkBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "string",
            name: "ceramicId",
            type: "string",
          },
        ],
        internalType: "struct GoldenNFTv1.Mint[]",
        name: "mints",
        type: "tuple[]",
      },
    ],
    name: "bulkMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGoldenTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "goldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "ceramicId",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGoldenTokenContractAddress",
        type: "address",
      },
    ],
    name: "setGoldenTokenContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612141806100206000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806370a08231116100de578063a22cb46511610097578063c87b56dd11610071578063c87b56dd14610322578063d0def52114610335578063e985e9c514610348578063f2fde38b1461038457600080fd5b8063a22cb465146102e9578063b88d4fde146102fc578063c4d66de81461030f57600080fd5b806370a082311461028f578063715018a6146102a257806389d94ff3146102aa5780638da5cb5b146102bd57806395d89b41146102ce5780639e124d69146102d657600080fd5b806330e895b91161013057806330e895b9146102195780633eaaf86b1461022c57806342842e0e1461024357806342966c68146102565780635f260332146102695780636352211e1461027c57600080fd5b806301ffc9a71461017857806306fdde03146101a0578063081812fc146101b5578063095ea7b3146101e057806323b872dd146101f55780632a63b29214610208575b600080fd5b61018b610186366004611a51565b610397565b60405190151581526020015b60405180910390f35b6101a86103e9565b6040516101979190611ac2565b6101c86101c3366004611ad5565b61047b565b6040516001600160a01b039091168152602001610197565b6101f36101ee366004611b05565b610515565b005b6101f3610203366004611b2f565b61062b565b60ca546001600160a01b03166101c8565b6101f3610227366004611bb7565b61065c565b61023560cb5481565b604051908152602001610197565b6101f3610251366004611b2f565b610814565b6101f3610264366004611ad5565b61082f565b6101f3610277366004611bf9565b6108b9565b6101c861028a366004611ad5565b61092d565b61023561029d366004611bf9565b6109a4565b6101f3610a2b565b60ca546101c8906001600160a01b031681565b6097546001600160a01b03166101c8565b6101a8610a61565b6101f36102e4366004611bb7565b610a70565b6101f36102f7366004611c14565b610b1d565b6101f361030a366004611cdc565b610b2c565b6101f361031d366004611bf9565b610b64565b6101a8610330366004611ad5565b610c3f565b610235610343366004611d58565b610d3d565b61018b610356366004611dba565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6101f3610392366004611bf9565b610efe565b60006001600160e01b031982166380ac58cd60e01b14806103c857506001600160e01b03198216635b5e139f60e01b145b806103e357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546103f890611ded565b80601f016020809104026020016040519081016040528092919081815260200182805461042490611ded565b80156104715780601f1061044657610100808354040283529160200191610471565b820191906000526020600020905b81548152906001019060200180831161045457829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166104f95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105208261092d565b9050806001600160a01b0316836001600160a01b0316141561058e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016104f0565b336001600160a01b03821614806105aa57506105aa8133610356565b61061c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104f0565b6106268383610f99565b505050565b6106353382611007565b6106515760405162461bcd60e51b81526004016104f090611e28565b6106268383836110fe565b6097546001600160a01b031633146106865760405162461bcd60e51b81526004016104f090611e79565b806106c55760405162461bcd60e51b815260206004820152600f60248201526e62756c6b4d696e742030204e46547360881b60448201526064016104f0565b60005b818110156106265760008383838181106106e4576106e4611eae565b90506020028101906106f69190611ec4565b610704906020810190611bf9565b90506001600160a01b0381166107495760405162461bcd60e51b815260206004820152600a602482015269696e76616c696420746f60b01b60448201526064016104f0565b600084848481811061075d5761075d611eae565b905060200281019061076f9190611ec4565b61077d906020810190611ee4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825192935050506107f45760405162461bcd60e51b815260206004820152600f60248201526e195b5c1d1e4818d95c985b5a58d259608a1b60448201526064016104f0565b6107fe8282610d3d565b505050808061080c90611f41565b9150506106c8565b61062683838360405180602001604052806000815250610b2c565b6097546001600160a01b031633146108595760405162461bcd60e51b81526004016104f090611e79565b610862816112a5565b600081815260cc6020526040812061087991611968565b600160cb546108889190611f5c565b60cb5560405181907fd83c63197e8e676d80ab0122beba9a9d20f3828839e9a1d6fe81d242e9cd7e6e90600090a250565b6097546001600160a01b031633146108e35760405162461bcd60e51b81526004016104f090611e79565b60ca80546001600160a01b0319166001600160a01b0383169081179091556040517fe2c34fba7a16caa93431a35c2f08f7f67264f0175978b111d35dbd9e014bb51690600090a250565b6000818152606760205260408120546001600160a01b0316806103e35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016104f0565b60006001600160a01b038216610a0f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016104f0565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610a555760405162461bcd60e51b81526004016104f090611e79565b610a5f600061134c565b565b6060606680546103f890611ded565b6097546001600160a01b03163314610a9a5760405162461bcd60e51b81526004016104f090611e79565b80610ad95760405162461bcd60e51b815260206004820152600f60248201526e62756c6b4275726e2030204e46547360881b60448201526064016104f0565b60005b81811015610626576000838383818110610af857610af8611eae565b905060200201359050610b0a8161082f565b5080610b1581611f41565b915050610adc565b610b2833838361139e565b5050565b610b363383611007565b610b525760405162461bcd60e51b81526004016104f090611e28565b610b5e8484848461146d565b50505050565b6000610b7060016114a0565b90508015610b88576000805461ff0019166101001790555b610b9061152d565b610bdb6040518060400160405280600d81526020016c476f6c64656e20456e7469747960981b81525060405180604001604052806004815260200163474c444560e01b81525061155c565b60ca80546001600160a01b0319166001600160a01b0384161790558015610b28576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6000818152606760205260409020546060906001600160a01b0316610c9f5760405162461bcd60e51b81526020600482015260166024820152751d1bdad95b925908191bd95cc81b9bdd08195e1a5cdd60521b60448201526064016104f0565b600082815260cc602052604090208054610cb890611ded565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce490611ded565b8015610d315780601f10610d0657610100808354040283529160200191610d31565b820191906000526020600020905b815481529060010190602001808311610d1457829003601f168201915b50505050509050919050565b6097546000906001600160a01b03163314610d6a5760405162461bcd60e51b81526004016104f090611e79565b6001600160a01b03831615801590610d8b57506001600160a01b0383163014155b610dd05760405162461bcd60e51b8152602060048201526016602482015275746f2063616e6e6f742062652030206f72207468697360501b60448201526064016104f0565b60408051808201909152600f81526e1f1f1f1f1012b9961012b9961012b160891b6020820152610e0e908460006001600160a01b038216151561158d565b8151610e5c5760405162461bcd60e51b815260206004820152601960248201527f636572616d696349642063616e6e6f7420626520656d7074790000000000000060448201526064016104f0565b6000610e6760c95490565b9050610e7384826115d6565b600081815260cc602090815260409091208451610e92928601906119a2565b50610ea160c980546001019055565b60cb54610eaf906001611f73565b60cb8190555080846001600160a01b03167fe7cd4ce7f2a465edc730269a1305e8a48bad821e8fb7e152ec413829c01a53c485604051610eef9190611ac2565b60405180910390a39392505050565b6097546001600160a01b03163314610f285760405162461bcd60e51b81526004016104f090611e79565b6001600160a01b038116610f8d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f0565b610f968161134c565b50565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610fce8261092d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152606760205260408120546001600160a01b03166110805760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104f0565b600061108b8361092d565b9050806001600160a01b0316846001600160a01b031614806110d257506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b806110f65750836001600160a01b03166110eb8461047b565b6001600160a01b0316145b949350505050565b826001600160a01b03166111118261092d565b6001600160a01b0316146111755760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016104f0565b6001600160a01b0382166111d75760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104f0565b6111e2838383611724565b6111ed600082610f99565b6001600160a01b0383166000908152606860205260408120805460019290611216908490611f5c565b90915550506001600160a01b0382166000908152606860205260408120805460019290611244908490611f73565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006112b08261092d565b90506112be81600084611724565b6112c9600083610f99565b6001600160a01b03811660009081526068602052604081208054600192906112f2908490611f5c565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156114005760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104f0565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6114788484846110fe565b611484848484846117cb565b610b5e5760405162461bcd60e51b81526004016104f090611f8b565b60008054610100900460ff16156114e7578160ff1660011480156114c35750303b155b6114df5760405162461bcd60e51b81526004016104f090611fdd565b506000919050565b60005460ff80841691161061150e5760405162461bcd60e51b81526004016104f090611fdd565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166115545760405162461bcd60e51b81526004016104f09061202b565b610a5f6118c9565b600054610100900460ff166115835760405162461bcd60e51b81526004016104f09061202b565b610b2882826118f9565b610b5e848484846040516024016115a79493929190612076565b60408051601f198184030181529190526020810180516001600160e01b03166305acedeb60e51b179052611947565b6001600160a01b03821661162c5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104f0565b6000818152606760205260409020546001600160a01b0316156116915760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104f0565b61169d60008383611724565b6001600160a01b03821660009081526068602052604081208054600192906116c6908490611f73565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b038316158061174757506097546001600160a01b038481169116145b8061175a57506001600160a01b03831630145b8061176d57506001600160a01b03821630145b8061177f57506001600160a01b038216155b6106265760405162461bcd60e51b815260206004820152601f60248201527f4552433732313a204e6f7420616c6c6f77656420746f207472616e736665720060448201526064016104f0565b60006001600160a01b0384163b156118be57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061180f9033908990889088906004016120b1565b6020604051808303816000875af192505050801561184a575060408051601f3d908101601f19168201909252611847918101906120ee565b60015b6118a4573d808015611878576040519150601f19603f3d011682016040523d82523d6000602084013e61187d565b606091505b50805161189c5760405162461bcd60e51b81526004016104f090611f8b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506110f6565b506001949350505050565b600054610100900460ff166118f05760405162461bcd60e51b81526004016104f09061202b565b610a5f3361134c565b600054610100900460ff166119205760405162461bcd60e51b81526004016104f09061202b565b81516119339060659060208501906119a2565b5080516106269060669060208401906119a2565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b50805461197490611ded565b6000825580601f10611984575050565b601f016020900490600052602060002090810190610f969190611a26565b8280546119ae90611ded565b90600052602060002090601f0160209004810192826119d05760008555611a16565b82601f106119e957805160ff1916838001178555611a16565b82800160010185558215611a16579182015b82811115611a165782518255916020019190600101906119fb565b50611a22929150611a26565b5090565b5b80821115611a225760008155600101611a27565b6001600160e01b031981168114610f9657600080fd5b600060208284031215611a6357600080fd5b8135611a6e81611a3b565b9392505050565b6000815180845260005b81811015611a9b57602081850181015186830182015201611a7f565b81811115611aad576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611a6e6020830184611a75565b600060208284031215611ae757600080fd5b5035919050565b80356001600160a01b038116811461152857600080fd5b60008060408385031215611b1857600080fd5b611b2183611aee565b946020939093013593505050565b600080600060608486031215611b4457600080fd5b611b4d84611aee565b9250611b5b60208501611aee565b9150604084013590509250925092565b60008083601f840112611b7d57600080fd5b50813567ffffffffffffffff811115611b9557600080fd5b6020830191508360208260051b8501011115611bb057600080fd5b9250929050565b60008060208385031215611bca57600080fd5b823567ffffffffffffffff811115611be157600080fd5b611bed85828601611b6b565b90969095509350505050565b600060208284031215611c0b57600080fd5b611a6e82611aee565b60008060408385031215611c2757600080fd5b611c3083611aee565b915060208301358015158114611c4557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611c8157611c81611c50565b604051601f8501601f19908116603f01168101908282118183101715611ca957611ca9611c50565b81604052809350858152868686011115611cc257600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215611cf257600080fd5b611cfb85611aee565b9350611d0960208601611aee565b925060408501359150606085013567ffffffffffffffff811115611d2c57600080fd5b8501601f81018713611d3d57600080fd5b611d4c87823560208401611c66565b91505092959194509250565b60008060408385031215611d6b57600080fd5b611d7483611aee565b9150602083013567ffffffffffffffff811115611d9057600080fd5b8301601f81018513611da157600080fd5b611db085823560208401611c66565b9150509250929050565b60008060408385031215611dcd57600080fd5b611dd683611aee565b9150611de460208401611aee565b90509250929050565b600181811c90821680611e0157607f821691505b60208210811415611e2257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60008235603e19833603018112611eda57600080fd5b9190910192915050565b6000808335601e19843603018112611efb57600080fd5b83018035915067ffffffffffffffff821115611f1657600080fd5b602001915036819003821315611bb057600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611f5557611f55611f2b565b5060010190565b600082821015611f6e57611f6e611f2b565b500390565b60008219821115611f8657611f86611f2b565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6080815260006120896080830187611a75565b6001600160a01b03958616602084015293909416604082015290151560609091015292915050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906120e490830184611a75565b9695505050505050565b60006020828403121561210057600080fd5b8151611a6e81611a3b56fea2646970667358221220d6d651322e4108a60173aefdebd669858c6e4e48e3c454ec8ebe81c5829068db64736f6c634300080b0033";

export class GoldenNFTv1__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenNFTv1> {
    return super.deploy(overrides || {}) as Promise<GoldenNFTv1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GoldenNFTv1 {
    return super.attach(address) as GoldenNFTv1;
  }
  connect(signer: Signer): GoldenNFTv1__factory {
    return super.connect(signer) as GoldenNFTv1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenNFTv1Interface {
    return new utils.Interface(_abi) as GoldenNFTv1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenNFTv1 {
    return new Contract(address, _abi, signerOrProvider) as GoldenNFTv1;
  }
}
