/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GoldenTokenV2, GoldenTokenV2Interface } from "../GoldenTokenV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Slashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnStaked",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "_stakeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct StakeableUpgradeableV2.User[]",
        name: "users",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "bulkSlash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct StakeableUpgradeableV2.User[]",
        name: "users",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "bulkStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20VotesUpgradeable.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "slash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "stakeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061272d806100206000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c8063715018a61161011a578063a457c2d7116100ad578063d505accf1161007c578063d505accf1461049a578063dd62ed3e146104ad578063eb36854e146104c0578063f1127ed8146104d3578063f2fde38b1461051057600080fd5b8063a457c2d71461044e578063a694fc3a14610461578063a9059cbb14610474578063c3cda5201461048757600080fd5b80638da5cb5b116100e95780638da5cb5b1461040f5780638e539e8c1461042057806395d89b41146104335780639ab24eb01461043b57600080fd5b8063715018a6146103ce5780637cb569de146103d65780637ecebe00146103e957806384144dcf146103fc57600080fd5b80633644e5151161019d578063587cde1e1161016c578063587cde1e146103135780635c19a95c146103575780636c8848c21461036a5780636fcfff451461037d57806370a08231146103a557600080fd5b80633644e515146102d257806339509351146102da5780633a46b1a8146102ed578063426233601461030057600080fd5b806323b62302116101d957806323b623021461027357806323b872dd1461029d5780632e17de78146102b0578063313ce567146102c357600080fd5b806302fb4d851461020b57806306fdde0314610220578063095ea7b31461023e57806318160ddd14610261575b600080fd5b61021e61021936600461246e565b610523565b005b610228610580565b60405161023591906125ba565b60405180910390f35b61025161024c36600461246e565b610612565b6040519015158152602001610235565b6035545b604051908152602001610235565b61026561028136600461237e565b6001600160a01b03166000908152610130602052604090205490565b6102516102ab3660046123ca565b61062a565b61021e6102be3660046125a2565b61064e565b60405160128152602001610235565b610265610664565b6102516102e836600461246e565b610673565b6102656102fb36600461246e565b610695565b61026561030e36600461237e565b61070f565b61033f61032136600461237e565b6001600160a01b03908116600090815260cc60205260409020541690565b6040516001600160a01b039091168152602001610235565b61021e61036536600461237e565b610730565b61021e61037836600461252c565b61073a565b61039061038b36600461237e565b61077f565b60405163ffffffff9091168152602001610235565b6102656103b336600461237e565b6001600160a01b031660009081526033602052604090205490565b61021e6107a1565b61021e6103e436600461246e565b6107d7565b6102656103f736600461237e565b6108da565b61021e61040a36600461252c565b6108f8565b60fe546001600160a01b031661033f565b61026561042e3660046125a2565b610947565b6102286109a3565b61026561044936600461237e565b6109b2565b61025161045c36600461246e565b6109df565b61021e61046f3660046125a2565b610a5a565b61025161048236600461246e565b610a69565b61021e610495366004612497565b610a77565b61021e6104a8366004612405565b610bad565b6102656104bb366004612398565b610d11565b61021e6104ce3660046125a2565b610d3c565b6104e66104e13660046124ee565b610dfa565b60408051825163ffffffff1681526020928301516001600160e01b03169281019290925201610235565b61021e61051e36600461237e565b610e8c565b60fe546001600160a01b031633146105565760405162461bcd60e51b815260040161054d9061260d565b60405180910390fd5b61056082826107d7565b61057c3061057660fe546001600160a01b031690565b83610f24565b5050565b60606036805461058f90612691565b80601f01602080910402602001604051908101604052809291908181526020018280546105bb90612691565b80156106085780601f106105dd57610100808354040283529160200191610608565b820191906000526020600020905b8154815290600101906020018083116105eb57829003601f168201915b5050505050905090565b600033610620818585611103565b5060019392505050565b600033610638858285611227565b610643858585610f24565b506001949350505050565b61065781610d3c565b6106613033610576565b50565b600061066e61129b565b905090565b6000336106208185856106868383610d11565b6106909190612642565b611103565b60004382106106e65760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161054d565b6001600160a01b038316600090815260cd602052604090206107089083611316565b9392505050565b6001600160a01b038116600090815261013060205260408120545b92915050565b61066133826113ef565b60fe546001600160a01b031633146107645760405162461bcd60e51b815260040161054d9061260d565b61076f838383611469565b6107793082610a69565b50505050565b6001600160a01b038116600090815260cd602052604081205461072a906116ae565b60fe546001600160a01b031633146107cb5760405162461bcd60e51b815260040161054d9061260d565b6107d56000611717565b565b60fe546001600160a01b031633146108015760405162461bcd60e51b815260040161054d9061260d565b6001600160a01b0382166000908152610130602052604090205481111561086a5760405162461bcd60e51b815260206004820152601760248201527f5f736c6173683a20657863656564732062616c616e6365000000000000000000604482015260640161054d565b6001600160a01b038216600090815261013060205260408120805483929061089390849061267a565b90915550506040518181526001600160a01b038316907f4ed05e9673c26d2ed44f7ef6a7f2942df0ee3b5e1e17db4b99f9dcd261a339cd9060200160405180910390a25050565b6001600160a01b03811660009081526099602052604081205461072a565b60fe546001600160a01b031633146109225760405162461bcd60e51b815260040161054d9061260d565b600061092f848484611769565b90506107793061057660fe546001600160a01b031690565b60004382106109985760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161054d565b61072a60ce83611316565b60606037805461058f90612691565b6001600160a01b038116600090815261013060205260408120546109d583611a3f565b61072a9190612642565b600033816109ed8286610d11565b905083811015610a4d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161054d565b6106438286868403611103565b610a6381611ad4565b61057c30825b600033610620818585610f24565b83421115610ac75760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e61747572652065787069726564000000604482015260640161054d565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610b4190610b399060a00160405160208183030381529060405280519060200120611b72565b858585611bc0565b9050610b4c81611be8565b8614610b9a5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000604482015260640161054d565b610ba481886113ef565b50505050505050565b83421115610bfd5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161054d565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610c2c8c611be8565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610c8782611b72565b90506000610c9782878787611bc0565b9050896001600160a01b0316816001600160a01b031614610cfa5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161054d565b610d058a8a8a611103565b50505050505050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3360009081526101306020526040902054811115610d9c5760405162461bcd60e51b815260206004820152601960248201527f5f756e7374616b653a20657863656564732062616c616e636500000000000000604482015260640161054d565b336000908152610130602052604081208054839290610dbc90849061267a565b909155505060405181815233907f79d3df6837cc49ff0e09fd3258e6e45594e0703445bb06825e9d75156eaee8f0906020015b60405180910390a250565b60408051808201909152600080825260208201526001600160a01b038316600090815260cd60205260409020805463ffffffff8416908110610e4c57634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b60fe546001600160a01b03163314610eb65760405162461bcd60e51b815260040161054d9061260d565b6001600160a01b038116610f1b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161054d565b61066181611717565b6001600160a01b038316610f885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161054d565b6001600160a01b038216610fea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161054d565b610ff5838383611c10565b6001600160a01b0383166000908152603360205260409020548181101561106d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161054d565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906110a4908490612642565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110f091815260200190565b60405180910390a3610779848484611caa565b6001600160a01b0383166111655760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161054d565b6001600160a01b0382166111c65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161054d565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006112338484610d11565b90506000198114610779578181101561128e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161054d565b6107798484848403611103565b600061066e7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6112ca60655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b8154600090815b818110156113885760006113318284611cb5565b90508486828154811061135457634e487b7160e01b600052603260045260246000fd5b60009182526020909120015463ffffffff16111561137457809250611382565b61137f816001612642565b91505b5061131d565b81156113da578461139a60018461267a565b815481106113b857634e487b7160e01b600052603260045260246000fd5b60009182526020909120015464010000000090046001600160e01b03166113dd565b60005b6001600160e01b031695945050505050565b6001600160a01b03828116600081815260cc6020818152604080842080546033845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610779828483611cd0565b60fe546001600160a01b031633146114935760405162461bcd60e51b815260040161054d9061260d565b816114d45760405162461bcd60e51b815260206004820152601160248201527062756c6b5374616b65203020757365727360781b604482015260640161054d565b600081116115245760405162461bcd60e51b815260206004820152601760248201527f62756c6b5374616b65203020746f74616c416d6f756e74000000000000000000604482015260640161054d565b6000805b8381101561166657600085858381811061155257634e487b7160e01b600052603260045260246000fd5b90506040020160200135905080610130600088888681811061158457634e487b7160e01b600052603260045260246000fd5b61159a926020604090920201908101915061237e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546115c99190612642565b909155506115d990508184612642565b92508585838181106115fb57634e487b7160e01b600052603260045260246000fd5b611611926020604090920201908101915061237e565b6001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161164b91815260200190565b60405180910390a2508061165e816126c6565b915050611528565b508181146107795760405162461bcd60e51b81526020600482015260156024820152741a5b98dbdc9c9958dd081d1bdd185b105b5bdd5b9d605a1b604482015260640161054d565b600063ffffffff8211156117135760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161054d565b5090565b60fe80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60fe546000906001600160a01b031633146117965760405162461bcd60e51b815260040161054d9061260d565b826117d85760405162461bcd60e51b81526020600482015260126024820152715f62756c6b536c617368203020757365727360701b604482015260640161054d565b600082116118285760405162461bcd60e51b815260206004820152601860248201527f5f62756c6b536c617368203020746f74616c416d6f756e740000000000000000604482015260640161054d565b60008060005b858110156119ee57600087878381811061185857634e487b7160e01b600052603260045260246000fd5b905060400201602001359050600061013060008a8a8681811061188b57634e487b7160e01b600052603260045260246000fd5b6118a1926020604090920201908101915061237e565b6001600160a01b03166001600160a01b0316815260200190815260200160002054905060008183116118d357826118d5565b815b90508061013060008c8c888181106118fd57634e487b7160e01b600052603260045260246000fd5b611913926020604090920201908101915061237e565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254611942919061267a565b9091555061195290508387612642565b955061195e8186612642565b945089898581811061198057634e487b7160e01b600052603260045260246000fd5b611996926020604090920201908101915061237e565b6001600160a01b03167f4ed05e9673c26d2ed44f7ef6a7f2942df0ee3b5e1e17db4b99f9dcd261a339cd826040516119d091815260200190565b60405180910390a250505080806119e6906126c6565b91505061182e565b50838214611a365760405162461bcd60e51b81526020600482015260156024820152741a5b98dbdc9c9958dd081d1bdd185b105b5bdd5b9d605a1b604482015260640161054d565b95945050505050565b6001600160a01b038116600090815260cd60205260408120548015611ac1576001600160a01b038316600090815260cd60205260409020611a8160018361267a565b81548110611a9f57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015464010000000090046001600160e01b0316611ac4565b60005b6001600160e01b03169392505050565b60008111611b1b5760405162461bcd60e51b815260206004820152601460248201527343616e6e6f74207374616b65206e6f7468696e6760601b604482015260640161054d565b336000908152610130602052604081208054839290611b3b908490612642565b909155505060405181815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610def565b600061072a611b7f61129b565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611bd187878787611e0d565b91509150611bde81611efa565b5095945050505050565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b6001600160a01b0383161580611c33575060fe546001600160a01b038481169116145b80611c4657506001600160a01b03831630145b80611c5957506001600160a01b03821630145b611ca55760405162461bcd60e51b815260206004820152601e60248201527f45524332303a204e6f7420616c6c6f77656420746f207472616e736665720000604482015260640161054d565b505050565b611ca58383836120fb565b6000611cc4600284841861265a565b61070890848416612642565b816001600160a01b0316836001600160a01b031614158015611cf25750600081115b15611ca5576001600160a01b03831615611d80576001600160a01b038316600090815260cd602052604081208190611d2d9061212d85612139565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611d75929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611ca5576001600160a01b038216600090815260cd602052604081208190611db6906122dc85612139565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611dfe929190918252602082015260400190565b60405180910390a25050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611e445750600090506003611ef1565b8460ff16601b14158015611e5c57508460ff16601c14155b15611e6d5750600090506004611ef1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611ec1573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611eea57600060019250925050611ef1565b9150600090505b94509492505050565b6000816004811115611f1c57634e487b7160e01b600052602160045260246000fd5b1415611f255750565b6001816004811115611f4757634e487b7160e01b600052602160045260246000fd5b1415611f955760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161054d565b6002816004811115611fb757634e487b7160e01b600052602160045260246000fd5b14156120055760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161054d565b600381600481111561202757634e487b7160e01b600052602160045260246000fd5b14156120805760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161054d565b60048160048111156120a257634e487b7160e01b600052602160045260246000fd5b14156106615760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161054d565b6001600160a01b03838116600090815260cc6020526040808220548584168352912054611ca592918216911683611cd0565b6000610708828461267a565b825460009081908015612192578561215260018361267a565b8154811061217057634e487b7160e01b600052603260045260246000fd5b60009182526020909120015464010000000090046001600160e01b0316612195565b60005b6001600160e01b031692506121ae83858763ffffffff16565b91506000811180156121fa575043866121c860018461267a565b815481106121e657634e487b7160e01b600052603260045260246000fd5b60009182526020909120015463ffffffff16145b1561226857612208826122e8565b8661221460018461267a565b8154811061223257634e487b7160e01b600052603260045260246000fd5b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506122d3565b85604051806040016040528061227d436116ae565b63ffffffff168152602001612291856122e8565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b60006107088284612642565b60006001600160e01b038211156117135760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161054d565b80356001600160a01b038116811461236857600080fd5b919050565b803560ff8116811461236857600080fd5b60006020828403121561238f578081fd5b61070882612351565b600080604083850312156123aa578081fd5b6123b383612351565b91506123c160208401612351565b90509250929050565b6000806000606084860312156123de578081fd5b6123e784612351565b92506123f560208501612351565b9150604084013590509250925092565b600080600080600080600060e0888a03121561241f578283fd5b61242888612351565b965061243660208901612351565b955060408801359450606088013593506124526080890161236d565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215612480578182fd5b61248983612351565b946020939093013593505050565b60008060008060008060c087890312156124af578182fd5b6124b887612351565b955060208701359450604087013593506124d46060880161236d565b92506080870135915060a087013590509295509295509295565b60008060408385031215612500578182fd5b61250983612351565b9150602083013563ffffffff81168114612521578182fd5b809150509250929050565b600080600060408486031215612540578283fd5b833567ffffffffffffffff80821115612557578485fd5b818601915086601f83011261256a578485fd5b813581811115612578578586fd5b8760208260061b850101111561258c578586fd5b6020928301989097509590910135949350505050565b6000602082840312156125b3578081fd5b5035919050565b6000602080835283518082850152825b818110156125e6578581018301518582016040015282016125ca565b818111156125f75783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115612655576126556126e1565b500190565b60008261267557634e487b7160e01b81526012600452602481fd5b500490565b60008282101561268c5761268c6126e1565b500390565b600181811c908216806126a557607f821691505b60208210811415611c0a57634e487b7160e01b600052602260045260246000fd5b60006000198214156126da576126da6126e1565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e73df971a2b1b5dcbcf8c53c335af83bf3e2c6db99f2ceb2f3222422bda350f564736f6c63430008040033";

export class GoldenTokenV2__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GoldenTokenV2> {
    return super.deploy(overrides || {}) as Promise<GoldenTokenV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GoldenTokenV2 {
    return super.attach(address) as GoldenTokenV2;
  }
  connect(signer: Signer): GoldenTokenV2__factory {
    return super.connect(signer) as GoldenTokenV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GoldenTokenV2Interface {
    return new utils.Interface(_abi) as GoldenTokenV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GoldenTokenV2 {
    return new Contract(address, _abi, signerOrProvider) as GoldenTokenV2;
  }
}
